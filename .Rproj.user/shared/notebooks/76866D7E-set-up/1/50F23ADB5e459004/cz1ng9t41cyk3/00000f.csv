"0",""
"0","library(tidyverse)"
"0","library(truncnorm)"
"0","library(extraDistr)"
"0","library(EnvStats)"
"0","library(janitor)"
"0","library(kde1d)"
"0",""
"0","set.seed(123)"
"0",""
"0","##write function to verify that proportions sum to 1"
"0","check_sum <- function(x){"
"0","  if(sum(x)==1){"
"0","    return(sum(x))"
"0","    }"
"0","  stopifnot(sum(x)==1)"
"0","}"
"0",""
"0",""
"0","# sample one set probabilities multiplied by other sets of probabilities across rows"
"0"," sample_row <- function(row) {"
"0","  return(sum(row[1:4]*row[5:8]))"
"0","}"
"0",""
"0","#sample from the beta distribution by specifying the mean proportion an its standard deviation"
"0","sample_beta <- function(mean_val, sd_val) {"
"0","  n <- 100000"
"0","  # calculate alpha and beta parameters"
"0","  var_val <- sd_val^2"
"0","  alpha <- ((1 - mean_val) / var_val - 1 / mean_val) * mean_val^2"
"0","  beta <- alpha * (1 / mean_val - 1)"
"0","  # Check and adjust alpha and beta to ensure they are valid for the beta distribution"
"0","  if (alpha <= 0 | beta <= 0) {"
"0","    stop(""Invalid shape parameters: alpha and beta must be greater than 0."")"
"0","  }"
"0","  # sample from beta distribution"
"0","  return(rbeta(n, alpha, beta))"
"0","}"
"0",""
"0","#sample from lognormal distribution"
"0","sample_logn<- function(mean, sd) {"
"0","  logn_dist<-rlnorm(n = 100000, meanlog = log(mean^2 / sqrt(mean^2 + sd^2)),"
"0","                    sdlog = sqrt(log(1 + (sd^2/mean^2))))"
"0","  return(logn_dist)"
"0","}"
"0",""
"0","sample_trunclogn <- function(n_value, mean, sd, min_value, max_value){"
"0","  trunclogn_dist<-rlnormTrunc(n = n_value, meanlog = log(mean^2 / sqrt(mean^2 + sd^2)),"
"0","                    sdlog = sqrt(log(1 + (sd^2/mean^2))),"
"0","                    min=min_value, max=max_value)"
"0","  return(trunclogn_dist)"
"0","}"
