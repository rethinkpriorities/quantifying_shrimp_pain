{"title":"Results","markdown":{"yaml":{"output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Results","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n{{< include _functions_data.qmd >}}\n\n\n\n\nNow we put the results from each welfare threat into one table.\n\n```{r}\n#| echo: false\n#| output: false\n#| eval: true\n\noptions(scipen=999)\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(patchwork)\n\n\nmy_files <- list.files(path=\"../results\", pattern='\\\\.csv$', full.names=TRUE)\n\nall_csv <- lapply(my_files, read.csv,)\n\nnames(all_csv) <- gsub(\".csv\",\"\",\n                       list.files(\"../results\", pattern='\\\\.csv$', full.names = FALSE), fixed = TRUE)\n\nlist2env(all_csv, globalenv())\n\nlibrary(kableExtra)\n\n\nshow_table=function(x){\nkable(x, table.attr = 'data-quarto-disable-processing=\"true\"', align=\"c\") %>%\n    kableExtra::kable_styling(full_width=FALSE, position=\"center\", font_size=12,\n                  bootstrap_options = c(\"condensed\")) \n}\n\n```\n\nWe calculate the total time in disabling-equivalent pain, using all of the 100,000 simulations. Then, we calculate the 5th, 50th, and 95th percentiles for the total time in pain.\n```{r}\n#| output: false\n# load disabling-equivalent estimates\n\ntotals_files <- list.files(path=\"../results/full_results\", pattern='\\\\.csv$', full.names=TRUE)\n\ntotals_csv <- lapply(totals_files, read.csv,)\n\nnames(totals_csv) <- gsub(\".csv\",\"\",\n                       list.files(\"../results/full_results\", pattern='\\\\.csv$', full.names = FALSE), fixed = TRUE)\n\nlist2env(totals_csv, globalenv())\n```\n\n```{r}\n\n# putting all the disabling-equivalent estimates (100,000 for each threat) into one data frame\ntotals<-data.frame(Eyestalk_ablation = ablation[,5],\n              `High_un-ionized_ammonia` = ammon[,5],\n              High_stocking_density=dens[,5],\n              Biosecurity_failures=disease[,5],\n              Harvest=harvest[,5],\n              High_temperature=hitemp[,5],\n              Hunger=hunger[,5],\n              Low_dissolved_oxygen=lowdo[,5],\n              Low_temperature=lowtemp[,5],\n              Malnutrition=malnu[,5],\n              Waterless_transport=nowater[,5],\n              Nonoptimal_pH=ph[,5],\n              Pollutants=pollute[,5],\n              Predators=pred[,5],\n              Low_salinity=salin[,5],\n              `Ice-slurry_slaughter`=slaught[,5],\n              Lack_of_substrate=subst[,5],\n              `Water-based_transport`=water[,5])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ntotals <- totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ntotals_summary<-as.data.frame(cbind(welfare_threat=\"Total\", round(rbind(\n  quantile(x=totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(totals$Total)))\ntotals_summary[,2:5]<-as.numeric(totals_summary[,2:5])\n\ntotals_summary\n```\n\n\n```{r}\n\n## Results\n\n#Putting all the outputs into a table:\n\ncomparison_table<-rbind(hunger_summary, malnu_summary, lowdo_summary, hitemp_summary, lowtemp_summary, salin_summary, ph_summary, ammon_summary, pollute_summary, density_summary, subst_summary, pred_summary, ablation_summary, nowater_summary, water_summary, harvest_summary, slaught_summary, disease_summary)\n\ncolnames(comparison_table)<-c(\"welfare_threat\",\"5%\", \"50%\", \"95%\", \"Mean\")\n\n# keeping only the disabling-equivalent pain estimations, which occur every 5th row\ndiseq_results<-comparison_table %>%\n  dplyr::filter(str_detect(welfare_threat, \"Disabling-Equivalent\"))\n\n# arranging the rows in descending order and adding a total row.\nresults<-as.data.frame(diseq_results, rownames=TRUE) %>%\n  arrange(desc(Mean)) %>%\n  rbind(totals_summary) %>%\n  column_to_rownames(\"welfare_threat\") %>%\n  mutate(`5%` = signif(`5%`, pmax(2,trunc(log10(`5%`)+1))), # rounding all results to 2 significant figure, except those with more than two significant digits before the decimal point (log10 counts the digits)\n         `50%` = signif(`50%`, pmax(2,trunc(log10(`50%`)+1))),\n         `95%` = signif(`95%`, pmax(2,trunc(log10(`95%`)+1))),\n          Mean = signif(Mean, pmax(2,trunc(log10(Mean)+1))),\n         `Mean (minutes)`=signif(Mean*60, pmax(2,trunc(log10(Mean*60)+1)))) %>% # displaying small results in minutes\n  mutate(`Mean (minutes)` = ifelse(Mean>1, \"â€”\", `Mean (minutes)`)) %>% # removing display of large results in minutes\n  mutate(across(where(is.numeric), as.character))\n\n# cleaning up the row names\nrownames(results)<-gsub(\"Disabling-Equivalent_\",\"\", rownames(results))\nrownames(results)<-gsub(\"_\",\" \", rownames(results))\n\n\n# print results\nshow_table(results) %>%\n  row_spec(19, bold = T, background = \"lightgrey\")\n\n```\n\nWe also want to see the results broken down by pain type.\n\n```{r}\nannoying_totals<-data.frame(Eyestalk_ablation = ablation[,1],\n              `High_un-ionized_ammonia` = ammon[,1],\n              High_stocking_density=dens[,1],\n              Biosecurity_failures=disease[,1],\n              Harvest=harvest[,1],\n              High_temperature=hitemp[,1],\n              Hunger=hunger[,1],\n              Low_dissolved_oxygen=lowdo[,1],\n              Low_temperature=lowtemp[,1],\n              Malnutrition=malnu[,1],\n              Waterless_transport=nowater[,1],\n              Nonoptimal_pH=ph[,1],\n              Pollutants=pollute[,1],\n              Predators=pred[,1],\n              Low_salinity=salin[,1],\n              `Ice-slurry_slaughter`=slaught[,1],\n              Lack_of_substrate=subst[,1],\n              `Water-based_transport`=water[,1])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nannoying_totals <- annoying_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nannoying_totals_summary<-as.data.frame(cbind(welfare_threat=\"Annoying\", round(rbind(\n  quantile(x=annoying_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(annoying_totals$Total)))\nannoying_totals_summary[,2:5]<-as.numeric(annoying_totals_summary[,2:5])\n\nannoying_totals_summary\n\n## Hurtful totals\nhurtful_totals<-data.frame(Eyestalk_ablation = ablation[,2],\n              `High_un-ionized_ammonia` = ammon[,2],\n              High_stocking_density=dens[,2],\n              Biosecurity_failures=disease[,2],\n              Harvest=harvest[,2],\n              High_temperature=hitemp[,2],\n              Hunger=hunger[,2],\n              Low_dissolved_oxygen=lowdo[,2],\n              Low_temperature=lowtemp[,2],\n              Malnutrition=malnu[,2],\n              Waterless_transport=nowater[,2],\n              Nonoptimal_pH=ph[,2],\n              Pollutants=pollute[,2],\n              Predators=pred[,2],\n              Low_salinity=salin[,2],\n              `Ice-slurry_slaughter`=slaught[,2],\n              Lack_of_substrate=subst[,2],\n              `Water-based_transport`=water[,2])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nhurtful_totals <- hurtful_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nhurtful_totals_summary<-as.data.frame(cbind(welfare_threat=\"Hurtful\", round(rbind(\n  quantile(x=hurtful_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(hurtful_totals$Total)))\nhurtful_totals_summary[,2:5]<-as.numeric(hurtful_totals_summary[,2:5])\n\nhurtful_totals_summary\n\n## Disabling\ndisabling_totals<-data.frame(Eyestalk_ablation = ablation[,3],\n              `High_un-ionized_ammonia` = ammon[,3],\n              High_stocking_density=dens[,3],\n              Biosecurity_failures=disease[,3],\n              Harvest=harvest[,3],\n              High_temperature=hitemp[,3],\n              Hunger=hunger[,3],\n              Low_dissolved_oxygen=lowdo[,3],\n              Low_temperature=lowtemp[,3],\n              Malnutrition=malnu[,3],\n              Waterless_transport=nowater[,3],\n              Nonoptimal_pH=ph[,3],\n              Pollutants=pollute[,3],\n              Predators=pred[,3],\n              Low_salinity=salin[,3],\n              `Ice-slurry_slaughter`=slaught[,3],\n              Lack_of_substrate=subst[,3],\n              `Water-based_transport`=water[,3])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ndisabling_totals <- disabling_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ndisabling_totals_summary<-as.data.frame(cbind(welfare_threat=\"Disabling\", round(rbind(\n  quantile(x=disabling_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(disabling_totals$Total)))\ndisabling_totals_summary[,2:5]<-as.numeric(disabling_totals_summary[,2:5])\n\ndisabling_totals_summary\n\n## Ecruciating\nexcruciating_totals<-data.frame(Eyestalk_ablation = ablation[,4],\n              `High_un-ionized_ammonia` = ammon[,4],\n              High_stocking_density=dens[,4],\n              Biosecurity_failures=disease[,4],\n              Harvest=harvest[,4],\n              High_temperature=hitemp[,4],\n              Hunger=hunger[,4],\n              Low_dissolved_oxygen=lowdo[,4],\n              Low_temperature=lowtemp[,4],\n              Malnutrition=malnu[,4],\n              Waterless_transport=nowater[,4],\n              Nonoptimal_pH=ph[,4],\n              Pollutants=pollute[,4],\n              Predators=pred[,4],\n              Low_salinity=salin[,4],\n              `Ice-slurry_slaughter`=slaught[,4],\n              Lack_of_substrate=subst[,4],\n              `Water-based_transport`=water[,4])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nexcruciating_totals <- excruciating_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nexcruciating_totals_summary<-as.data.frame(cbind(welfare_threat=\"Excruciating\", round(rbind(\n  quantile(x=excruciating_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(excruciating_totals$Total)))\nexcruciating_totals_summary[,2:5]<-as.numeric(excruciating_totals_summary[,2:5])\n\nexcruciating_totals_summary\n\nallpain_totals<-data.frame(annoying_totals$Total,\n                           hurtful_totals$Total,\n                           disabling_totals$Total,\n                           excruciating_totals$Total)\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nallpain_totals <- allpain_totals %>%\n  mutate(Total=rowSums(allpain_totals))\n\n# finding the 5th, 50th, and 95th percentiles and mean\nallpain_totals_summary<-as.data.frame(cbind(welfare_threat=\"Total (pain categories summed)\", round(rbind(\n  quantile(x=allpain_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(allpain_totals$Total)))\nallpain_totals_summary[,2:5]<-as.numeric(allpain_totals_summary[,2:5])\n\nallpain_totals_summary\n\ntotal_byintensity<-rbind(annoying_totals_summary, hurtful_totals_summary,\n                         disabling_totals_summary, excruciating_totals_summary)\n\npercent<-total_byintensity %>%\n  mutate(as.percent=(Mean/sum(Mean))*100)\n\n\npaintype_results<-plyr::rbind.fill(percent, allpain_totals_summary)\nshow_table(paintype_results)\n```\n\n\n\n```{r}\n\nresults_byintensity<-comparison_table %>%\n  dplyr::filter(!str_detect(welfare_threat, \"Disabling-Equivalent\")) %>%\n  separate_wider_delim(welfare_threat, \"_\", names=c(\"pain_type\", \"welfare_threat\"))\n\npercent_byintensity<-results_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(percent=Mean/sum(Mean))\n\npercent_total<-percent_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(total=sum(Mean)) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 1 ~ round(.x, digits = 0), TRUE ~ round(.x, digits = 4))) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 0.001 ~ round(.x, digits = 2), TRUE ~ round(.x, digits = 4)))\n\n# total_by.intensity<-reframe(results_byintensity, .by=pain_type, \n#                              total=sum(Mean), \n#                              total.95=sum(`95%`),\n#                             total.50=sum(`50%`),\n#                              total.5=sum(`5%`)) %>%\n#   mutate(percent.total=total/sum(total))\n\npercent_overall<-data.frame(\n  pain_type=c(\"Annoying\", \"Hurtful\", \"Disabling\", \"Excruciating\"),\n  welfare_threat = rep(\"Total\", 4), \n  `5%`=total_byintensity$`5%`,\n  `50%`=total_byintensity$`50%`,\n  `95%`=total_byintensity$`95%`,\n  Mean=total_byintensity$Mean,\n  percent=total_byintensity$Mean/sum(total_byintensity$Mean),\n  total=rep(sum(total_byintensity$Mean), 4))\ncolnames(percent_overall)<-colnames(percent_total)\n\nresults_paintype<-rbind(percent_total, percent_overall)\n\nresults_paintype$welfare_threat<-gsub(\"subst\", \"Lack of substrate\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"dens\", \"High stocking density\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"salin\", \"Low salinity\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ammon\", \"High un-ionized ammonia\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ph\", \"Nonoptimal pH\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowDO\", \"Low dissolved oxygen\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hunger\", \"Hunger\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hitemp\", \"High temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"malnu\", \"Malnutrition\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"nowater\", \"Waterless transport\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"water\", \"Water-based transport\" , results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pollute\", \"Pollutants\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"harvest\", \"Harvest\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"slaught\", \"Ice-Slurry slaughter\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ablation\", \"Eyestalk ablation\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pred\", \"Predators\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowtemp\", \"Low temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"disease\", \"Biosecurity failures\", results_paintype$welfare_threat)\n\nresults_paintype$welfare_threat<-factor(results_paintype$welfare_threat,\n                                        levels=c(rownames(results)))\n\nresults_paintype$pain_type<-factor(results_paintype$pain_type, levels=c(\"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\n\n```\n\nNow we can plot the results:\n\n```{r}\n#| warning: false\n#| output: false\n\nresults_paintype$welfare_threat<-factor(results_paintype$welfare_threat, levels=c(unique(rownames(results))))\n\nresults_diseq<-results %>%\n   rownames_to_column(var=\"welfare_threat\")\n\nresults_diseq$welfare_threat<-factor(results_diseq$welfare_threat,\n                                    levels=c(unique(rownames(results))))\n \nresults_diseq$Pain<-rep(\"Disabling-equivalent\")\n\nresults_diseq$Pain<-factor(results_diseq$Pain, levels=c(\n  \"Disabling-equivalent\", \"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\n# absolute values\npaintype.plot<-ggplot(results_paintype) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=Mean, xmin=`5%`, xmax=`95%`, color=pain_type), \n                  position = position_dodge2(width = 1, padding = 2), \n                  stat=\"identity\", show.legend=FALSE,\n                  size=1, linewidth=1) +\n  facet_wrap(~fct_rev(pain_type), scales=\"free_x\", ncol=3) +\n  scale_color_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity\") +\n  theme(axis.title.x = element_text(hjust=0.15),\n        axis.text=element_text(size=12),\n        strip.text = element_text(size=13))\n\ndiseq.plot<-ggplot(results_diseq) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=as.numeric(Mean), xmin=as.numeric(`5%`), xmax=as.numeric(`95%`), color=Pain), na.rm=TRUE, position = position_dodge2(width = 1, padding = 2), stat=\"identity\", show.legend = TRUE, size=1, linewidth=1) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity    \") +\n  scale_color_manual(values=c(\n    \"gray30\", \"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\"), drop=FALSE) +\n  theme(legend.position=\"bottom\",\n        legend.text = element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n        legend.title=element_text(size=13),\n        axis.text.y = element_blank(),\n        axis.text.x=element_text(size=12),\n        axis.ticks.y=element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=13))+\n  facet_wrap(~Pain)\n\nlayout <- c(\n  area(t = 1, l = 1, b = 200, r = 220),\n  area(t = 105, l = 72, b = 200, r = 220)\n)\n\n# using the patchwork package to arrange the plots\nfig1<-paintype.plot + diseq.plot +\n  plot_layout(design = layout, guides=\"collect\") & theme(legend.position = 'bottom', plot.caption = element_text(hjust = 0.7, size=12),\n  plot.margin = unit(c(top=.05,r=.1,b=.05,l=-.4), \"cm\")) \n\nfig1\n\n#ggsave(filename=\"../results/fig1.png\", plot=fig1, width=14, height=8.5)\n```\n\n![](/results/fig1.png)\n\nWe also plot the proportion of pain of each intensity for each welfare threat:\n\n```{r}\n#| warnings: false\n#| output: false\n\n# stacked percentage bars\nfig3<-ggplot(results_paintype) +\n  geom_bar(aes(y=fct_rev(welfare_threat), x=percent, fill=pain_type), position =\"stack\", stat=\"identity\") +\n  scale_fill_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n    geom_text(aes(y=welfare_threat, x=1.01, label=formatC(total, format=\"fg\"),\n                  hjust=0) , na.rm=TRUE, fontface=c(rep(\"plain\", 72),\n                                                      rep(\"bold\", 4 )), size=5) +\n  geom_text(aes(y=12, x=1.1), label=expression(bold('Total hours')), \n            hjust=0, size=5, lineheight = 0.7, angle=270) +\n  theme( panel.grid.major = element_line(color=\"white\"),\n         panel.grid.minor = element_line(colour = \"white\"),\n         panel.background = element_rect(fill = \"white\"),\n         axis.ticks.y = element_blank(),\n         axis.text.y = element_text(\n           face=c( \"bold\", rep(\"plain\", 18)), size=12, margin = margin(r = 0)),\n         axis.text.x=element_text(size=13),\n         axis.title.x=element_text(size=13, hjust=0.425),\n         legend.position=\"bottom\", \n         plot.margin=margin(r=1, l=1, t=20),\n         legend.text=element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n         legend.title=element_text(size=13)) +\n  labs(x=\"Proportion of pain\", y=\"\", fill=\"Pain Intensity\") +\n  scale_x_continuous(limits=c(0,1.15), expand=c(0,0), breaks = c(0.0, 0.25, 0.5, 0.75, 1)) +\n  coord_cartesian(xlim=c(0,1.15), clip = 'off') +\n  scale_y_discrete(expand=c(0,0))\nfig3\n\nggsave(filename=\"../results/fig3.png\", plot=fig3, width=9.5, height=5.5)\n```\n\n![](/results/fig3.png)\n","srcMarkdownNoYaml":"\n\n\n{{< include _functions_data.qmd >}}\n\n\n\n# Results {.unnumbered}\n\nNow we put the results from each welfare threat into one table.\n\n```{r}\n#| echo: false\n#| output: false\n#| eval: true\n\noptions(scipen=999)\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(patchwork)\n\n\nmy_files <- list.files(path=\"../results\", pattern='\\\\.csv$', full.names=TRUE)\n\nall_csv <- lapply(my_files, read.csv,)\n\nnames(all_csv) <- gsub(\".csv\",\"\",\n                       list.files(\"../results\", pattern='\\\\.csv$', full.names = FALSE), fixed = TRUE)\n\nlist2env(all_csv, globalenv())\n\nlibrary(kableExtra)\n\n\nshow_table=function(x){\nkable(x, table.attr = 'data-quarto-disable-processing=\"true\"', align=\"c\") %>%\n    kableExtra::kable_styling(full_width=FALSE, position=\"center\", font_size=12,\n                  bootstrap_options = c(\"condensed\")) \n}\n\n```\n\nWe calculate the total time in disabling-equivalent pain, using all of the 100,000 simulations. Then, we calculate the 5th, 50th, and 95th percentiles for the total time in pain.\n```{r}\n#| output: false\n# load disabling-equivalent estimates\n\ntotals_files <- list.files(path=\"../results/full_results\", pattern='\\\\.csv$', full.names=TRUE)\n\ntotals_csv <- lapply(totals_files, read.csv,)\n\nnames(totals_csv) <- gsub(\".csv\",\"\",\n                       list.files(\"../results/full_results\", pattern='\\\\.csv$', full.names = FALSE), fixed = TRUE)\n\nlist2env(totals_csv, globalenv())\n```\n\n```{r}\n\n# putting all the disabling-equivalent estimates (100,000 for each threat) into one data frame\ntotals<-data.frame(Eyestalk_ablation = ablation[,5],\n              `High_un-ionized_ammonia` = ammon[,5],\n              High_stocking_density=dens[,5],\n              Biosecurity_failures=disease[,5],\n              Harvest=harvest[,5],\n              High_temperature=hitemp[,5],\n              Hunger=hunger[,5],\n              Low_dissolved_oxygen=lowdo[,5],\n              Low_temperature=lowtemp[,5],\n              Malnutrition=malnu[,5],\n              Waterless_transport=nowater[,5],\n              Nonoptimal_pH=ph[,5],\n              Pollutants=pollute[,5],\n              Predators=pred[,5],\n              Low_salinity=salin[,5],\n              `Ice-slurry_slaughter`=slaught[,5],\n              Lack_of_substrate=subst[,5],\n              `Water-based_transport`=water[,5])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ntotals <- totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ntotals_summary<-as.data.frame(cbind(welfare_threat=\"Total\", round(rbind(\n  quantile(x=totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(totals$Total)))\ntotals_summary[,2:5]<-as.numeric(totals_summary[,2:5])\n\ntotals_summary\n```\n\n\n```{r}\n\n## Results\n\n#Putting all the outputs into a table:\n\ncomparison_table<-rbind(hunger_summary, malnu_summary, lowdo_summary, hitemp_summary, lowtemp_summary, salin_summary, ph_summary, ammon_summary, pollute_summary, density_summary, subst_summary, pred_summary, ablation_summary, nowater_summary, water_summary, harvest_summary, slaught_summary, disease_summary)\n\ncolnames(comparison_table)<-c(\"welfare_threat\",\"5%\", \"50%\", \"95%\", \"Mean\")\n\n# keeping only the disabling-equivalent pain estimations, which occur every 5th row\ndiseq_results<-comparison_table %>%\n  dplyr::filter(str_detect(welfare_threat, \"Disabling-Equivalent\"))\n\n# arranging the rows in descending order and adding a total row.\nresults<-as.data.frame(diseq_results, rownames=TRUE) %>%\n  arrange(desc(Mean)) %>%\n  rbind(totals_summary) %>%\n  column_to_rownames(\"welfare_threat\") %>%\n  mutate(`5%` = signif(`5%`, pmax(2,trunc(log10(`5%`)+1))), # rounding all results to 2 significant figure, except those with more than two significant digits before the decimal point (log10 counts the digits)\n         `50%` = signif(`50%`, pmax(2,trunc(log10(`50%`)+1))),\n         `95%` = signif(`95%`, pmax(2,trunc(log10(`95%`)+1))),\n          Mean = signif(Mean, pmax(2,trunc(log10(Mean)+1))),\n         `Mean (minutes)`=signif(Mean*60, pmax(2,trunc(log10(Mean*60)+1)))) %>% # displaying small results in minutes\n  mutate(`Mean (minutes)` = ifelse(Mean>1, \"â€”\", `Mean (minutes)`)) %>% # removing display of large results in minutes\n  mutate(across(where(is.numeric), as.character))\n\n# cleaning up the row names\nrownames(results)<-gsub(\"Disabling-Equivalent_\",\"\", rownames(results))\nrownames(results)<-gsub(\"_\",\" \", rownames(results))\n\n\n# print results\nshow_table(results) %>%\n  row_spec(19, bold = T, background = \"lightgrey\")\n\n```\n\nWe also want to see the results broken down by pain type.\n\n```{r}\nannoying_totals<-data.frame(Eyestalk_ablation = ablation[,1],\n              `High_un-ionized_ammonia` = ammon[,1],\n              High_stocking_density=dens[,1],\n              Biosecurity_failures=disease[,1],\n              Harvest=harvest[,1],\n              High_temperature=hitemp[,1],\n              Hunger=hunger[,1],\n              Low_dissolved_oxygen=lowdo[,1],\n              Low_temperature=lowtemp[,1],\n              Malnutrition=malnu[,1],\n              Waterless_transport=nowater[,1],\n              Nonoptimal_pH=ph[,1],\n              Pollutants=pollute[,1],\n              Predators=pred[,1],\n              Low_salinity=salin[,1],\n              `Ice-slurry_slaughter`=slaught[,1],\n              Lack_of_substrate=subst[,1],\n              `Water-based_transport`=water[,1])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nannoying_totals <- annoying_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nannoying_totals_summary<-as.data.frame(cbind(welfare_threat=\"Annoying\", round(rbind(\n  quantile(x=annoying_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(annoying_totals$Total)))\nannoying_totals_summary[,2:5]<-as.numeric(annoying_totals_summary[,2:5])\n\nannoying_totals_summary\n\n## Hurtful totals\nhurtful_totals<-data.frame(Eyestalk_ablation = ablation[,2],\n              `High_un-ionized_ammonia` = ammon[,2],\n              High_stocking_density=dens[,2],\n              Biosecurity_failures=disease[,2],\n              Harvest=harvest[,2],\n              High_temperature=hitemp[,2],\n              Hunger=hunger[,2],\n              Low_dissolved_oxygen=lowdo[,2],\n              Low_temperature=lowtemp[,2],\n              Malnutrition=malnu[,2],\n              Waterless_transport=nowater[,2],\n              Nonoptimal_pH=ph[,2],\n              Pollutants=pollute[,2],\n              Predators=pred[,2],\n              Low_salinity=salin[,2],\n              `Ice-slurry_slaughter`=slaught[,2],\n              Lack_of_substrate=subst[,2],\n              `Water-based_transport`=water[,2])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nhurtful_totals <- hurtful_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nhurtful_totals_summary<-as.data.frame(cbind(welfare_threat=\"Hurtful\", round(rbind(\n  quantile(x=hurtful_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(hurtful_totals$Total)))\nhurtful_totals_summary[,2:5]<-as.numeric(hurtful_totals_summary[,2:5])\n\nhurtful_totals_summary\n\n## Disabling\ndisabling_totals<-data.frame(Eyestalk_ablation = ablation[,3],\n              `High_un-ionized_ammonia` = ammon[,3],\n              High_stocking_density=dens[,3],\n              Biosecurity_failures=disease[,3],\n              Harvest=harvest[,3],\n              High_temperature=hitemp[,3],\n              Hunger=hunger[,3],\n              Low_dissolved_oxygen=lowdo[,3],\n              Low_temperature=lowtemp[,3],\n              Malnutrition=malnu[,3],\n              Waterless_transport=nowater[,3],\n              Nonoptimal_pH=ph[,3],\n              Pollutants=pollute[,3],\n              Predators=pred[,3],\n              Low_salinity=salin[,3],\n              `Ice-slurry_slaughter`=slaught[,3],\n              Lack_of_substrate=subst[,3],\n              `Water-based_transport`=water[,3])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ndisabling_totals <- disabling_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ndisabling_totals_summary<-as.data.frame(cbind(welfare_threat=\"Disabling\", round(rbind(\n  quantile(x=disabling_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(disabling_totals$Total)))\ndisabling_totals_summary[,2:5]<-as.numeric(disabling_totals_summary[,2:5])\n\ndisabling_totals_summary\n\n## Ecruciating\nexcruciating_totals<-data.frame(Eyestalk_ablation = ablation[,4],\n              `High_un-ionized_ammonia` = ammon[,4],\n              High_stocking_density=dens[,4],\n              Biosecurity_failures=disease[,4],\n              Harvest=harvest[,4],\n              High_temperature=hitemp[,4],\n              Hunger=hunger[,4],\n              Low_dissolved_oxygen=lowdo[,4],\n              Low_temperature=lowtemp[,4],\n              Malnutrition=malnu[,4],\n              Waterless_transport=nowater[,4],\n              Nonoptimal_pH=ph[,4],\n              Pollutants=pollute[,4],\n              Predators=pred[,4],\n              Low_salinity=salin[,4],\n              `Ice-slurry_slaughter`=slaught[,4],\n              Lack_of_substrate=subst[,4],\n              `Water-based_transport`=water[,4])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nexcruciating_totals <- excruciating_totals %>%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nexcruciating_totals_summary<-as.data.frame(cbind(welfare_threat=\"Excruciating\", round(rbind(\n  quantile(x=excruciating_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(excruciating_totals$Total)))\nexcruciating_totals_summary[,2:5]<-as.numeric(excruciating_totals_summary[,2:5])\n\nexcruciating_totals_summary\n\nallpain_totals<-data.frame(annoying_totals$Total,\n                           hurtful_totals$Total,\n                           disabling_totals$Total,\n                           excruciating_totals$Total)\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nallpain_totals <- allpain_totals %>%\n  mutate(Total=rowSums(allpain_totals))\n\n# finding the 5th, 50th, and 95th percentiles and mean\nallpain_totals_summary<-as.data.frame(cbind(welfare_threat=\"Total (pain categories summed)\", round(rbind(\n  quantile(x=allpain_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(allpain_totals$Total)))\nallpain_totals_summary[,2:5]<-as.numeric(allpain_totals_summary[,2:5])\n\nallpain_totals_summary\n\ntotal_byintensity<-rbind(annoying_totals_summary, hurtful_totals_summary,\n                         disabling_totals_summary, excruciating_totals_summary)\n\npercent<-total_byintensity %>%\n  mutate(as.percent=(Mean/sum(Mean))*100)\n\n\npaintype_results<-plyr::rbind.fill(percent, allpain_totals_summary)\nshow_table(paintype_results)\n```\n\n\n\n```{r}\n\nresults_byintensity<-comparison_table %>%\n  dplyr::filter(!str_detect(welfare_threat, \"Disabling-Equivalent\")) %>%\n  separate_wider_delim(welfare_threat, \"_\", names=c(\"pain_type\", \"welfare_threat\"))\n\npercent_byintensity<-results_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(percent=Mean/sum(Mean))\n\npercent_total<-percent_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(total=sum(Mean)) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 1 ~ round(.x, digits = 0), TRUE ~ round(.x, digits = 4))) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 0.001 ~ round(.x, digits = 2), TRUE ~ round(.x, digits = 4)))\n\n# total_by.intensity<-reframe(results_byintensity, .by=pain_type, \n#                              total=sum(Mean), \n#                              total.95=sum(`95%`),\n#                             total.50=sum(`50%`),\n#                              total.5=sum(`5%`)) %>%\n#   mutate(percent.total=total/sum(total))\n\npercent_overall<-data.frame(\n  pain_type=c(\"Annoying\", \"Hurtful\", \"Disabling\", \"Excruciating\"),\n  welfare_threat = rep(\"Total\", 4), \n  `5%`=total_byintensity$`5%`,\n  `50%`=total_byintensity$`50%`,\n  `95%`=total_byintensity$`95%`,\n  Mean=total_byintensity$Mean,\n  percent=total_byintensity$Mean/sum(total_byintensity$Mean),\n  total=rep(sum(total_byintensity$Mean), 4))\ncolnames(percent_overall)<-colnames(percent_total)\n\nresults_paintype<-rbind(percent_total, percent_overall)\n\nresults_paintype$welfare_threat<-gsub(\"subst\", \"Lack of substrate\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"dens\", \"High stocking density\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"salin\", \"Low salinity\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ammon\", \"High un-ionized ammonia\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ph\", \"Nonoptimal pH\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowDO\", \"Low dissolved oxygen\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hunger\", \"Hunger\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hitemp\", \"High temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"malnu\", \"Malnutrition\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"nowater\", \"Waterless transport\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"water\", \"Water-based transport\" , results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pollute\", \"Pollutants\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"harvest\", \"Harvest\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"slaught\", \"Ice-Slurry slaughter\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ablation\", \"Eyestalk ablation\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pred\", \"Predators\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowtemp\", \"Low temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"disease\", \"Biosecurity failures\", results_paintype$welfare_threat)\n\nresults_paintype$welfare_threat<-factor(results_paintype$welfare_threat,\n                                        levels=c(rownames(results)))\n\nresults_paintype$pain_type<-factor(results_paintype$pain_type, levels=c(\"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\n\n```\n\nNow we can plot the results:\n\n```{r}\n#| warning: false\n#| output: false\n\nresults_paintype$welfare_threat<-factor(results_paintype$welfare_threat, levels=c(unique(rownames(results))))\n\nresults_diseq<-results %>%\n   rownames_to_column(var=\"welfare_threat\")\n\nresults_diseq$welfare_threat<-factor(results_diseq$welfare_threat,\n                                    levels=c(unique(rownames(results))))\n \nresults_diseq$Pain<-rep(\"Disabling-equivalent\")\n\nresults_diseq$Pain<-factor(results_diseq$Pain, levels=c(\n  \"Disabling-equivalent\", \"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\n# absolute values\npaintype.plot<-ggplot(results_paintype) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=Mean, xmin=`5%`, xmax=`95%`, color=pain_type), \n                  position = position_dodge2(width = 1, padding = 2), \n                  stat=\"identity\", show.legend=FALSE,\n                  size=1, linewidth=1) +\n  facet_wrap(~fct_rev(pain_type), scales=\"free_x\", ncol=3) +\n  scale_color_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity\") +\n  theme(axis.title.x = element_text(hjust=0.15),\n        axis.text=element_text(size=12),\n        strip.text = element_text(size=13))\n\ndiseq.plot<-ggplot(results_diseq) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=as.numeric(Mean), xmin=as.numeric(`5%`), xmax=as.numeric(`95%`), color=Pain), na.rm=TRUE, position = position_dodge2(width = 1, padding = 2), stat=\"identity\", show.legend = TRUE, size=1, linewidth=1) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity    \") +\n  scale_color_manual(values=c(\n    \"gray30\", \"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\"), drop=FALSE) +\n  theme(legend.position=\"bottom\",\n        legend.text = element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n        legend.title=element_text(size=13),\n        axis.text.y = element_blank(),\n        axis.text.x=element_text(size=12),\n        axis.ticks.y=element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=13))+\n  facet_wrap(~Pain)\n\nlayout <- c(\n  area(t = 1, l = 1, b = 200, r = 220),\n  area(t = 105, l = 72, b = 200, r = 220)\n)\n\n# using the patchwork package to arrange the plots\nfig1<-paintype.plot + diseq.plot +\n  plot_layout(design = layout, guides=\"collect\") & theme(legend.position = 'bottom', plot.caption = element_text(hjust = 0.7, size=12),\n  plot.margin = unit(c(top=.05,r=.1,b=.05,l=-.4), \"cm\")) \n\nfig1\n\n#ggsave(filename=\"../results/fig1.png\", plot=fig1, width=14, height=8.5)\n```\n\n![](/results/fig1.png)\n\nWe also plot the proportion of pain of each intensity for each welfare threat:\n\n```{r}\n#| warnings: false\n#| output: false\n\n# stacked percentage bars\nfig3<-ggplot(results_paintype) +\n  geom_bar(aes(y=fct_rev(welfare_threat), x=percent, fill=pain_type), position =\"stack\", stat=\"identity\") +\n  scale_fill_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n    geom_text(aes(y=welfare_threat, x=1.01, label=formatC(total, format=\"fg\"),\n                  hjust=0) , na.rm=TRUE, fontface=c(rep(\"plain\", 72),\n                                                      rep(\"bold\", 4 )), size=5) +\n  geom_text(aes(y=12, x=1.1), label=expression(bold('Total hours')), \n            hjust=0, size=5, lineheight = 0.7, angle=270) +\n  theme( panel.grid.major = element_line(color=\"white\"),\n         panel.grid.minor = element_line(colour = \"white\"),\n         panel.background = element_rect(fill = \"white\"),\n         axis.ticks.y = element_blank(),\n         axis.text.y = element_text(\n           face=c( \"bold\", rep(\"plain\", 18)), size=12, margin = margin(r = 0)),\n         axis.text.x=element_text(size=13),\n         axis.title.x=element_text(size=13, hjust=0.425),\n         legend.position=\"bottom\", \n         plot.margin=margin(r=1, l=1, t=20),\n         legend.text=element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n         legend.title=element_text(size=13)) +\n  labs(x=\"Proportion of pain\", y=\"\", fill=\"Pain Intensity\") +\n  scale_x_continuous(limits=c(0,1.15), expand=c(0,0), breaks = c(0.0, 0.25, 0.5, 0.75, 1)) +\n  coord_cartesian(xlim=c(0,1.15), clip = 'off') +\n  scale_y_discrete(expand=c(0,0))\nfig3\n\nggsave(filename=\"../results/fig3.png\", plot=fig3, width=9.5, height=5.5)\n```\n\n![](/results/fig3.png)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"results.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","editor":"source","grid":{"sidebar-width":"200px","body-width":"1200px","margin-width":"200px","gutter-width":"1.5rem"},"theme":"flatly","code-copy":true,"toc-expand":4,"callout-appearance":"simple","number-depth":3,"callout-icon":false,"editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}