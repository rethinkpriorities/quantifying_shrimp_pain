{
  "hash": "4a457c735514d26fb3be5314cfc15180",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Results {.unnumbered}\n\nNow we put the results from each welfare threat into one table.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Results\n\n#Putting all the outputs into a table:\n\ncomparison_table<-rbind(hunger_summary, malnu_summary, lowdo_summary, hitemp_summary, lowtemp_summary, salin_summary, ph_summary, ammon_summary, pollute_summary, density_summary, subst_summary, pred_summary, ablation_summary, nowater_summary, water_summary, harvest_summary, slaught_summary, disease_summary)\n\ncolnames(comparison_table)<-c(\"rownames\",\"5%\", \"50%\", \"95%\", \"Mean\")\n\n# keeping only the disabling-equivalent pain estimations, which occur every 5th row\nfinal_comparison_table<-comparison_table %>%\n  dplyr::filter(str_detect(rownames, \"Disabling-Equivalent\"))\n\n# arranging the rows in descending order and adding a total row.\nresults<-as.data.frame(final_comparison_table, rownames=TRUE) %>%\n  arrange(desc(Mean)) %>%\n  adorn_totals(\"row\") %>%\n  column_to_rownames(\"rownames\") %>%\n  mutate(`5%` = signif(`5%`, pmax(2,trunc(log10(`5%`)+1))), # rounding all results to 2 significant figure, except those with more than two significant digits before the decimal point (log10 counts the digits)\n         `50%` = signif(`50%`, pmax(2,trunc(log10(`50%`)+1))),\n         `95%` = signif(`95%`, pmax(2,trunc(log10(`95%`)+1))),\n          Mean = signif(Mean, pmax(2,trunc(log10(Mean)+1))),\n         `Mean (minutes)`=signif(Mean*60, pmax(2,trunc(log10(Mean*60)+1)))) %>% # displaying small results in minutes\n  mutate(`Mean (minutes)` = ifelse(Mean>1, \"—\", `Mean (minutes)`)) %>% # removing display of large results in minutes\n  mutate(across(where(is.numeric), as.character))\n\n# cleaning up the row names\nrownames(results)<-gsub(\"Disabling-Equivalent_\",\"\", rownames(results))\nrownames(results)<-gsub(\"_\",\" \", rownames(results))\n\n\n# print results\nshow_table(results) %>%\n  row_spec(19, bold = T, background = \"lightgrey\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table data-quarto-disable-processing=\"true\" class=\"table table-condensed\" style=\"font-size: 12px; width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> 5% </th>\n   <th style=\"text-align:center;\"> 50% </th>\n   <th style=\"text-align:center;\"> 95% </th>\n   <th style=\"text-align:center;\"> Mean </th>\n   <th style=\"text-align:center;\"> Mean (minutes) </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> High density </td>\n   <td style=\"text-align:center;\"> 5.2 </td>\n   <td style=\"text-align:center;\"> 49 </td>\n   <td style=\"text-align:center;\"> 112 </td>\n   <td style=\"text-align:center;\"> 66 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> High un-ionized ammonia </td>\n   <td style=\"text-align:center;\"> 0.75 </td>\n   <td style=\"text-align:center;\"> 8.1 </td>\n   <td style=\"text-align:center;\"> 109 </td>\n   <td style=\"text-align:center;\"> 29 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Low dissolved oxygen </td>\n   <td style=\"text-align:center;\"> 1.8 </td>\n   <td style=\"text-align:center;\"> 5.3 </td>\n   <td style=\"text-align:center;\"> 57 </td>\n   <td style=\"text-align:center;\"> 18 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Lack of substrate </td>\n   <td style=\"text-align:center;\"> 1.2 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> 24 </td>\n   <td style=\"text-align:center;\"> 13 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Biosecurity failures </td>\n   <td style=\"text-align:center;\"> 2.9 </td>\n   <td style=\"text-align:center;\"> 7.2 </td>\n   <td style=\"text-align:center;\"> 23 </td>\n   <td style=\"text-align:center;\"> 11 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Low salinity </td>\n   <td style=\"text-align:center;\"> 0.25 </td>\n   <td style=\"text-align:center;\"> 2.7 </td>\n   <td style=\"text-align:center;\"> 14 </td>\n   <td style=\"text-align:center;\"> 6.9 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> High temperature </td>\n   <td style=\"text-align:center;\"> 0.034 </td>\n   <td style=\"text-align:center;\"> 0.39 </td>\n   <td style=\"text-align:center;\"> 18 </td>\n   <td style=\"text-align:center;\"> 3.9 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Water-based transport </td>\n   <td style=\"text-align:center;\"> 0.096 </td>\n   <td style=\"text-align:center;\"> 0.62 </td>\n   <td style=\"text-align:center;\"> 8.2 </td>\n   <td style=\"text-align:center;\"> 3.5 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Harvest </td>\n   <td style=\"text-align:center;\"> 0.11 </td>\n   <td style=\"text-align:center;\"> 0.95 </td>\n   <td style=\"text-align:center;\"> 6.3 </td>\n   <td style=\"text-align:center;\"> 1.8 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Nonoptimal pH </td>\n   <td style=\"text-align:center;\"> 0.044 </td>\n   <td style=\"text-align:center;\"> 0.43 </td>\n   <td style=\"text-align:center;\"> 1.9 </td>\n   <td style=\"text-align:center;\"> 1.4 </td>\n   <td style=\"text-align:center;\"> — </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pollutants </td>\n   <td style=\"text-align:center;\"> 0.024 </td>\n   <td style=\"text-align:center;\"> 0.26 </td>\n   <td style=\"text-align:center;\"> 2.4 </td>\n   <td style=\"text-align:center;\"> 0.94 </td>\n   <td style=\"text-align:center;\"> 56 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hunger </td>\n   <td style=\"text-align:center;\"> 0.089 </td>\n   <td style=\"text-align:center;\"> 0.3 </td>\n   <td style=\"text-align:center;\"> 0.8 </td>\n   <td style=\"text-align:center;\"> 0.37 </td>\n   <td style=\"text-align:center;\"> 22 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Predators </td>\n   <td style=\"text-align:center;\"> 0.0071 </td>\n   <td style=\"text-align:center;\"> 0.075 </td>\n   <td style=\"text-align:center;\"> 0.4 </td>\n   <td style=\"text-align:center;\"> 0.29 </td>\n   <td style=\"text-align:center;\"> 17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Waterless transport </td>\n   <td style=\"text-align:center;\"> 0.0032 </td>\n   <td style=\"text-align:center;\"> 0.012 </td>\n   <td style=\"text-align:center;\"> 0.13 </td>\n   <td style=\"text-align:center;\"> 0.052 </td>\n   <td style=\"text-align:center;\"> 3.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Low temperature </td>\n   <td style=\"text-align:center;\"> 0.0029 </td>\n   <td style=\"text-align:center;\"> 0.031 </td>\n   <td style=\"text-align:center;\"> 0.12 </td>\n   <td style=\"text-align:center;\"> 0.043 </td>\n   <td style=\"text-align:center;\"> 2.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malnutrition </td>\n   <td style=\"text-align:center;\"> 0.0095 </td>\n   <td style=\"text-align:center;\"> 0.033 </td>\n   <td style=\"text-align:center;\"> 0.095 </td>\n   <td style=\"text-align:center;\"> 0.04 </td>\n   <td style=\"text-align:center;\"> 2.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ice-Slurry slaughter </td>\n   <td style=\"text-align:center;\"> 0.00042 </td>\n   <td style=\"text-align:center;\"> 0.0046 </td>\n   <td style=\"text-align:center;\"> 0.018 </td>\n   <td style=\"text-align:center;\"> 0.0063 </td>\n   <td style=\"text-align:center;\"> 0.38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Eyestalk ablation </td>\n   <td style=\"text-align:center;\"> 0.0000021 </td>\n   <td style=\"text-align:center;\"> 0.0000054 </td>\n   <td style=\"text-align:center;\"> 0.000016 </td>\n   <td style=\"text-align:center;\"> 0.0000094 </td>\n   <td style=\"text-align:center;\"> 0.00056 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;background-color: lightgrey !important;\"> Total </td>\n   <td style=\"text-align:center;font-weight: bold;background-color: lightgrey !important;\"> 13 </td>\n   <td style=\"text-align:center;font-weight: bold;background-color: lightgrey !important;\"> 87 </td>\n   <td style=\"text-align:center;font-weight: bold;background-color: lightgrey !important;\"> 378 </td>\n   <td style=\"text-align:center;font-weight: bold;background-color: lightgrey !important;\"> 156 </td>\n   <td style=\"text-align:center;font-weight: bold;background-color: lightgrey !important;\"> — </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nWe also want to see the results broken down by pain type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults_byintensity<-comparison_table %>%\n  dplyr::filter(!str_detect(rownames, \"Disabling-Equivalent\")) %>%\n  separate_wider_delim(rownames, \"_\", names=c(\"pain_type\", \"welfare_threat\"))\n\npercent_byintensity<-results_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(percent=Mean/sum(Mean))\n\npercent_total<-percent_byintensity %>%\n  group_by(welfare_threat) %>%\n  mutate(total=sum(Mean)) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 1 ~ round(.x, digits = 0), TRUE ~ round(.x, digits = 4))) %>%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) > 0.001 ~ round(.x, digits = 2), TRUE ~ round(.x, digits = 4)))\n\ntotal_byintensity<-reframe(results_byintensity, .by=pain_type, \n                            total=sum(Mean), \n                            total.95=sum(`95%`), \n                            total.5=sum(`5%`)) %>%\n  mutate(percent.total=total/sum(total))\n\npercent_overall<-data.frame(\n  pain_type=c(\"Annoying\", \"Hurtful\", \"Disabling\", \"Excruciating\"),\n  welfare_threat = rep(\"Total\", 4), \n  `5%`=rep(NA, 4),\n  `50%`=rep(NA, 4),\n  `95%`=rep(NA, 4),\n  Mean=total_byintensity$total,\n  percent=total_byintensity$percent.total,\n  total=rep(sum(total_byintensity$total), 4))\ncolnames(percent_overall)<-colnames(percent_total)\n\nresults_paintype<-rbind(percent_total, percent_overall)\n\nresults_paintype$welfare_threat<-gsub(\"subst\", \"Lack of substrate\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"dens\", \"High density\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"salin\", \"Low salinity\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ammon\", \"High un-ionized ammonia\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ph\", \"Nonoptimal pH\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowDO\", \"Low dissolved oxygen\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hunger\", \"Hunger\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"hitemp\", \"High temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"malnu\", \"Malnutrition\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"nowater\", \"Waterless transport\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"water\", \"Water-based transport\" , results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pollute\", \"Pollutants\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"harvest\", \"Harvest\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"slaught\", \"Ice-Slurry slaughter\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"ablation\", \"Eyestalk ablation\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"pred\", \"Predators\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"lowtemp\", \"Low temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat<-gsub(\"disease\", \"Biosecurity failures\", results_paintype$welfare_threat)\n\nresults_paintype$welfare_threat<-factor(results_paintype$welfare_threat,\n                                        levels=c(rownames(results)))\n\nresults_paintype$pain_type<-factor(results_paintype$pain_type, levels=c(\"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(results_paintype) +\n  geom_pointrange(aes(y=welfare_threat, x=Mean, xmin=`5%`, xmax=`95%`, color=pain_type), position = position_dodge2(width = 1, padding = 2), stat=\"identity\") +\n  facet_wrap(~pain_type, scales=\"free\") +\n  scale_color_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 rows containing missing values (`geom_segment()`).\nRemoved 1 rows containing missing values (`geom_segment()`).\nRemoved 1 rows containing missing values (`geom_segment()`).\nRemoved 1 rows containing missing values (`geom_segment()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(results_paintype) +\n  geom_bar(aes(y=fct_rev(welfare_threat), x=percent, fill=pain_type), position =\"stack\", stat=\"identity\") +\n  scale_fill_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n    geom_text(aes(y=welfare_threat, x=1.06, label=formatC(total, format=\"fg\"),\n                  hjust=0.5) , na.rm=TRUE, fontface=c(rep(\"plain\", 72),\n                                                      rep(\"bold\", 4 )), size=5) +\n  geom_text(aes(y=20, x=1.01), label=expression(bold('Total hours')), hjust=0, size=5) +\n  theme( panel.grid.major = element_line(color=\"white\"),\n         panel.grid.minor = element_line(colour = \"white\"),\n         panel.background = element_rect(fill = \"white\"),\n         axis.ticks.y = element_blank(),\n         axis.text.y = element_text(\n           face=c( \"bold\", rep(\"plain\", 18)), size=12, margin = margin(r = 0)),\n         legend.position=\"bottom\", \n         plot.margin=margin(r=90, l=2, t=65)) +\n  labs(x=\"Proportion of pain\", y=\"\", fill=\"Pain Intensity\") +\n  coord_cartesian(xlim=c(0,1), ylim=c(0,18), clip = 'off') +\n  theme(legend.position=\"bottom\") +\n  scale_x_continuous(expand=c(0,0)) +\n  scale_y_discrete(expand=c(0,0))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Vectorized input to `element_text()` is not officially supported.\nℹ Results may be unexpected or may change in future versions of ggplot2.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in is.na(x): is.na() applied to non-(list or vector) of type\n'expression'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::",
    "supporting": [
      "results_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}