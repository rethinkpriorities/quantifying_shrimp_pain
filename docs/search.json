[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Methods for quantifying and prioritizing shrimp welfare threats",
    "section": "",
    "text": "Preface\nIn this document, we estimate the intensity, duration, and prevalence of pain caused to farmed shrimp by 18 welfare threats. You can download the code we use from our GitHub Repository.\nWe assess only the ongrowing stage of shrimp farming (which includes the postlarval and juvenile–subadult life stages), because the vast majority of research and on-farm surveys are conducted at this stage. Hatcheries (which supply ongrowing farms) are less studied and have different welfare requirements (Pedrazzani et al., 2023), which would require its own assessment for pain quantification.\nWe focus only on penaeid species as these account for 92% of all farmed shrimp (Waldhorn & Autric, 2023) and because there is a greater volume of aquaculture research available for these species. The two most commonly farmed species are P. vannamei and P. monodon.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/set-up.html",
    "href": "chapters/set-up.html",
    "title": "Set-up and data preparation",
    "section": "",
    "text": "Prevalence\nThere are four broad categories of shrimp farms: extensive, semi-intensive, intensive, and super-intensive.\nBased on 2018 data from Boyd et al. (2021), and accounting for increasing intensification, we estimate the percentage of penaeid shrimp raised in different production systems as:\nAlthough we assume these estimates are credible, we add in a modest amount of uncertainty to account for potential weaknesses in Boyd et al. (2018), changes that may have occurred since the survey was conducted, and because these proportions relate to the shrimp produced at the end of production—they do not account for individuals who die pre-slaughter.\n# Define the expected proportions for each practice\next_mean &lt;- 0.112\nsemi_mean &lt;- 0.164\nint_mean &lt;- 0.714\nsuper_mean &lt;- 0.01\n\nsum(c(ext_mean,semi_mean,int_mean,super_mean))\n\n[1] 1\n\n# Sample from the Dirichlet distribution\nprop_sample&lt;-data.frame(sample_dirichlet(ext_mean*100, semi_mean*100, \n                                         int_mean*100, super_mean*100))\n# we multiply by 100 to make the distributions less noisy\ncolnames(prop_sample)&lt;-c(\"Ext\", \"Semi\", \"Int\", \"Super\")\n\nproduction_summarydist&lt;-round(rbind((quantile(x =prop_sample[,1], probs = c(.05, .50, .95))), \n       (quantile(x =prop_sample[,2], probs = c(.05, .50, .95))), \n        (quantile(x =prop_sample[,3], probs = c(.05, .50, .95))),\n        (quantile(x =prop_sample[,4], probs = c(.05, .50, .95)))), 2)\nrow.names(production_summarydist)&lt;-c(\"Extensive\",\"Semi-Intensive\",\"Intensive\", \"Super-Intensive\")\nproduction_summarydist \n\n                  5%  50%  95%\nExtensive       0.07 0.11 0.17\nSemi-Intensive  0.11 0.16 0.23\nIntensive       0.64 0.72 0.79\nSuper-Intensive 0.00 0.01 0.03\nWe then estimate prevalence ranges and means, based on data where possible, and draw from the beta distribution. Where no data on the mean is available, we often set the mean to be the mid point of the estimated range. Where no data on the range is available we use the rough, subjective likelihood categories below:",
    "crumbs": [
      "Set-up and data preparation"
    ]
  },
  {
    "objectID": "chapters/set-up.html#sec-shrimpnumbers",
    "href": "chapters/set-up.html#sec-shrimpnumbers",
    "title": "Set-up and data preparation",
    "section": "Number of shrimp dying on farms",
    "text": "Number of shrimp dying on farms\n\n# loading die on farms samples, taken from Guesstimate model\n\nallspecies_dof_samp&lt;-read.csv(\"../data/die_on_farm_samples.csv\", header=TRUE, sep=\",\")\n\nvannamei_dof&lt;-allspecies_dof_samp$vannamei[allspecies_dof_samp$vannamei&gt;0] %&gt;% # Cell GZ in the Guesstimate model\n  # removing negative values created by Guesstimate\n  kde1d(xmin=0) %&gt;% # running kde1d function and ensuring no values below 0 are created\n  rkde1d(100000,.) # creating 100,000 samples from the data\n\n# repeat this for other taxa\nmonodon_dof&lt;-allspecies_dof_samp$monodon[allspecies_dof_samp$monodon&gt;0] %&gt;% # Cell ES in the Guesstimate model\n  kde1d(xmin=0) %&gt;%\n  rkde1d(100000,.)\n\notherpen_dof&lt;-allspecies_dof_samp$other_pen[allspecies_dof_samp$other_pen&gt;0] %&gt;% # Cell NN in the Guesstimate model\n  kde1d(xmin=0) %&gt;%\n  rkde1d(100000,.)\n\nNow we can calculate the proportion of farmed shrimp accounted for by each species for each of our 100,000 samples.\n\nallspecies_dof&lt;-cbind(vannamei_dof, monodon_dof, otherpen_dof) # combining the 100,000 samples for each species into a data frame\n\nprop_allspecies&lt;-as.data.frame(allspecies_dof) %&gt;% \n  rowwise() %&gt;%\n  mutate(van_prop=vannamei_dof/sum(vannamei_dof, monodon_dof, otherpen_dof), # calculating each sample as a proportion of the total shrimp, row-wise\n         mon_prop=monodon_dof/sum(vannamei_dof, monodon_dof, otherpen_dof),\n         otherpen_prop=otherpen_dof/sum(vannamei_dof, monodon_dof, otherpen_dof))\n\nprop_allspecies_dof&lt;-as.data.frame(prop_allspecies[,4:6]) # keeping only the proportions\n\nsaveRDS(allspecies_dof, file=\"../data/allspecies_dof.RData\")\nsaveRDS(prop_allspecies_dof, file=\"../data/prop_allspecies_dof.RData\")",
    "crumbs": [
      "Set-up and data preparation"
    ]
  },
  {
    "objectID": "chapters/set-up.html#days-lived-by-life-stage",
    "href": "chapters/set-up.html#days-lived-by-life-stage",
    "title": "Set-up and data preparation",
    "section": "Days lived by life stage",
    "text": "Days lived by life stage\nNext we load the data for the number of days lived by a shrimp, given that it dies within a certain life stage. The three life stages under consideration here are postlarval, juvenile-adult, and the days lived before slaughter, which we call the total farmed days.\n# First load the data\nvannamei_days_samp&lt;-read.csv(\"../data/vannamei_days_lived.csv\", header=TRUE,sep=\",\") # Cells TE, VO, XM, and QV in the Guesstimate model\nmonodon_days_samp&lt;-read.csv(\"../data/monodon_days_lived.csv\", header=TRUE, sep=\",\") # Cells MF, HI, OZ, and LW in the Guesstimate model\notherpen_days_samp&lt;-read.csv(\"../data/otherpen_days_lived.csv\", header=TRUE, sep=\",\") # Cells NQ, XV, DQ, and YY in the Guesstimate model\n\n# Next make the 100,000 samples\n\n# create empty data frame\nvannamei_days_lived&lt;-data.frame(postlarval=rep(NA, 100000),\n                                juvenile.adult=rep(NA, 100000),\n                                total.farmed=rep(NA, 100000))\n\n# fill empty data frame with data simulated from Guesstimate data using kde1d function\nvannamei_days_lived$postlarval&lt;-vannamei_days_samp$postlarval %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)\nvannamei_days_lived$juvenile.adult&lt;-vannamei_days_samp$juvenile.adult %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)\n\n# repeat for other species\nmonodon_days_lived&lt;-data.frame(postlarval=rep(NA, 100000),\n                               juvenile.adult=rep(NA, 100000),\n                               total.farmed=rep(NA, 100000))\n\nmonodon_days_lived$postlarval&lt;-monodon_days_samp$postlarval %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)\nmonodon_days_lived$juvenile.adult&lt;-monodon_days_samp$juvenile.adult[monodon_days_samp$juvenile.adult&lt;214] %&gt;% \n  kde1d(xmax=213.99) %&gt;% # guesstimate produced some large samples over what we think is the maximum ongrowing length (see below) so we restrict to one day prior to the maximum ongrowing period (as this is the maximum age a juvenile--adult can be while still dying pre-slaughter)\n  rkde1d(100000,.)\n\notherpen_days_lived&lt;-data.frame(postlarval=rep(NA, 100000),\n                             juvenile.adult=rep(NA, 100000),\n                             total.farmed=rep(NA, 100000))\n\notherpen_days_lived$postlarval&lt;-otherpen_days_samp$postlarval %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)\notherpen_days_lived$juvenile.adult&lt;-otherpen_days_samp$juvenile.adult[otherpen_days_samp$juvenile.adult&lt;153] %&gt;% \n  kde1d(xmax=152.99) %&gt;% # guesstimate produced some large samples over what we think is the maximum ongrowing length (see below) so we restrict to just prior to the maximum ongrowing period (as this is the maximum age a juvenile--adult can be while still dying pre-slaughter)\n  rkde1d(100000,.)\n\n\n\nGuesstimate produced a few large numbers of over one year for the total days farmed, which seems incorrect, so we remove these and restrict to:\n\n183 days for P. vannamei (FAO (2009a) suggests the maximum cycle is 6 months in ongrowing 6 months = ~183 days)\n214 days for P. monodon (FAO (2009b) suggests the maximum cycle is &gt;6 months in ongrowing, so we assume ~7 months, which = ~214 days)\n153 days for other penaeids (Table 4.6c–d in Wickens and Lee (2002) suggests the maximum cycle is 4 months of ongrowing. As other penaeids can refer to many different species, we are more uncertain about this value, so we increase the maximum to 5 months. 5 months = ~153 days)\n\nThe kde1d function will still produce a few samples just above this estimation.\nvannamei_days_lived_total&lt;-vannamei_days_samp$total_farmed_d[vannamei_days_samp$total_farmed_d&lt;183]\nvannamei_days_lived$total.farmed&lt;-vannamei_days_lived_total %&gt;% \n  kde1d() %&gt;% \n  rkde1d(100000,.)\n\nmonodon_days_lived_total&lt;-monodon_days_samp$total_farmed_d[monodon_days_samp$total_farmed_d&lt;214]\nmonodon_days_lived$total.farmed&lt;-monodon_days_lived_total %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)\n\notherpen_days_lived_total&lt;-otherpen_days_samp$total_farmed_d[otherpen_days_samp$total_farmed_d&lt;153]\notherpen_days_lived$total.farmed&lt;-otherpen_days_lived_total %&gt;% \n  kde1d() %&gt;%\n  rkde1d(100000,.)",
    "crumbs": [
      "Set-up and data preparation"
    ]
  },
  {
    "objectID": "chapters/set-up.html#mortality-rates-by-life-stage",
    "href": "chapters/set-up.html#mortality-rates-by-life-stage",
    "title": "Set-up and data preparation",
    "section": "Mortality rates by life stage",
    "text": "Mortality rates by life stage\nNow we load the data for the mortality rates samples, then make the 100,000 samples.\nvannamei_mort_samp&lt;-read.csv(\"../data/vannamei_mortality_rates.csv\",header=TRUE, sep=\",\") # Cells UY, UJ, and TF in the Guesstimate model\nmonodon_mort_samp&lt;-read.csv(\"../data/monodon_mortality_rates.csv\", header=TRUE, sep=\",\") # Cells ZA, XZ, and YR in the Guesstimate model\notherpen_mort_samp&lt;-read.csv(\"../data/otherpen_mortality_rates.csv\", header=TRUE,sep=\",\")\n # Cells MU, UQ, and XJ in the Guesstimate model\n\nvannamei_stage_prob&lt;-data.frame(postlarval=rep(NA, 100000),\n                                juvenile.adult=rep(NA, 100000))\n\n# fill empty data frame with data simulated from Guesstimate data using kde1d function\nvannamei_stage_prob$postlarval&lt;-vannamei_mort_samp$postlarval %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\nvannamei_stage_prob$juvenile.adult&lt;-vannamei_mort_samp$juvenile.adult[vannamei_mort_samp$juvenile.adult&lt;1] %&gt;% \n  kde1d(xmin = 0, # The juvenile-adult samples from Guesstimate sampled some instances over 1 so we get rid of these first, or else the xmin and xmax functions won't work\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\n\n# repeat for other taxa\nmonodon_stage_prob&lt;-data.frame(postlarval=rep(NA, 100000),\n                               juvenile.adult=rep(NA, 100000))\n\nmonodon_stage_prob$postlarval&lt;-monodon_mort_samp$postlarval %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\nmonodon_stage_prob$juvenile.adult&lt;-monodon_mort_samp$juvenile.adult %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\n\notherpen_stage_prob&lt;-data.frame(postlarval=rep(NA, 100000),\n                             juvenile.adult=rep(NA, 100000))\n\notherpen_stage_prob$postlarval&lt;-otherpen_mort_samp$postlarval %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\notherpen_stage_prob$juvenile.adult&lt;-otherpen_mort_samp$juvenile.adult %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\n\n\n\nRight now we have the probability that a shrimp dies in each stage, conditional on the shrimp having survived previous stages. However, we want the cumulative probability of a shrimp dying in the ongrowing period—for example, the probability of dying in the juvenile–adult stage is\n\\(1-p(dying\\ in\\ postlarval\\ stage)*p(dying\\ in\\ juvenile--adult\\ stage)\\).\nWe also calculate the probability of a shrimp surviving to slaughter age, which means it has survived both postlarval and juvenile–adult stages.\n\n# create new columns with the total probability they make it to each stage \nvannamei_stage_prob_total&lt;-vannamei_stage_prob %&gt;% \n  rowwise() %&gt;%\n  mutate(postlarval.total=postlarval,\n         juvenile.adult.total=(1-postlarval)*juvenile.adult,\n         slaughter.age.total=(1-postlarval)*(1-juvenile.adult))\nvannamei_stage_prob_total&lt;-as.data.frame(vannamei_stage_prob_total) %&gt;%\n  select(ends_with(\"total\")) # keep only the totals\n\n# repeat for other species\nmonodon_stage_prob_total&lt;-monodon_stage_prob %&gt;% \n  rowwise() %&gt;%\n  mutate(postlarval.total=postlarval,\n         juvenile.adult.total=(1-postlarval)*juvenile.adult,\n         slaughter.age.total=(1-postlarval)*(1-juvenile.adult))\nmonodon_stage_prob_total&lt;-as.data.frame(monodon_stage_prob_total)%&gt;%\n  select(ends_with(\"total\"))\n\notherpen_stage_prob_total&lt;-otherpen_stage_prob %&gt;% \n  rowwise() %&gt;%\n  mutate(postlarval.total=postlarval,\n         juvenile.adult.total=(1-postlarval)*juvenile.adult,\n         slaughter.age.total=(1-postlarval)*(1-juvenile.adult))\notherpen_stage_prob_total&lt;-as.data.frame(otherpen_stage_prob_total) %&gt;%\n  select(ends_with(\"total\"))",
    "crumbs": [
      "Set-up and data preparation"
    ]
  },
  {
    "objectID": "chapters/set-up.html#sec-preslaughtmort",
    "href": "chapters/set-up.html#sec-preslaughtmort",
    "title": "Set-up and data preparation",
    "section": "Calculating pre-slaughter mortality rates",
    "text": "Calculating pre-slaughter mortality rates\nNow we can calculate the pre-slaughter mortality rate across the production cycle. This will give us estimates of the average number of days lived by a shrimp.\nTo get a weighted average mortality rate we need to weight the life stage rates by the probability a shrimp is from a given species. We start by creating vector of species chosen according to probabilities from proportions calculated above (see Number of shrimp dying on farms).\n\nspecies_chosen = vapply(\n  1:100000,\n  function(i) {sample.int(3, size=1, prob=prop_allspecies_dof[i, ])},\n  integer(1))\n\n# Check that the proportions look correct\nprint(data.frame(vannamei.prop=length(species_chosen[species_chosen==1])/length(species_chosen),\n                 monodon.prop=length(species_chosen[species_chosen==2])/length(species_chosen),\n                 otherpen.prop=length(species_chosen[species_chosen==3])/length(species_chosen)))\n\n  vannamei.prop monodon.prop otherpen.prop\n1       0.82507       0.0832       0.09173\n\n\nNow, we make a data frame of 100,000 stage probabilities, weighted by the proportion of farmed shrimp that comes from each species.\n\nstage_probabilities = matrix(NA, nrow=100000, ncol=3)\nfor (i in 1:100000){\n  if (species_chosen[i] == 1){\n    stage_probabilities[i, ] = as.matrix(vannamei_stage_prob_total[i,])\n  }\n  if (species_chosen[i] == 2){\n    stage_probabilities[i, ] = as.matrix(monodon_stage_prob_total[i,])\n  }\n  if (species_chosen[i] == 3){\n    stage_probabilities[i, ] = as.matrix(otherpen_stage_prob_total[i,])\n  }\n}\nhead(stage_probabilities)\n\n          [,1]       [,2]      [,3]\n[1,] 0.2279207 0.02892378 0.7431556\n[2,] 0.1233640 0.05429026 0.8223458\n[3,] 0.1248379 0.21950486 0.6556573\n[4,] 0.1639346 0.12880184 0.7072636\n[5,] 0.1902008 0.08136774 0.7284314\n[6,] 0.1596227 0.11999293 0.7203843\n\nsaveRDS(stage_probabilities, file=\"../data/stage_probabilities.RData\")\n\nNow we can calculate the weighted days lived for each life stage of each species.\n\naverage_days_lived = rep(NA, 100000)\n\nfor (i in 1:100000){\n  stage_chosen &lt;- sample.int(3, size=1, prob=stage_probabilities[i, ])\n  # P. vannamei\n  if (species_chosen[i] == 1){\n    if (stage_chosen == 1){\n      average_days_lived[i] = vannamei_days_lived$postlarval[i] \n    }\n    if (stage_chosen == 2){\n      average_days_lived[i] = vannamei_days_lived$juvenile.adult[i] \n    }\n    if (stage_chosen == 3){\n      average_days_lived[i] = vannamei_days_lived$total.farmed[i] \n    }\n  }\n  # P. monodon\n  if (species_chosen[i] == 2){\n    if (stage_chosen == 1){\n      average_days_lived[i] = monodon_days_lived$postlarval[i]\n    }\n    if (stage_chosen == 2){\n      average_days_lived[i] = monodon_days_lived$juvenile.adult[i]\n    }\n    if (stage_chosen == 3){\n      average_days_lived[i] = monodon_days_lived$total.farmed[i]\n    }\n  }\n  # other penaeids\n  if (species_chosen[i] == 3){\n    if (stage_chosen == 1){\n      average_days_lived[i] = otherpen_days_lived$postlarval[i]\n    }\n    if (stage_chosen == 2){\n      average_days_lived[i] = otherpen_days_lived$juvenile.adult[i]\n    }\n    if (stage_chosen == 3){\n      average_days_lived[i] = otherpen_days_lived$total.farmed[i]\n    }\n  }\n}\n\nhead(average_days_lived)\n\n[1]  92.828757 140.129031  85.592464 122.142815 111.202064   9.701857\n\nquantile(average_days_lived, probs = c(0.01, .05, .50, .95))\n\n       1%        5%       50%       95% \n 11.46242  13.92991 133.03242 175.05771 \n\nmean(average_days_lived)\n\n[1] 114.8756\n\nplot(density(average_days_lived), main= \"Average mortality rate of farmed penaeid shrimp\", xlab=\"Days\")\n\n\n\n\n\n\n\nsaveRDS(average_days_lived, file=\"../data/average_days_lived.RData\")",
    "crumbs": [
      "Set-up and data preparation"
    ]
  },
  {
    "objectID": "chapters/water_quality.html",
    "href": "chapters/water_quality.html",
    "title": "Water quality",
    "section": "",
    "text": "Low Dissolved Oxygen\nWe follow Pedrazzani et al. (2023) and regard dissolved oxygen (DO) levels of at least 4 mg per liter as optimal and 2-3.9 mg/L as sub-optimal. DO below the sub-optimal is likely lethal.",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence",
    "href": "chapters/water_quality.html#prevalence",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nVenkateswarlu et al. (2019) found that mean DO in all study areas of semi-intensive farms was above the optimal. Hukom et al. (2020) found that “traditional plus” (c.f. semi-intensive) farms had mean DO levels below the optimal and that “traditional” (c.f. extensive) farms had mean DO levels above the optimal. The minimum values obtained at each farm were well below the optimal (1.9, 1.2, 1.6, 2.4 ppm). Our water quality literature analysis suggests we can expect around 58% have optimal and 36% suboptimal, though not lethal, DO levels.\nSivaraman et al. (2019) report that 297/300 (92%) of farmers complied with the ask “maintain adequate oxygen levels 5–7 ppm”. Based on the authors descriptions, these are like extensive or semi-intensive farms.\nShrimp Welfare Project’s India Scoping Report found that all semi-intensive farms and the intensive farm had DO at or above the optimal. However, no measurements were made during the night or before sunrise, when we might expect DO to be lowest\nIn general, we assume that DO is more likely to be suboptimal and last at that level for longer on less intensive farms. This is because extensive farms do not use aeration, whereas semi-intensive often do and intensive and and super-intensive always do—more intensive farms must aerate the water to compensate for high stocking densities, which otherwise reduce DO. Extensive and semi-intensive farms are also less likely to have close control over phytoplankton blooms, which can cause severe DO fluctuations when the blooms crash.\nAs most DO in the pond comes from plants and phytoplankton photosynthesizing, DO levels are also influenced by outdoor weather conditions, such as cloud cover (Boyd 1989, p.26), so outdoor ponds (extensive, semi-intensive, and some intensive farms) are more likely to experience DO fluctuations. Consequently, at night, when no photosynthesis takes place, shrimp “are often exposed to hypoxic conditions” (Hargreaves & Boyd, 2022, p. 218).\nOur prevalence estimates (90% subjective confidence intervals and estimated means) are therefore as follows:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n100%\n50–100% (mean 80%)\n20–100% (mean 60%)\n0–50% (mean 10%)\n\n\n\nWe sample from the beta distributions using these ranges as our 5th and 95th percentiles. We obtain an appropriate standard deviation using the function written in the set up chapter, then draw from the beta distribution using our means and obtained standard deviation.\nfind_good_sd_binary(mean_val=0.8, tol=1e-6,\n                   fifth_percentile=0.5, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.6, tol=1e-6,\n                   fifth_percentile=0.2, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.1, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.5)\n\n\n\n[1] 0.1978672\n\n\n[1] 0.2708465\n\n\n[1] 0.2947446\n\n\n\nSampling from beta distribution:\n\nprev_lowdo_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.99, 0.8, 0.6, 0.1),\n                               sd = c(0, 0.1978672, 0.2708465, 0.2947446))\nprev_lowdo_dist&lt;-mapply(sample_beta, prev_lowdo_stat$mean, prev_lowdo_stat$sd)\ncolnames(prev_lowdo_dist)&lt;-prev_lowdo_stat$FarmType\n\nprev_lowdo_dist[,1] &lt;- 1 # setting extensive farm prevalence to 100%\n\nprev_lowdo&lt;-as.data.frame(prev_lowdo_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks",
    "href": "chapters/water_quality.html#pain-tracks",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nKrummenauer et al. (2011) and Supriatna et al. (2017) suggest that DO concentrations get worse as the production cycle progresses, especially after 90 days. We therefore construct separate Pain-Tracks for the first and second half of the production cycle for each farm type.\nOur pain tracks for low DO on the four farm types are as follows:\n\nTo construct these Pain-Tracks, we need to split our estimates of average days lived into the first and second halves of production:\n\nmax(average_days_lived)\n\n[1] 224.0417\n\nfirst_half_prod&lt;-average_days_lived[\n  average_days_lived&lt;(max(average_days_lived)/2)]\nsecond_half_prod&lt;-average_days_lived[\n  average_days_lived&gt;=(max(average_days_lived)/2)]\n\n# check that we still have 100,000 samples\nlength(first_half_prod) + length(second_half_prod)\n\n[1] 100000\n\n\nFirst, we construct the Pain-Tracks for the first half of production.\n\nfirst_dur_lowdo_ext&lt;-runif(n, 1, 5)\nfirst_dur_lowdo_semi&lt;-runif(n, 0.5, 4)\nfirst_dur_lowdo_int&lt;-runif(n, 0, 1)\nfirst_dur_lowdo_super&lt;-runif(n, 0, 0.5)\n\nfirst_pain_lowdo_ext&lt;-data.frame(sample_dirichlet(0.01, 0.09, 9.9, 90)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nfirst_pain_lowdo_semi&lt;-data.frame(sample_dirichlet(0.01, 0.09, 9.9, 90)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nfirst_pain_lowdo_int&lt;-data.frame(Excruciating = 0,\n         Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 10, 90)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\nfirst_pain_lowdo_super&lt;-data.frame(Excruciating = 0,\n         Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 5, 95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nThen for the second half:\n\nsec_dur_lowdo_ext&lt;-runif(n, 1, 6)\nsec_dur_lowdo_semi&lt;-runif(n, 0.5, 5)\nsec_dur_lowdo_int&lt;-runif(n, 0, 2)\nsec_dur_lowdo_super&lt;-runif(n, 0, 1)\n\nsec_pain_lowdo_ext&lt;-data.frame(sample_dirichlet(0.015, 0.17, 19, 80.815)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nsec_pain_lowdo_semi&lt;-data.frame(sample_dirichlet(0.015, 0.17, 19, 80.815)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nsec_pain_lowdo_int&lt;-data.frame(sample_dirichlet(0.01, 0.16, 9.93, 89.9)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nsec_pain_lowdo_super&lt;-data.frame(Excruciating = 0,\n         Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 10, 90)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nNow we combine the Pain-Tracks, multiplying the first by the average days lived in the first half of production (up to ~110 days) and the second by the average days lived in the second half of production.\n\npaintrack_lowdo_ext&lt;-(first_dur_lowdo_ext * first_pain_lowdo_ext * first_half_prod) + (\n  sec_dur_lowdo_ext * sec_pain_lowdo_ext * second_half_prod)\n\npaintrack_lowdo_semi&lt;-(first_dur_lowdo_semi * first_pain_lowdo_semi * first_half_prod) + (\n  sec_dur_lowdo_semi * sec_pain_lowdo_semi * second_half_prod)\n\npaintrack_lowdo_int&lt;-(first_dur_lowdo_int * first_pain_lowdo_int * first_half_prod) + (\n  sec_dur_lowdo_int * sec_pain_lowdo_int * second_half_prod)\n\npaintrack_lowdo_super&lt;-(first_dur_lowdo_super * first_pain_lowdo_super * first_half_prod) + (\n  sec_dur_lowdo_super * sec_pain_lowdo_super * second_half_prod)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nHargreaves and Boyd (in Alday-Sanz, 2022, p. 218) say “the typical pattern of dissolved oxygen concentration in most commercial shrimp ponds is one of increasing dissolved oxygen concentration during day and decreasing concentration during night… penaeid shrimp typically forage on the pond bottom, where dissolved oxygen concentrations may be chronically undersaturated”.\nShrimp Welfare Project (SWP) found low DO in their Vietnam growout pond data in 6 of 28 (21%) measurements on semi-intensive farms, which we take to suggest up to 21% of a day, or 5 hours. As DO remained low between ’Morning and ’Morning after sunrise” at Farm E (see below) on 11/14/2022, we assume that on Semi-intensive farms there can be several hours of continuous nonoptimal DO in the morning. All morning measurements were below afternoon measurements.\n\n\n\n\n\n\n\n\n\nSupriatna et al. (2017, Table 3) report that all minimum measurements taken at each pond in their study were below 4 ppm, suggesting at least one measurement was outside the optimal range. Assuming the survey ran for 98 days (see Fig. 2), and that DO was measured twice daily (the study gives conflicting information about daily or twice daily, we take the conservative estimation twice daily), then one measurement per pond (8 ponds total) equates to 4% of measurement incidences. 4% of a day is ~1 hour, so we assume low DO can last up to 1 hour on intensive farms at the start of production.\nAriadi et al. (2019, Table 1) measured optimal conditions on all but one of eight ponds. Assuming this is one measurement across 91 days of culture with measurements twice a day, suggests that low DO happens ~0.5% of the time on an intensive pond where is does happen at all, which is ~2 hours of a day.\nIntensive and especially super-intensive farms are much more likely to monitor water quality and respond quickly as DO approaches nonoptimal conditions, so we shorten the durations for these farm types.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nLow DO may physiologically prevent shrimp from being able to swim efficiently (Duan et al., 2022). Zhang et al. (2006) report that P. vannamei behavior changes as DO levels decrease, showing random short bursts of swimming at first and surface-seeking behavior as conditions worsen. Shrimp did not move at levels below 1 mg/L.\nShrimp are unlikely to die from Low DO on farms where water quality is frequently measured, as survival is only affected from roughly 2 mg L-1 and below (Hargreaves & Boyd, 2022, p. 218; Pedrazzani et al. (2023)). Therefore, we make the disabling and excruciating pain proportions lower for intensive farms. We think almost no shrimp die from low DO on super-intensive farms so we assign disabling and excruciating pain zero probability.\nWe think low DO causes more pain the longer it occurs for, so longer durations also have higher intensities. Allan and Maguire (1991) found that shrimp mortality was higher in a 96 hour low DO trial than a 48 hour one, even at the same DO levels. When low DO occurs for longer, shrimp shrimp have to divert more energy to homeostasis for longer, which is more physiologically taxing than a brief challenge.\nLow oxygen levels can also physogically stress shrimp, affecting their immune system, potentially making them more vulnerable to disease (Boyd, 1989, p.25).\n\n\n\nWe can now weight these estimates by the prevalence of low DO on each farm type, and the proportion of shrimp that come from that farm type.\n\nlow_do_farms&lt;-data.frame(ext = paintrack_lowdo_ext*prev_lowdo$Extensive*prop_sample$Ext,\n                   semi = paintrack_lowdo_semi*prev_lowdo$`Semi-Intensive`*prop_sample$Semi,\n                   int = paintrack_lowdo_int*prev_lowdo$Intensive*prop_sample$Int,\n                   super = paintrack_lowdo_super*prev_lowdo$`Super-Intensive`*prop_sample$Super)\n\nFinally, we combine the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nlow_do&lt;-low_do_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_lowdo &lt;- low_do %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_lowdo$Disabling_Equivalent&lt;- (\n  average_hours_lowdo$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_lowdo$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_lowdo$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_lowdo$allfarms.Excruciating*Excruciating_Weight)\n\nlowdo_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_lowdo$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_lowdo$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_lowdo$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_lowdo$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_lowdo$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_lowdo))\nrow.names(lowdo_summary)&lt;-c(\n  \"Annoying_lowDO\",\"Hurtful_lowDO\",\"Disabling_lowDO\", \"Excruciating_lowDO\", \"Disabling-Equivalent_Low_dissolved_oxygen\")\n\nshow_table(lowdo_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_lowDO \n    83.9184686 \n    178.5949558 \n    313.0961618 \n    185.9962085 \n  \n  \n    Hurtful_lowDO \n    14.7301565 \n    30.4081422 \n    53.4128461 \n    31.7587200 \n  \n  \n    Disabling_lowDO \n    0.0029572 \n    0.1324434 \n    1.2539827 \n    0.3169395 \n  \n  \n    Excruciating_lowDO \n    0.0000000 \n    0.0000014 \n    0.1195333 \n    0.0269342 \n  \n  \n    Disabling-Equivalent_Low_dissolved_oxygen \n    1.7896609 \n    5.2946956 \n    56.9708905 \n    18.3762769",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-1",
    "href": "chapters/water_quality.html#prevalence-1",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nLin and Drazba (2006, p. 79) report that “The maximum daily temperature varied from 31 to 35 degrees in the warm season for the majority of ponds in both hemispheres”.\nVenkateswarlu et al. (2019) found no instances of high temperature on semi-intensive farms in their study.\nHukom et al. (2020) found that mean temperatures on extensive and semi-intensive farms were broadly similar. The upper bounds of the standard deviations for extensive farms were very slightly over the optimal limit of 32.4°C. The maximum temperatures recorded across farm types were higher than the optimal limit for all (35.5°C, 33°C, 33°C, 33°C)\nShrimp Welfare Project’s India Scoping Report found that all analysed farms (semi-intensive and one intensive farm) were within the optimal temperature range.\nTemperature in ponds can fluctuate daily and with the seasons (Lin & Drazba, 2006, p. 79). Rainfall can also cause water temperature to drop in outdoor ponds (Buike, 2018). Extensive and semi-intensive farms are more likely to be open (not indoor) ponds, so are more susceptible to these weather and seasonal fluctuations. Some intensive farms may also be outside (Clayton et al., 2022, p. 287).\nTaken together, this suggests issues of high temperature are not likely for any farm type, but we are more uncertain about outdoor farm types.\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n10–30% (mean 20%)\n10–30% (mean 15%)\n0–10% (mean 5%)\n0–5% (mean 2.5%)\n\n\n\nWe draw from the beta distribution for our 90% credibility intervals for prevalence:\nfind_good_sd_binary(mean_val=0.2, tol=1e-6,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.3)\nfind_good_sd_binary(mean_val=0.15, tol=1e-6,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.3)\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\nfind_good_sd_binary(mean_val=0.025, tol=1e-6, sd_val=0.15,\n                   fifth_percentile=0, ninety_fifth_percentile=0.05)\n\n\n\n[1] 0.06179771\n\n\n[1] 0.040631\n\n\n[1] 0.03660087\n\n\n[1] 0.01867974\n\n\n\nSampling from beta distribution:\n\nprev_hitemp_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.2, 0.15, 0.05, 0.025),\n                               sd = c(0.06179771, 0.040631, 0.03660087, 0.01867974))\nprev_hitemp_dist&lt;-mapply(sample_beta, prev_hitemp_stat$mean, prev_hitemp_stat$sd)\ncolnames(prev_hitemp_dist)&lt;-prev_hitemp_stat$FarmType\n\nprev_hitemp&lt;-as.data.frame(prev_hitemp_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-1",
    "href": "chapters/water_quality.html#pain-tracks-1",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nWe now construct the Pain-Tracks for high temperature, which are as follows:\n\nDrawing from uniform distributions and Dirichlet distributions for duration and intensity, respectively:\n\ndur_hitemp_ext&lt;-runif(n, 1, 5)\ndur_hitemp_semi&lt;-runif(n, 0.5, 4)\ndur_hitemp_int&lt;-runif(n, 0, 1)\ndur_hitemp_super&lt;-runif(n, 0, 0.5)\n\npain_hitemp_ext&lt;-data.frame(sample_dirichlet(0.01, 0.02, 9, 90.97)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_hitemp_semi&lt;-data.frame(sample_dirichlet(0.1, 0.1, 9, 90.8)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_hitemp_int&lt;-data.frame(Excruciating = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0.2, 15, 84.8)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_hitemp_super&lt;-data.frame(Excruciating = 0,\n         Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 1, 99)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_hitemp_ext&lt;-(dur_hitemp_ext * pain_hitemp_ext)\n\npaintrack_hitemp_semi&lt;-(dur_hitemp_semi * pain_hitemp_semi)\n\npaintrack_hitemp_int&lt;-(dur_hitemp_int * pain_hitemp_int)\n\npaintrack_hitemp_super&lt;-(dur_hitemp_super * pain_hitemp_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nSWP’s Vietnam growout pond data showed that no semi-intensive, intensive, nor super-intensive farm had temperature over the optimal limit at any point in time. Supriatna et al. (2017) found the same on intensive farms. The maximum report temperatures in Chowdhury et al. (2011) were never above optimal in shrimp-only farms and only 0.2°C higher than optimal in shrimp-rice farms.\nAriadi et al. (2019, Fig. 2) shows the variation of temperature in 24 hours on an intensive farm. While the temperature varies, increasing during the afternoon and decreasing at night, the levels do not appear to go outside the optimal ranges. Prapaiwong and Boyd (2012, Fig.1–2), show that when high temperature does occur, such temperatures can occur daily (see between days 187 and 227 in Fig. 1 and monthly averages for July).\nSince temperature has a daily pattern and can affect dissolved oxygen levels (Boyd, 1989, p.24), we use similar duration to our modeling of low dissolved oxygen.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nDuan et al., 2018 report that P. vannamei show physiological changes, such as oxidative stress, damage to the intestinal barrier, and a diminished immune response, when reared at 33°C for 24 hours or more.\nP. vannamei can withstand sudden thermal shock up to 34°C, even when maintained at this temperature for several days, and gradual changes up to 37°C, but above these temperatures, there are high mortality rates (Dayalan et al., 2022). Additionally, gradual temperature increases to 37°C reduce feeding, and sudden increases to this temperature cause shrimp to cease feeding and show abnormal behavior like reverse swimming (Dayalan et al., 2022). These behavioral alterations seem consistent with Welfare Footprint’s definitions of hurtful or disabling pain.\nStill, we skew proportions mostly towards ‘Annoying’ pain because it seems likely that most instances of nonoptimal high temperature will not reach 37°C (i.e., they will be between 32.5 and 37°C) and P. vannamei show normal behavior up to 34°C (Dayalan et al., 2022). In particular, temperatures above the optimal in indoor intensive and super-intensive are unlikely to be high enough or prolonged enough to cause disabling or excruciating pain. We assign a small percentage to disabling pain in intensive farms to account for those that are outdoors.\n\n\n\nNow we can combine Pain-Tracks and prevalence estimations, multiplying by the average days lived by a shrimp, and then weight by the proportion of production attributable to each farm type\n\nhitemp_farms&lt;-data.frame(\n  ext = \n    paintrack_hitemp_ext*prev_hitemp$Extensive*prop_sample$Ext*average_days_lived,\n  semi = \n    paintrack_hitemp_semi*prev_hitemp$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = \n    paintrack_hitemp_int*prev_hitemp$Intensive*prop_sample$Int*average_days_lived,\n  super = \n    paintrack_hitemp_super*prev_hitemp$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nFinally, we add the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nhitemp&lt;-hitemp_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_hitemp &lt;- hitemp %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_hitemp$Disabling_Equivalent&lt;- (\n  average_hours_hitemp$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_hitemp$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_hitemp$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_hitemp$allfarms.Excruciating*Excruciating_Weight)\n\nhitemp_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_hitemp$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_hitemp$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_hitemp$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_hitemp$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_hitemp$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_hitemp))\nrow.names(hitemp_summary)&lt;-c(\n  \"Annoying_hitemp\",\"Hurtful_hitemp\",\"Disabling_hitemp\", \"Excruciating_hitemp\", \"Disabling-Equivalent_High_temperature\")\nshow_table(hitemp_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_hitemp \n    1.4815094 \n    14.0656198 \n    30.4705546 \n    14.5577175 \n  \n  \n    Hurtful_hitemp \n    0.1535746 \n    1.4655054 \n    3.4800825 \n    1.5764484 \n  \n  \n    Disabling_hitemp \n    0.0000007 \n    0.0014175 \n    0.0591489 \n    0.0120646 \n  \n  \n    Excruciating_hitemp \n    0.0000000 \n    0.0000459 \n    0.0373763 \n    0.0071722 \n  \n  \n    Disabling-Equivalent_High_temperature \n    0.0342852 \n    0.3861913 \n    17.8070982 \n    3.8696995",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-2",
    "href": "chapters/water_quality.html#prevalence-2",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nShrimp farmers often do not stock ponds in winter.\nShrimp Welfare Project’s India Scoping Report found no instances of low temperature in any semi-intensive farms they studied, nor the one intensive farm.\nAll extensive and semi-intensive farms surveyed by Hukom et al. (2020) had average temperature above 25.4°C. However, the minimum temperatures recorded within each farm type were below optimal for three farms (20°C, 23.9°C, 22°C).\nVenkateswarlu et al. (2019) found that the mean temperature was slightly below the optimal of 25.5°C in two study areas of semi-intensive farms.\nWe therefore estimate low temperature prevalence as:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n0-20% (mean 10%)\n0-20% (mean 10%)\n0-5% (mean 2.5%)\n0–1% (mean 0.5%)\n\n\n\nfind_good_sd_binary(mean_val=0.1, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.2)\nfind_good_sd_binary(mean_val=0.1, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.2)\nfind_good_sd_binary(mean_val=0.025, tol=1e-6, sd_val=0.15,\n                   fifth_percentile=0, ninety_fifth_percentile=0.05)\nfind_good_sd_binary(mean_val=0.005, tol=1e-6, sd_val=0.05,\n                   fifth_percentile=0, ninety_fifth_percentile=0.01)\n\n\n\n[1] 0.07280474\n\n\n[1] 0.07254953\n\n\n[1] 0.01859695\n\n\n[1] 0.07053341\n\n\n\nSampling from beta distribution:\n\nprev_lowtemp_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.1, 0.1, 0.025, 0.005),\n                               sd = c(0.07280474, 0.07254953, 0.01859695, 0.07053341))\nprev_lowtemp_dist&lt;-mapply(sample_beta, prev_lowtemp_stat$mean, prev_lowtemp_stat$sd)\ncolnames(prev_lowtemp_dist)&lt;-prev_lowtemp_stat$FarmType\n\nprev_lowtemp&lt;-as.data.frame(prev_lowtemp_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-2",
    "href": "chapters/water_quality.html#pain-tracks-2",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur hypothesized Pain-Tracks for low temperature are:\n\nWe draw from uniform distributions and Dirichlet distributions to construct the Pain-Tracks.\n\ndur_lowtemp_ext&lt;-runif(n, 0, 2)\ndur_lowtemp_semi&lt;-runif(n, 0, 2)\ndur_lowtemp_int&lt;-runif(n, 0, 1)\ndur_lowtemp_super&lt;-runif(n, 0, 0.1)\n\npain_lowtemp_ext&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 5, 95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_lowtemp_semi&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 5, 95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_lowtemp_int&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 1, 99)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_lowtemp_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.3, 99.7)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_lowtemp_ext&lt;-(dur_lowtemp_ext * pain_lowtemp_ext)\n\npaintrack_lowtemp_semi&lt;-(dur_lowtemp_semi * pain_lowtemp_semi)\n\npaintrack_lowtemp_int&lt;-(dur_lowtemp_int * pain_lowtemp_int)\n\npaintrack_lowtemp_super&lt;-(dur_lowtemp_super * pain_lowtemp_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nOur water quality literature analysis suggests that extensive farms surveyed by Chowdhury et al. (2011) have suboptimally low temperatures, but not lethal, ~10% of the time (since measurements in this study were only ever above the threshold for suboptimal high temperature by 0.2°C, likely nearly of these instances can be attributed to low temperature). 10% of 24 hours is 2.4 hours, so we take 2 hours as the upper limit for extensive and semi-intensive farms.\nSupriatna et al. (2017) report that, while all averages are within the optimal range, there is ar least one measurement in each pond of 24°C. Assuming the survey ran for 98 days (see Fig. 2 in source), one measurement per pond equates to 4% of measurement incidences. 4% of a day is ~1 hour, so we assume low temperature can last up to 1 hours on intensive farms.\nand SWP’s Vietnam growout pond data reported that farms were always above the lower optimal limit of temperature.\nTemperature increases during the day and shrimp farmers do not farm in the colder seasons, so there is unlikely to be prolonged periods of cold.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nLow temperature is linked to decreased shrimp immunity and growth (Jia et al., 2014; Ren et al., 2021), suggesting some physiological stress.\nP. vannamei and P. monodon stop feeding (and the latter also stops swimming) at around 18°C (Table 2 in Ren et al., 2021). Such behavior would likely indicate Disabling-level pain. Since we found no evidence of any shrimp farm reaching such a low temperature, we do not attribute any pain to the Disabling and Excruciating categories\n\n\n\nNow we multiply the Pain-Tracks with prevalence estimations and by the average days lived by a shrimp, and then weight by the proportion of production attributable to each farm type.\n\nlowtemp_farms&lt;-data.frame(\n  ext = paintrack_lowtemp_ext*prev_lowtemp$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_lowtemp_semi*prev_lowtemp$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_lowtemp_int*prev_lowtemp$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_lowtemp_super*prev_lowtemp$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nThen add the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nlowtemp&lt;-lowtemp_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_lowtemp &lt;- lowtemp %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_lowtemp$Disabling_Equivalent&lt;- (\n  average_hours_lowtemp$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_lowtemp$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_lowtemp$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_lowtemp$allfarms.Excruciating*Excruciating_Weight)\n\nlowtemp_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_lowtemp$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_lowtemp$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_lowtemp$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_lowtemp$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_lowtemp$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_lowtemp))\nrow.names(lowtemp_summary)&lt;-c(\n  \"Annoying_lowtemp\",\"Hurtful_lowtemp\",\"Disabling_lowtemp\", \"Excruciating_lowtemp\", \"Disabling-Equivalent_Low_temperature\")\nshow_table(lowtemp_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_lowtemp \n    0.3224764 \n    3.2871236 \n    10.5030561 \n    4.0362914 \n  \n  \n    Hurtful_lowtemp \n    0.0101805 \n    0.1165840 \n    0.5072650 \n    0.1688784 \n  \n  \n    Disabling_lowtemp \n    0.0000000 \n    0.0000000 \n    0.0000000 \n    0.0000000 \n  \n  \n    Excruciating_lowtemp \n    0.0000000 \n    0.0000000 \n    0.0000000 \n    0.0000000 \n  \n  \n    Disabling-Equivalent_Low_temperature \n    0.0029003 \n    0.0312694 \n    0.1232026 \n    0.0427732",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-3",
    "href": "chapters/water_quality.html#prevalence-3",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nLin and Drazba (2006, p. 80) report that ~70% of farms in the East and ~47% in West had salinity of 10 psu or below.1\nVenkateswarlu et al. (2019) found that average salinities were within the optimal range. Our water quality literature analysis suggests that we would expect the majority of the semi-intensive farms to be within optimal ranges, with potentially up to ~10% in the suboptimal range.\nHukom et al. (2020) also reported that average salinities at extensive and semi-intensive farms were all within optimal range, but standard deviation ranges overlap the optimal limit in both farm types. Minimum values on three of four farm types were below optimal (1 ppt, 1 ppt, 4 ppt). Our water quality literature analysis suggests we would expect ~88% of farms with these averages and standard deviations to be within the optimal range but with large uncertainty (95% confidence intervals 48%–98%)\nSivaraman et al. (2019) report 277/300 farmers complied with ask “salinity between 15 and 25 ppt”. So, at minimum 92.3% were in optimal ranges, though, due to differences in definition of optimal salinity, this figure could be higher. Alternatively, as the study relied on self-reporting, this percentage could also be too optimistic.\nShrimp Welfare Project’s India Scoping Report found that 70% of farms studies (19 semi-intensive and one intensive) were below optimal salinity.\nRain can reduce salinity, so we expect low salinity to be more prevalent on outdoor farms. This increases our prevalence likelihood for extensive and semi-intensive farms. P. vannamei, can tolerate a very wide range of salinities (McGraw et al., 2002; Chen et al., 2016), so farmers may be less concerned about fluctuations in salinity than other water quality variables.\nIntensive and super-intensive facilities may be more likely to purposely use low-salinity water, as high-salinity water represents a significant production cost (Boopathy et al., 2007; Roy et al., 2010). Shrimp in these systems are likely acclimatized to low salinity prior to being put in ponds, which would negate some of the negative impacts (Roy et al., 2010; Suantika et al., 2018). This increases our prevalence likelihood for intensive and super-intensive farms, but especially super-intensive farms, which are the mostly likely to be based inland away from natural water sources. That said, we are unsure how low in salinity these farms will source their water.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n25–75% (mean 50%)\n10–70% (mean 50%)\n25–75% (mean 50%)\n50–90% (mean 75%)\n\n\n\nWe sample from the beta distributions using these ranges as our 5th and 95th percentiles.\nfind_good_sd_binary(mean_val=0.5, tol=1e-6, \n                    fifth_percentile=0.25, ninety_fifth_percentile=0.75)\nfind_good_sd_binary(mean_val=0.5, tol=1e-6,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.7)\nfind_good_sd_binary(mean_val=0.75, tol=1e-6,\n                   fifth_percentile=0.5, ninety_fifth_percentile=0.9)\n\n\n\n[1] 0.1516433\n\n\n[1] 0.1512303\n\n\n[1] 0.1137723\n\n\n\nSampling from beta distribution:\n\nprev_salin_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.5, 0.5, 0.5, 0.75),\n                               sd = c(0.1516433, 0.1512303, 0.1516433, 0.1137723))\nprev_salin_dist&lt;-mapply(sample_beta, prev_salin_stat$mean, prev_salin_stat$sd)\ncolnames(prev_salin_dist)&lt;-prev_salin_stat$FarmType\n\nprev_salin&lt;-as.data.frame(prev_salin_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-3",
    "href": "chapters/water_quality.html#pain-tracks-3",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur Pain-Tracks for low salinity are:\n\nFor super-intensive farms, we think those that use normal salinity water likely control the water quality tightly, so low salinity is very rare. However, on super-intensive farms that purposely use low salinity water, then low salinity is likely to be present for almost 24 hours a day. We therefore use a bimodal distribution by taking half of our samples from a truncated normal distribution between 0 and 1 hours and the other half from a truncated normal distribution between 23.5 and 24 hours.\nWe use the same approach for intensive farms, but widen the ranges as intensive farms can have slightly less controlled water quality than super-intensive farms.\n\ndur_salin_ext&lt;-runif(n, 5, 24)\ndur_salin_semi&lt;-runif(n, 1, 24)\n\ndur_salin_int_low&lt;-rtruncnorm(n/2, 0.5, 5)\ndur_salin_int_high&lt;-rtruncnorm(n/2, 20, 24)\ndur_salin_int&lt;-rbind(dur_salin_int_low, dur_salin_int_high)\n\ndur_salin_super_low&lt;-rtruncnorm(n/2, 0, 1)\ndur_salin_super_high&lt;-rtruncnorm(n/2, 23.5, 24)\ndur_salin_super&lt;-rbind(dur_salin_super_low, dur_salin_super_high)\n\npain_salin_ext&lt;-data.frame(sample_dirichlet(0.0025, 0.005, 0.5, 99.4925)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_salin_semi&lt;-data.frame(sample_dirichlet(0.0025, 0.005, 0.5, 99.4925)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_salin_int&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 0.5, 99.5)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_salin_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.05, 99.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_salin_ext&lt;-(dur_salin_ext * pain_salin_ext)\n\npaintrack_salin_semi&lt;-(dur_salin_semi * pain_salin_semi)\n\npaintrack_salin_int&lt;-(dur_salin_int * pain_salin_int)\n\npaintrack_salin_super&lt;-(dur_salin_super * pain_salin_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nSupriatna et al. (2017) report that all intensive farms in their study had salinities within the optimal range at all measurement events.\nChowdhury et al. (2011) report that all mean salinities for extensive farms in the study were below the optimal. suggesting low salinity can be very long-lasting. The lowest measurements on both farm types were extremely low (0.88 ppt, 0.94 ppt).\nAll measurements in SWP’s Vietnam growout pond data were below the optimal for semi-intensive and intensive farms at 100% of measurements events, so we model that low salinity can last up to 24 hours on these farms types. Across super-intensive farms 50% of measurements were optimal, but this was split over farm (rather than variation within a farm; see figure below), suggesting the type of water used may be responsible. Measurements on all farms seem broadly stable throughout a day.\n\n\n\n\n\n\n\n\n\nOn the other hand, some farmers purposely use low-salinity water, so low salinity is more likely to last for 100% of a shrimp’s life than previous water quality variables. Even farmers that use saline water experience low salinity because of rain and other factors, so we think lower values are less likely. Therefore, we take a central estimate of 0.5.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nShrimp are capable of adjusting their internal salinity, but rapid changes in salinity can cause “osmotic shock.”\nWhen shrimp are reared at 2 psu they show reduced growth and survival (Gao et al., 2016).\nHowever, penaeid shrimp, particularly P. vannamei, can tolerate a very wide range of salinities (McGraw et al., 2002; Chen et al., 2016), so the effects of nonoptimal salinities are predominantly sublethal.\n\n\n\nWe combine Pain-Tracks and prevalence estimations, multiplying by the average days lived by a shrimp, and then weight by the proportion of production attributable to each farm type\n\nsalin_farms&lt;-data.frame(\n  ext = paintrack_salin_ext*prev_salin$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_salin_semi*prev_salin$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_salin_int*prev_salin$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_salin_super*prev_salin$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nsalin&lt;-salin_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_salin &lt;- salin %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_salin$Disabling_Equivalent&lt;- (\n  average_hours_salin$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_salin$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_salin$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_salin$allfarms.Excruciating*Excruciating_Weight)\n\nsalin_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_salin$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_salin$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_salin$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_salin$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_salin$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_salin))\nrow.names(salin_summary)&lt;-c(\n  \"Annoying_salin\",\"Hurtful_salin\",\"Disabling_salin\", \"Excruciating_salin\", \"Disabling-Equivalent_Low_salinity\")\nshow_table(salin_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_salin \n    38.4782629 \n    403.444084 \n    1753.0713107 \n    653.4683351 \n  \n  \n    Hurtful_salin \n    0.0733504 \n    1.295715 \n    13.4552291 \n    3.2556332 \n  \n  \n    Disabling_salin \n    0.0000000 \n    0.000000 \n    0.0023017 \n    0.0103565 \n  \n  \n    Excruciating_salin \n    0.0000000 \n    0.000000 \n    0.0000120 \n    0.0049469 \n  \n  \n    Disabling-Equivalent_Low_salinity \n    0.2457338 \n    2.701558 \n    14.3659243 \n    6.8776228",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-4",
    "href": "chapters/water_quality.html#prevalence-4",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nAll mean pH values from semi-intensive farms measured by Venkateswarlu et al. (2019) were within the optimal range, though all had error bars with upper bounds not only outside the optimal range but into the lethal range. Our water quality literature analysis suggests we can expect the breakdown of farms with these summary statistics to be ~60% within optimal range and ~20% within suboptimal, suggesting 20% are in lethal ranges.\nHukom et al. (2020) found that mean pH was optimal for both P. vannamei and. P. monodon extensive farms and for P. vannamei semi-intensive farms—P. monodon semi-intensive farms had an average of 8.64. Our water quality literature analysis suggests there is wide variation between farms in this study, with roughly 70% (95% confidence intervals: 40–90%) optimal. Average minimum measurements obtained were below optimal for all farm types (6.14, 6.4) and average maximum measurements were above on all farm types (9.68, 9, 9.1, 9).\nSivaraman et al. (2019) report that 277 of 300 studied farms say they complied with the ask “Maintain pH between 7.5 and 8.5”, equating to ~92.3%, though this figure could be higher due to differences in definitions of optimal pH. On the other hand, as the study relied on self-reporting, this percentage could also be an overestimation.\nShrimp Welfare Project’s India Scoping Report shows that 15% of farms studied (19 semi-intensive, one intensive) had nonoptimal pH. All nonoptimal measurements were high pH.\nAccording to Kubitza (2017), pH levels are often overlooked, and pH levels of 9 in ponds in the afternoon are “quite common”. A recent survey conducted in India reported that pH is usually not measured by shrimp producers (Boyd et al., 2018), suggesting it could more easily go outside optimal ranges. pH in outdoor ponds can also be impacted by rain, which is usually acidic (Boyd & Tucker, 1998, p. 224).This increases our prevalence estimates for outdoor ponds (mostly extensive and semi-intensive).\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n10–50% (mean 30%)\n10–40% (mean 20%)\n0–15% (mean 7.5%)\n0–10% (mean 5%)\n\n\n\nfind_good_sd_binary(mean_val=0.3, tol=1e-6,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.5)\nfind_good_sd_binary(mean_val=0.2, tol=1e-6,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.4)\nfind_good_sd_binary(mean_val=0.075, tol=1e-6, \n                   fifth_percentile=0, ninety_fifth_percentile=0.15)\nfind_good_sd_binary(mean_val=0.05, tol=1e-6, \n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\n\n\n\n[1] 0.1239601\n\n\n[1] 0.07874184\n\n\n[1] 0.054691\n\n\n[1] 0.03682036\n\n\n\nSampling from beta distribution:\n\nprev_ph_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.3, 0.2, 0.075, 0.05),\n                               sd = c(0.1239601, 0.07874184, 0.054691, 0.03682036))\nprev_ph_dist&lt;-mapply(sample_beta, prev_ph_stat$mean, prev_ph_stat$sd)\ncolnames(prev_ph_dist)&lt;-prev_ph_stat$FarmType\n\nprev_ph&lt;-as.data.frame(prev_ph_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-4",
    "href": "chapters/water_quality.html#pain-tracks-4",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur hypothesized pain category allocations are as follows:\n\n\ndur_ph_ext&lt;-runif(n, 1, 4)\ndur_ph_semi&lt;-runif(n, 1, 4)\ndur_ph_int&lt;-runif(n, 1, 3)\ndur_ph_super&lt;-runif(n, 0, 0.5)\n\npain_ph_ext&lt;-data.frame(sample_dirichlet(0.01, 0.1, 9.09, 90.8)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_ph_semi&lt;-data.frame(sample_dirichlet(0.01, 0.1, 9.09, 90.8)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_ph_int&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 5, 95)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_ph_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 5, 95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_ph_ext&lt;-(dur_ph_ext * pain_ph_ext)\n\npaintrack_ph_semi&lt;-(dur_ph_semi * pain_ph_semi)\n\npaintrack_ph_int&lt;-(dur_ph_int * pain_ph_int)\n\npaintrack_ph_super&lt;-(dur_ph_super * pain_ph_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\npH can follow a daily cycle, increasing in the afternoon/evening (Boyd 1989, p.51), but decreasing at night when photosynthesis stops (Boyd, 2017a).\nOur water quality literature analysis suggests that extensive farms surveyed by Chowdhury et al. (2011) were likely below the optimal limit ~12% of the time. This equates to 2.8 hours of a 24 hour period.\nSupriatna et al. (2017) report that mean pH on all intensive farms was within the optimal range, but each had at least one measurement above the optimal range. Assuming the survey ran for 98 days (see Fig. 2), and that pH was measured twice daily (the study gives conflicting information about daily or twice daily, we take the conservative estimation twice daily), one measurement per pond (8 ponds total) equates to 4% of measurement incidences. 4% of a day is ~1 hour, so we assume low DO can last up to 1 hour on intensive farms. Our analysis indicates similar results—potentially up to 5% of measurements were suboptimal. 5% of 24 hours is 1.2 hours. 1 hour is our lower limit for intensive farms.\nSWP’s Vietnam growout pond data reports the following: - Across intensive farm measurements, ~14% (1/7) measurements were nonoptimal (low pH) which would equate to 3.4 hours of a 24 hour period. 3 hours is our upper limit for intensive farms. - Across semi-intensive farms, ~4% (1/28) measurements were nonoptimal (high pH), which equates to roughly 1 hour of 24 hours. This is our lower limit for semi-intensive farms. - Super-intensive farms had no instances of nonoptimal pH\n\n\n\n\n\n\n\n\n\nKubitza (2017, Fig. 2) report a variation of around two on the pH scale within in 6 hours—the optimal range for P. vannamei is the same size (6.5-8.5; Table 11 of Pedrazzani et al., 2023—and high pH for around 4 = 6 hours, depending on water transparency. As this data may just be estimated, we take an upper limit of 4 hours for extensive and semi-intensive farms (which it seems the article was likely focused on).\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nBoyd (1989, p.10) remarks that “adverse effects of pH on shrimp are uncommon” because “brackish waters are well buffered against pH change”. Furtado et al. (2015) reported 100% survival of P. vannamei at a pH level of 9. We, therefore, skew pain proportions significantly towards ‘annoying’.\nWhile Barr et al. (2008) report that shrimp responded to acid as a noxious stimuli, Puri and Falkes (2010) found no evidence that shrimp possess nociceptors for extreme pH. Either way, shrimp may still experience negative welfare from nonoptimal pH due to physiological alterations—because pH levels affect the shape and structure of enzymes, deviations from optimal pH can decrease the functionality of proteins, reducing shrimp health (Clayton et al., 2022, p. 296). Moreover, Kubitza (2017) reports that extreme pH levels alone can reduce feeding, growth and immune function. Mortality and oxidative stress also seem to increase at extreme pH values of 4 and below and 9.5 and above (Furtado et al., 2015). Some of these effects are consistent with ‘hurtful’, so we apportion some pain to this category.\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\nph_farms&lt;-data.frame(\n  ext = paintrack_ph_ext*prev_ph$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_ph_semi*prev_ph$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_ph_int*prev_ph$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_ph_super*prev_ph$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nph&lt;-ph_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_ph &lt;- ph %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_ph$Disabling_Equivalent&lt;- (\n  average_hours_ph$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_ph$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_ph$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_ph$allfarms.Excruciating*Excruciating_Weight)\n\nph_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_ph$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ph$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ph$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ph$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ph$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_ph))\nrow.names(ph_summary)&lt;-c(\n  \"Annoying_ph\",\"Hurtful_ph\",\"Disabling_ph\", \"Excruciating_ph\", \"Disabling-Equivalent_Nonoptimal_pH\")\nshow_table(ph_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_ph \n    2.9105247 \n    27.5305727 \n    62.3456752 \n    29.0677935 \n  \n  \n    Hurtful_ph \n    0.2299551 \n    2.1714127 \n    5.2394812 \n    2.3530146 \n  \n  \n    Disabling_ph \n    0.0000000 \n    0.0012072 \n    0.0994635 \n    0.0192728 \n  \n  \n    Excruciating_ph \n    0.0000000 \n    0.0000000 \n    0.0031246 \n    0.0018570 \n  \n  \n    Disabling-Equivalent_Nonoptimal_pH \n    0.0429287 \n    0.4249535 \n    1.9043246 \n    1.3857547",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-5",
    "href": "chapters/water_quality.html#prevalence-5",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nShrimp Welfare Project’s India Scoping Report found that 40% of farms studied (19 semi-intensive, one intensive) had high ammonia. 6 (30%) were into the lethal range.\nNone of the prevalence studies reviewed for other the water quality welfare threats measure un-ionized ammonia.\nLow stocking densities and no additional feed in extensive ponds lowers their risk of high ammonia, but a lack of aeration increases the risk. Semi-intensive farms use relatively low stocking densities and often use aeration, so their risk of high ammonia may be lower than extensive farms.\nIntensive systems contain more shrimp and, therefore, usually more uneaten feed and excrement, raising ammonia levels. Recirculating aquaculture systems, which are usually super-intensive farms, can remove ammonia from the water or convert it to a less toxic form. Natural, extensive pond systems benefit from microbial communities breaking down toxic ammonia (Dauda et al., 2019), so these farm types seem slightly less likely to have ammonia problems.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n25–100% (mean 50%)\n25–100% (mean 40%)\n40–100% (mean 60%)\n5–90% (mean 30%)\n\n\n\nfind_good_sd_binary(mean_val=0.5, tol=1e-6,\n                   fifth_percentile=0.25, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.4, tol=1e-6,\n                   fifth_percentile=0.25, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.6, tol=1e-6, \n                   fifth_percentile=0.4, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.3, tol=1e-6, \n                   fifth_percentile=0.05, ninety_fifth_percentile=0.9)\n\n\n\n[1] 0.1871343\n\n\n[1] 0.116733\n\n\n[1] 0.1477067\n\n\n[1] 0.2117818\n\n\n\nSampling from beta distribution:\n\nprev_ammon_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.5, 0.4, 0.6, 0.3),\n                               sd = c(0.1871343, 0.116733, 0.1477067, 0.2117818))\nprev_ammon_dist&lt;-mapply(sample_beta, prev_ammon_stat$mean, prev_ammon_stat$sd)\ncolnames(prev_ammon_dist)&lt;-prev_ammon_stat$FarmType\n\nprev_ammon&lt;-as.data.frame(prev_ammon_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-5",
    "href": "chapters/water_quality.html#pain-tracks-5",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\nUn-ionized ammonia proportions increase with increasing pH and temperature, so ammonia often increases in the afternoon. So, we model ammonia similarly to high pH and temperature (though temperature has less of an effect than pH so we mostly consider pH and then temperature secondarily).\nSince we have more information about what modulates ammonia levels, we have estimates for average durations. Therefore, this time we sample durations from a truncated normal distribution\n\ndur_ammon_ext&lt;-rtruncnorm(n, 0.5, 10, mean=2)\ndur_ammon_semi&lt;-rtruncnorm(n, 0.5, 10, mean=2)\ndur_ammon_int&lt;-rtruncnorm(n, 0.5, 6, mean=1)\ndur_ammon_super&lt;-rtruncnorm(n, 0, 6, mean=0.5)\n\npain_ammon_ext&lt;-data.frame(sample_dirichlet(0.05, 0.5, 50.7, 48.75)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_ammon_semi&lt;-data.frame(sample_dirichlet(0.05, 0.5, 50.7, 48.75)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_ammon_int&lt;-data.frame(sample_dirichlet(0.04, 0.5, 50, 49.46)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_ammon_super&lt;-data.frame(sample_dirichlet(0.02, 0.5, 52, 47.48)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_ammon_ext&lt;-(dur_ammon_ext * pain_ammon_ext)\n\npaintrack_ammon_semi&lt;-(dur_ammon_semi * pain_ammon_semi)\n\npaintrack_ammon_int&lt;-(dur_ammon_int * pain_ammon_int)\n\npaintrack_ammon_super&lt;-(dur_ammon_super * pain_ammon_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nThe only data set that measured un-ionized ammonia at several measurement events was SWP’s Vietnam growout pond data. They show that when ammonia is high in the morning, it seems to stay high into the afternoon. They also found that all semi-intensive farm measurements were above both the optimal and suboptimal (i.e., into the lethal range, above 0.30 mg/L). 66.6% (4/6) of measurements in intensive farms were above 0.30 mg/L. The same proportion of super-intensive farm measurements (8/12) were in nonoptimal range, of which 6 (50%) were into the lethal range. 66.6% would equate to 16 hours of a 24 hour period, but this seems unrealistically high as shrimp would likely die at such prolonged exposure to high ammonia, which farmers are highly incentivized to avoid. We still model a few instances of prolonged ammonia exposure, but skew the truncated normal distributions downwards.\n\n\nWarning: Removed 5 rows containing missing values (`geom_bar()`).\n\n\nWarning: Removed 5 rows containing missing values (`geom_text()`).\n\n\n\n\n\n\n\n\n\nOther water quality variables modulate un-ionized ammonia. For example, ammonia is positively correlated with pH, and ammonia is more toxic when DO or salinity are low (Kungvankij et al., 1986; Allan et al., 1990; Lin & Chen, 2001; Kubitza, 2017). Clayton et al., 2022, p. 304 say that the proportion of un-ionized ammonia “depends on the temperature, salinity, and pH of the water”, but that “the proportion of NH3 [uni-ionized ammonia] and NH4+ [ammonium ion] forms changes most dramatically in relation to pH”. We, therefore, model ammonia similarly to high pH and (secondarily) temperature and salinity.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nOur reasoning is based on the considerations outlined in our previous report:\n\n“The accumulation of un-ionized ammonia has several negative consequences, such as lower levels of feeding (Frias-Espericueta et al., 2000). The main issue, though, is that un-ionized ammonia increases the likelihood of infection via several different paths. Ammonia damages a shrimp’s gills, increasing shrimp susceptibility to viruses that target the gills (e.g., WSSV; Clayton et al., 2022, p. 306). Ammonia also damages the intestine barrier (Duan et al., 2018), which normally prevents pathogenic invasion (Zhao et al., 2020). High ammonia concentrations also slow down hemolymph coagulation, allowing microbes to enter open wounds (Chang et al., 2015). Finally, high ammonia concentrations cause hemocyte apoptosis (Liu et al., 2020), directly reducing immune capacity. At high enough levels in the hemolymph, ammonia directly causes mortality (Boyd & Fast, 1992, p.498; Boyd & Tucker, 1998, p.135; Kubitza, 2017). Signs of impending death include hyperactivity, convulsions, and then lethargy and coma (Boyd & Tucker, 1998, pp.134-136).”\n\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\nammon_farms&lt;-data.frame(\n  ext = paintrack_ammon_ext*prev_ammon$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_ammon_semi*prev_ammon$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_ammon_int*prev_ammon$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_ammon_super*prev_ammon$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nammon&lt;-ammon_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_ammon &lt;- ammon %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_ammon$Disabling_Equivalent&lt;- (\n  average_hours_ammon$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_ammon$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_ammon$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_ammon$allfarms.Excruciating*Excruciating_Weight)\n\nammon_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_ammon$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ammon$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ammon$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ammon$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ammon$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_ammon))\nrow.names(ammon_summary)&lt;-c(\n  \"Annoying_ammon\",\"Hurtful_ammon\",\"Disabling_ammon\", \"Excruciating_ammon\", \"Disabling-Equivalent_High_un-ionized_ammonia\")\nshow_table(ammon_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_ammon \n    5.1502330 \n    48.4607904 \n    111.011758 \n    51.4990561 \n  \n  \n    Hurtful_ammon \n    5.2567087 \n    49.6168940 \n    113.373264 \n    52.5209640 \n  \n  \n    Disabling_ammon \n    0.0171883 \n    0.2711866 \n    1.912982 \n    0.5270102 \n  \n  \n    Excruciating_ammon \n    0.0000000 \n    0.0007275 \n    0.212213 \n    0.0457202 \n  \n  \n    Disabling-Equivalent_High_un-ionized_ammonia \n    0.7454907 \n    8.0618306 \n    107.992425 \n    29.5479680",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#prevalence-6",
    "href": "chapters/water_quality.html#prevalence-6",
    "title": "Water quality",
    "section": "Prevalence",
    "text": "Prevalence\nHere, we evaluate the pain caused by lethal and sublethal levels of pesticides and heavy metals in shrimp ponds.\nFarms located in or near agricultural areas are more likely to experience pesticide run off.\nIn general, we did not find much information about the prevalence of this type of issue. It is possible that pesticide levels reduced shrimp farm production in Mexico around 2001 (Burgos-Hernández et al., 2006). Additionally, levels of insecticides detected in shrimp farm source water in Australia were high enough to potentially negatively impact shrimp (Hook et al., 2018).\nHeavy metals may be present in shrimp feed (Islam et al., 2017; Lyle-Fritch et al., 2006), or coastal and estuary water sources used to supply shrimp ponds. It seems likely that these rarely have high enough levels to cause shrimp mortality.\nExtensive and semi-intensive are more likely from agricultural runoff since outdoors and at ground level. Semi-intensive, intensive and super-intensive are likely to use artificial feeds.\nOverall, we think all farm types as unlikely to have pollutant issues, but we are more uncertain about semi-intensive farms because these types of farms may be both exposed to pesticides and use feed or water with heavy metals in.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–10% (mean 5%)\n0–15% (mean 7.5%)\n0–5% (mean 2.5%)\n0–5% (mean 2.5%)\n\n\n\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\nfind_good_sd_binary(mean_val=0.075, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.15)\nfind_good_sd_binary(mean_val=0.025, tol=1e-6, sd_val=0.15,\n                   fifth_percentile=0, ninety_fifth_percentile=0.05)\nfind_good_sd_binary(mean_val=0.025, tol=1e-6, sd_val=0.15,\n                   fifth_percentile=0, ninety_fifth_percentile=0.05)\n\n\n\n[1] 0.03688937\n\n\n[1] 0.05481785\n\n\n[1] 0.01856241\n\n\n[1] 0.01860082\n\n\n\nSampling from beta distribution:\n\nprev_pollute_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.05, 0.075, 0.025, 0.025),\n                               sd = c(0.03688937, 0.05481785, 0.01856241, 0.01860082))\nprev_pollute_dist&lt;-mapply(sample_beta, prev_pollute_stat$mean, prev_pollute_stat$sd)\ncolnames(prev_pollute_dist)&lt;-prev_pollute_stat$FarmType\n\nprev_pollute&lt;-as.data.frame(prev_pollute_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#pain-tracks-6",
    "href": "chapters/water_quality.html#pain-tracks-6",
    "title": "Water quality",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\nSince we think extensive and semi-intensive have similar duration ranges, but different average durations, we use truncated normal distributions.\n\ndur_pollute_ext&lt;-rtruncnorm(n, 1, 6, mean=3)\ndur_pollute_semi&lt;-rtruncnorm(n, 1, 6, mean=2)\ndur_pollute_int&lt;-rtruncnorm(n, 0.5, 3, mean=1)\ndur_pollute_super&lt;-rtruncnorm(n, 0, 2, mean=0.5)\n\npain_pollute_ext&lt;-data.frame(sample_dirichlet(0.025, 0.05, 29, 70.925)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_pollute_semi&lt;-data.frame(sample_dirichlet(0.025, 0.05, 29, 70.925)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_pollute_int&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 25, 75)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_pollute_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 25, 75)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_pollute_ext&lt;-(dur_pollute_ext * pain_pollute_ext)\n\npaintrack_pollute_semi&lt;-(dur_pollute_semi * pain_pollute_semi)\n\npaintrack_pollute_int&lt;-(dur_pollute_int * pain_pollute_int)\n\npaintrack_pollute_super&lt;-(dur_pollute_super * pain_pollute_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nWe think pollutants are unlikely to be present at welfare-threatening levels for long periods of time in ponds because water is often exchanged frequently, which should reduce pollutants. Water exchange frequency increases with increasing farm intensity, so we give lower durations to more intensive farms. Since extensive farms often exchange water via the tides, these will have the longest duration.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nIn P. vannamei, fungicides can have adverse effects on the immune system (Munoz et al., 2000) and those exposed to sublethal concentrations of pesticides exhibit abnormal swimming, hyperactivity, and spasms (García-de la Parra et al., 2006). For P. monodon, Hook et al. (2018) found that pesticides significantly affect survival of post-larvae, and that some types inhibited feeding behavior when used at non-lethal levels.\nHigh levels of heavy metals, like cadmium and copper, can impact shrimp physiologically, such as disrupting osmoregulation (Frías-Espericueta et al., 2008), and damaging gills, which can cause death by asphyxia (Li et al., 2006; Frías-Espericueta et al., 2008). Heavy metal stress can make shrimp more susceptible to diseases (Bautista-Covarrubias et al., 2022). We also note in our previous report that “chronic exposure to copper reduces growth and immunity in P. vannamei (Qian et al., 2020). Additionally, the presence of multiple heavy metals at levels considered to be safe when present individually can have similar effects to lethal doses of any one heavy metal (Frías-Espericueta et al., 2008).”\nWhere pollutants are present, it is likely mostly in low, sublethal concentrations, so most pain is in the annoying and hurtful categories\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\npollute_farms&lt;-data.frame(\n  ext = paintrack_pollute_ext*prev_pollute$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_pollute_semi*prev_pollute$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_pollute_int*prev_pollute$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_pollute_super*prev_pollute$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\npollute&lt;-pollute_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_pollute &lt;- pollute %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_pollute$Disabling_Equivalent&lt;- (\n  average_hours_pollute$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_pollute$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_pollute$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_pollute$allfarms.Excruciating*Excruciating_Weight)\n\npollute_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_pollute$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_pollute$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_pollute$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_pollute$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_pollute$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_pollute))\nrow.names(pollute_summary)&lt;-c(\n  \"Annoying_pollute\",\"Hurtful_pollute\",\"Disabling_pollute\", \"Excruciating_pollute\", \"Disabling-Equivalent_Pollutants\")\nshow_table(pollute_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_pollute \n    0.5448365 \n    5.2093107 \n    14.1297963 \n    5.9196037 \n  \n  \n    Hurtful_pollute \n    0.2042883 \n    1.9668327 \n    5.4333346 \n    2.2534826 \n  \n  \n    Disabling_pollute \n    0.0000000 \n    0.0000077 \n    0.0124537 \n    0.0026113 \n  \n  \n    Excruciating_pollute \n    0.0000000 \n    0.0000000 \n    0.0046633 \n    0.0013086 \n  \n  \n    Disabling-Equivalent_Pollutants \n    0.0246568 \n    0.2610910 \n    2.4128145 \n    0.9464586",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/water_quality.html#footnotes",
    "href": "chapters/water_quality.html#footnotes",
    "title": "Water quality",
    "section": "",
    "text": "The authors did not provide information about the countries studied in the survey, instead just distinguishing between those in the Eastern and Western hemispheres.↩︎",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Water quality</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html",
    "href": "chapters/pond_habitat.html",
    "title": "Pond habitat",
    "section": "",
    "text": "High density\nTo avoid double counting and because we assume most farmers using very high densities are using methods to prevent low DO and high ammonia, we are not counting the water-quality effects of high densities here.\nWe use observations by Rivera-Velázquez et al. (2008) and Medina-Reyna (2001) that shrimp in the wild are found at densities between 0.001 and 4.9 individuals per m2 as a reference value, assuming that this density range represents shrimp preferences.\nWe use the stocking densities from Table 3 of our main report to compare the wild shrimp densities with that of different farm types: - Extensive: ~&lt;5 to 20 post-larvae per m2 - Semi-intensive: ~5 to 40 post-larvae per m2 - Intensive: ~40 to 130 post-larvae per m2 - Super-intensive: ~130 to &gt;300 post-larvae per m2",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#prevalence",
    "href": "chapters/pond_habitat.html#prevalence",
    "title": "Pond habitat",
    "section": "Prevalence",
    "text": "Prevalence\nStocking density increases with increasing farm intensity.\nExtensive farms use low densities but may still have shrimp at somewhat higher levels than their wild counterparts. We think intensive and super-intensive farms are definitely using high densities, since it is a defining feature of these farm types.\nOur estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n25–75% (mean 50%)\n75–100% (mean 80%)\n100%\n100%\n\n\n\nfind_good_sd_binary(mean_val=0.5, tol=1e-6,\n                   fifth_percentile=0.25, ninety_fifth_percentile=0.75)\nfind_good_sd_binary(mean_val=0.8, tol=1e-6,\n                   fifth_percentile=0.75, ninety_fifth_percentile=1)\n\n\n\n[1] 0.1512446\n\n\n[1] 0.03808708\n\n\n\nSampling from beta distribution:\n\nprev_dens_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.5, 0.8, 0.99, 0.99),\n                               sd = c(0.1512446, 0.03808708, 0.001, 0.001))\nprev_dens_dist&lt;-mapply(sample_beta, prev_dens_stat$mean, prev_dens_stat$sd)\ncolnames(prev_dens_dist)&lt;-prev_dens_stat$FarmType\nprev_dens_dist[,3:4] &lt;- 1\n\nprev_dens&lt;-as.data.frame(prev_dens_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#pain-tracks",
    "href": "chapters/pond_habitat.html#pain-tracks",
    "title": "Pond habitat",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\nPercentages marked with * assume death from cannibalism happens roughly every four weeks and causes one minute of excruciating and disabling pain together when it does happen.\nPercentage marked with ** assumes death from cannibalism happens once every eight weeks and causes one minute of excruciating and disabling pain together when it does happen.\n\ndur_dens_ext&lt;-24\ndur_dens_semi&lt;-24\ndur_dens_int&lt;-24\ndur_dens_super&lt;-24\n\npain_dens_ext&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 10, 90)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_dens_semi&lt;-data.frame(sample_dirichlet(0.000625, 0.000625, 10, 89.99875)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_dens_int&lt;-data.frame(sample_dirichlet(0.00125, 0.00125, 15, 84.9975)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_dens_super&lt;-data.frame(sample_dirichlet(0.00125, 0.00125, 20, 79.9975)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_dens_ext&lt;-(dur_dens_ext * pain_dens_ext)\n\npaintrack_dens_semi&lt;-(dur_dens_semi * pain_dens_semi)\n\npaintrack_dens_int&lt;-(dur_dens_int * pain_dens_int)\n\npaintrack_dens_super&lt;-(dur_dens_super * pain_dens_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nWe assume high densities, where present, are present for the whole of a shrimp’s life. Some shrimp farmers conduct partial harvests or reduce stocking density as shrimp get larger, so we add some uncertainty.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nHigh densities seem to reduce growth and lower immune function even when water quality parameters are carefully controlled (Liu et al. (2017); da Silveira et al., 2020). This finding is consistent with shrimp experiencing negative welfare due to the chronic stress of crowding and suffering adverse health effects as a byproduct.\nCannibalism rates may also be higher in higher stocking density environments, at least for P. monodon (Abdussamad & Thampy, 1994).\nIn terms of behavioral restrictions, da Costa et al. (2016) report that retreat behaviors decrease when density increases—shrimp may prefer to be away from others but cannot do so at higher stocking densities as retreating would just put them close to other individuals. Bardera et al. (2021) confirmed that there are consistent individual differences in P. vannamei regarding which shrimp avoid contact with other shrimp at densities that are representative of extensive and semi-intensive conditions. The formation of such hierarchies likely involves conflicts that are mostly negative, especially for losing individuals.\nWe attempt to account for the fact that shrimp may be on higher alert when in higher stocking densities by having a large portion of the pain intensity in ‘annoying’. Nevertheless, we apportion some pain to the ‘hurtful’ category to account for negative contact with other individuals and reduced access to resources, and to the ‘disabling’ and ‘excruciating’ categories for cannibalism and death.\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\ndens_farms&lt;-data.frame(\n  ext = paintrack_dens_ext*prev_dens$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_dens_semi*prev_dens$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_dens_int*prev_dens$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_dens_super*prev_dens$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\ndens&lt;-dens_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_dens &lt;- dens %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_dens$Disabling_Equivalent&lt;- (\n  average_hours_dens$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_dens$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_dens$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_dens$allfarms.Excruciating*Excruciating_Weight)\n\ndensity_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_dens$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_dens$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_dens$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_dens$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_dens$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_dens))\nrow.names(density_summary)&lt;-c(\n  \"Annoying_dens\",\"Hurtful_dens\",\"Disabling_dens\", \"Excruciating_dens\", \"Disabling-Equivalent_High_stocking_density\")\nshow_table(density_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_dens \n    260.567270 \n    2493.46325 \n    3321.0275534 \n    2160.2088110 \n  \n  \n    Hurtful_dens \n    40.660056 \n    377.53420 \n    617.3710350 \n    351.8301888 \n  \n  \n    Disabling_dens \n    0.000000 \n    0.00000 \n    0.0000001 \n    0.0272782 \n  \n  \n    Excruciating_dens \n    0.000000 \n    0.00000 \n    0.0000000 \n    0.0265697 \n  \n  \n    Disabling-Equivalent_High_stocking_density \n    5.234926 \n    49.02643 \n    112.2994853 \n    63.7122589",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#prevalence-1",
    "href": "chapters/pond_habitat.html#prevalence-1",
    "title": "Pond habitat",
    "section": "Prevalence",
    "text": "Prevalence\nEarthen ponds, typically used for extensive and sometimes semi-intensive ponds likely have a burrowable substrate on the pond bottom. Some semi-intensive ponds are lined with plastic, however. Intensive and super-intensive ponds are plastic or concrete lined, or are raised tanks, which would not have substrate available to shrimp.\n95% of semi-intensive farms in SWP’s India Scoping Report and the one intensive farm interviewed, said they had substrate where shrimps can bury themselves.\nUsing artificial screens or other structures shrimp can cling to is not standard practice in any farm type. It is possible that extensive and some semi-intensive ponds may have plants growing in them, which shrimp could use for this purpose, though we are very uncertain about this.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–15% (mean 5%)\n25–75% (mean 50%)\n90–100% (mean 95%)\n100%\n\n\n\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.15)\nfind_good_sd_binary(mean_val=0.5, tol=1e-6,\n                   fifth_percentile=0.25, ninety_fifth_percentile=0.75)\nfind_good_sd_binary(mean_val=0.95, tol=1e-6, #sd_val=0.15,\n                   fifth_percentile=0.9, ninety_fifth_percentile=1)\n\n\n\n[1] 0.07970699\n\n\n[1] 0.1513085\n\n\n[1] 0.03695588\n\n\n\nSampling from beta distribution:\n\nprev_subst_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.05, 0.5, 0.95, 0.99),\n                               sd = c(0.07970699, 0.1513085, 0.03695588, 0.001))\nprev_subst_dist&lt;-mapply(sample_beta, prev_subst_stat$mean, prev_subst_stat$sd)\ncolnames(prev_subst_dist)&lt;-prev_subst_stat$FarmType\nprev_subst_dist[,4]&lt;-1\n\nprev_subst&lt;-as.data.frame(prev_subst_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#pain-tracks-1",
    "href": "chapters/pond_habitat.html#pain-tracks-1",
    "title": "Pond habitat",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nWhere no substrate is present, shrimp in different farming systems are likely to have the same experience so we do one pain track for all farm types. However, P. monodon burrow more than P. vannamei so we do species-specific pain-tracks, one for P. vannamei and other penaeids and one for P. monodon, then weight by the proportion of farmed shrimp that are that species or group. P. monodon would usually burrow for around half the day in the wild.\n\nDurations marked * assume death from cannibalism happens once every four weeks and causes one minute of excruciating and disabling pain together when it does.\n\ndur_subst&lt;-12\n\npain_subst_vannamei&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;%\n  cbind(sample_dirichlet(0, 0, 2, 98)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_subst_monodon&lt;-data.frame(sample_dirichlet(0.0025, 0.0025, 29.995, 70)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information and weight by the proportion of farmed shrimp that are that species or group.\n\npaintrack_subst_vannamei&lt;-(dur_subst * pain_subst_vannamei * (prop_allspecies_dof$van_prop+prop_allspecies_dof$otherpen_prop))\n\npaintrack_subst_monodon&lt;-(dur_subst * pain_subst_monodon * prop_allspecies_dof$mon_prop)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nIf no substrate is present, this will be the case for 100% of a shrimp’s life.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nP. monodon shrimp burrow daily in the wild (FAO, 2023), so having no burrowable substrate probably behaviorally deprives them significantly. It is less clear to what extent P. vannamei burrow.\nWe, therefore, attribute most pain from a lack of substrate to ‘annoying’, with a small portion attributed to ‘hurtful’. For P. monodon, we attribute half of the pain to ‘hurtful’ to account for not being able to express species-typical behaviors. We assign a tiny portion to ‘disabling’ and ‘excruciating’ because cannibalism incidences may be more common when no substrate is present, even at the same stocking density (Abdussamad & Thampy, 1994).\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\nsubst_farms&lt;-data.frame(\n  ext = (paintrack_subst_vannamei+paintrack_subst_monodon)*prev_subst$Extensive*prop_sample$Ext*average_days_lived,\n  semi = (paintrack_subst_vannamei+paintrack_subst_monodon)*prev_subst$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = (paintrack_subst_vannamei+paintrack_subst_monodon)*prev_subst$Intensive*prop_sample$Int*average_days_lived,\n  super = (paintrack_subst_vannamei+paintrack_subst_monodon)*prev_subst$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nsubst&lt;-subst_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_subst &lt;- subst %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_subst$Disabling_Equivalent&lt;- (\n  average_hours_subst$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_subst$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_subst$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_subst$allfarms.Excruciating*Excruciating_Weight)\n\nsubst_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_subst$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_subst$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_subst$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_subst$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_subst$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_subst))\nrow.names(subst_summary)&lt;-c(\n  \"Annoying_subst\",\"Hurtful_subst\",\"Disabling_subst\", \"Excruciating_subst\", \"Disabling-Equivalent_Lack_of_substrate\")\nshow_table(subst_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_subst \n    123.312084 \n    1175.07878 \n    1591.68529 \n    1023.9393168 \n  \n  \n    Hurtful_subst \n    4.645325 \n    43.47604 \n    97.39193 \n    45.7305333 \n  \n  \n    Disabling_subst \n    0.000000 \n    0.00000 \n    0.00000 \n    0.0020288 \n  \n  \n    Excruciating_subst \n    0.000000 \n    0.00000 \n    0.00000 \n    0.0021100 \n  \n  \n    Disabling-Equivalent_Lack_of_substrate \n    1.227130 \n    11.47259 \n    24.15215 \n    12.5632945",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#prevalence-2",
    "href": "chapters/pond_habitat.html#prevalence-2",
    "title": "Pond habitat",
    "section": "Prevalence",
    "text": "Prevalence\nWe were unable to find estimates of the incidence of predators or data on how much mortality predators typically cause. However, a consulted expert suggested that predators are usually well-managed in current shrimp farming practices. We expect that where this issue is present, it is usually in extensive farms.\nWe give super-intensive farms a value of zero because super-intensive are indoor, closed, predator-free systems.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–50% (mean 25%)\n0–30% (mean 15%)\n0–10% (mean 5%)\n0%\n\n\n\nfind_good_sd_binary(mean_val=0.25, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.5)\nfind_good_sd_binary(mean_val=0.15, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.3)\nfind_good_sd_binary(mean_val=0.05, tol=1e-6, #sd_val=0.15,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\n\n\n\n[1] 0.17334\n\n\n[1] 0.1077494\n\n\n[1] 0.03673223\n\n\n\nSampling from beta distribution:\n\nprev_pred_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.25, 0.15, 0.05, 0.001),\n                               sd = c(0.17334, 0.1077494, 0.03673223, 0.001))\nprev_pred_dist&lt;-mapply(sample_beta, prev_pred_stat$mean, prev_pred_stat$sd)\ncolnames(prev_pred_dist)&lt;-prev_pred_stat$FarmType\nprev_pred_dist[,4]&lt;-1\n\nprev_pred&lt;-as.data.frame(prev_pred_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/pond_habitat.html#pain-tracks-2",
    "href": "chapters/pond_habitat.html#pain-tracks-2",
    "title": "Pond habitat",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\nDurations marked * assume 10 seconds of excruciating pain (at the longest duration) if a shrimp is eaten by a predator, and that one in every 50 shrimp is eaten\nDurations marked ** assume one minute of high predator vigilance (i.e. ceasing some activities they would otherwise do) a day at the longest duration – shrimp are likely not vigilant to birds very much if the water turbidity is high, but they are a prey species so likely exhibit predator vigilance and avoidance, so we start with an estimate of a minute a day\nThose marked *** assume two minutes of high predator vigilance a day at the longest duration, hypothesizing that vigilance increases the longer predators are present\nThose marked **** assume 5 minutes of high predator vigilance a day at the longest duration.\n\ndur_pred_ext&lt;-runif(n, 1, 3)\ndur_pred_semi&lt;-runif(n, 0.5, 1)\ndur_pred_int&lt;-runif(n, 0.1, 0.5)\ndur_pred_super&lt;-runif(n, 0, 0)\n\npain_pred_ext&lt;-data.frame(sample_dirichlet(0.002, 0.001, 2.8, 97.197)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_pred_semi&lt;-data.frame(sample_dirichlet(0.006, 0.003, 3, 96.991)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_pred_int&lt;-data.frame(sample_dirichlet(0.012, 0.006, 3.4, 96.582)) %&gt;%\n  `colnames&lt;-`(paincategories) \n\npain_pred_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0,\n  Hurtful = 0,\n  Annoying = 0) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_pred_ext&lt;-(dur_pred_ext * pain_pred_ext)\n\npaintrack_pred_semi&lt;-(dur_pred_semi * pain_pred_semi)\n\npaintrack_pred_int&lt;-(dur_pred_int * pain_pred_int)\n\npaintrack_pred_super&lt;-(dur_pred_super * pain_pred_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nWe account for pains caused by being attacked or eaten by a predator and for pains caused by vigilance and avoidance.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nWe expect that shrimp who are predated upon are killed reasonably quickly by predators, so we assign most pain to annoying and hurtful, with a small proportion given to disabling and excruciating to represent imminent death. The annoying pain proportion also represents the stress of shrimp being vigilant of predators.\n\n\n\n\npred_farms&lt;-data.frame(\n  ext = paintrack_pred_ext*prev_pred$Extensive*prop_sample$Ext*average_days_lived,\n  semi = paintrack_pred_semi*prev_pred$`Semi-Intensive`*prop_sample$Semi*average_days_lived,\n  int = paintrack_pred_int*prev_pred$Intensive*prop_sample$Int*average_days_lived,\n  super = paintrack_pred_super*prev_pred$`Super-Intensive`*prop_sample$Super*average_days_lived)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\npred&lt;-pred_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_pred &lt;- pred %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_pred$Disabling_Equivalent&lt;- (\n  average_hours_pred$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_pred$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_pred$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_pred$allfarms.Excruciating*Excruciating_Weight)\n\npred_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_pred$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_pred$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_pred$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_pred$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_pred$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_pred))\nrow.names(pred_summary)&lt;-c(\n  \"Annoying_pred\",\"Hurtful_pred\",\"Disabling_pred\", \"Excruciating_pred\", \"Disabling-Equivalent_Predators\")\nshow_table(pred_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_pred \n    0.8050590 \n    7.9419517 \n    24.0954781 \n    9.4924930 \n  \n  \n    Hurtful_pred \n    0.0209389 \n    0.2115089 \n    0.8025060 \n    0.2849289 \n  \n  \n    Disabling_pred \n    0.0000000 \n    0.0000000 \n    0.0000306 \n    0.0001923 \n  \n  \n    Excruciating_pred \n    0.0000000 \n    0.0000000 \n    0.0005100 \n    0.0003953 \n  \n  \n    Disabling-Equivalent_Predators \n    0.0072090 \n    0.0748735 \n    0.4028101 \n    0.2846178",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Pond habitat</span>"
    ]
  },
  {
    "objectID": "chapters/feed_management.html",
    "href": "chapters/feed_management.html",
    "title": "Feed management",
    "section": "",
    "text": "Malnutrition",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Feed management</span>"
    ]
  },
  {
    "objectID": "chapters/feed_management.html#prevalence",
    "href": "chapters/feed_management.html#prevalence",
    "title": "Feed management",
    "section": "Prevalence",
    "text": "Prevalence\nExtensive farms rely solely on food produced naturally by ponds for shrimp, whereas semi-intensive farms supplement this with artificial feeds, and intensive and super-intensive farms usually rely solely on artificial feeds. To what extent these artificial feeds meet shrimp nutrient requirements is difficult to know and likely highly variable across farms, feeds, and countries.\nBroadly, we expect malnutrition is not a significant problem on shrimp farms because nutrition is closely linked with shrimp growth and, therefore, farm production and profits. As such, shrimp farmers are highly incentivized to ensure shrimp meet their nutrient requirements. Additionally, the nutritional requirements of shrimp have been well-studied (e.g., Ayisi et al., 2017).\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–10% (mean 5%)\n0–10% (mean 5%)\n0–10% (mean 5%)\n0–10% (mean 5%)\n\n\n\n\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\n\n[1] 0.0368478\n\n\nSampling from beta distribution:\n\nprev_malnu_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.05, 0.05, 0.05, 0.05),\n                               sd = c(0.0368478, 0.0368478, 0.0368478, 0.0368478))\nprev_malnu_dist&lt;-mapply(sample_beta, prev_malnu_stat$mean, prev_malnu_stat$sd)\ncolnames(prev_malnu_dist)&lt;-prev_malnu_stat$FarmType\n\nprev_malnu&lt;-as.data.frame(prev_malnu_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Feed management</span>"
    ]
  },
  {
    "objectID": "chapters/feed_management.html#pain-tracks",
    "href": "chapters/feed_management.html#pain-tracks",
    "title": "Feed management",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\n\ndur_malnu_ext&lt;-rtruncnorm(n, a=84, b=336, mean=210, sd=21) # we set the standard deviation at a quarter of the lower bound\ndur_malnu_semi&lt;-rtruncnorm(n, a=84, b=168, mean=105, sd=21)\ndur_malnu_int&lt;-rtruncnorm(n, a=84, b=168, mean=126, sd=21)\ndur_malnu_super&lt;-rtruncnorm(n, a=42, b=84, mean=63, sd=10.5)\n\npain_malnu_ext&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.05, 99.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_malnu_semi&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.05, 99.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_malnu_int&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.05, 99.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_malnu_super&lt;-data.frame(\n  Excruciating = 0,\n  Disabling = 0) %&gt;% \n  cbind(sample_dirichlet(0, 0, 0.05, 99.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_malnu_ext&lt;-(dur_malnu_ext * pain_malnu_ext)\n\npaintrack_malnu_semi&lt;-(dur_malnu_semi * pain_malnu_semi)\n\npaintrack_malnu_int&lt;-(dur_malnu_int * pain_malnu_int)\n\npaintrack_malnu_super&lt;-(dur_malnu_super * pain_malnu_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nIf a shrimp experiences malnutrition, it is likely after several feedings with inadequate nutrition. Additionally, farmers change the feed they provide to shrimp depending on shrimp life stage or other factors, like costs. Farmers generally monitor the growth of their shrimp, so if shrimp are not getting the nutrients they require and consequently not growing as expected, farmers are likely to react accordingly and try to prevent continued effects of malnutrition.\nIn intensive and super-intensive farms, since farmers check the growth of shrimp regularly, we expect shrimp will not experience malnutrition for more than one to two weeks across the entire production cycle. - 1 week = 168 hours - 2 weeks = 336 hours. In extensive farms we hypothesize they may not notice for up to four weeks - 4 weeks = 672 hours\nWe hypothesize that shrimp only feel the effects of malnutrition half of the time they are experiencing it, as the malnutrition likely has to be severe and prolonged to influence welfare. Semi-intensive farms often have both naturally occurring food in the pond (promoted by fertilizer) and supplemental artificial food. As there are multiple food sources, malnutrition may be slightly lower, so we skew the durations slightly lower for this farm type. Intensive farms rely only on artificial feeds so we do not skew the duration distribution for this farm type. Super-intensive farms, while feeding shrimp only artificial feeds, check shrimp regularly for growth and have shorter farming periods. Therefore, there is less chance for prolonged malnutrition in these farms, so we shorten the duration by half.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nAs noted in our previous report:\n\n“Malnutrition can reduce a shrimp’s ability to respond to or resist diseases (see Zhang et al., 2022, pp.392-401 for review). Other forms of malnutrition that are probably less common, such as lack of protein, can reduce shrimp growth or cause weight loss because protein stored in the body is used for energy for other processes (Zhang et al., 2022, p.393.”\n\nP. vannamei may also have to be selectively bred to be able to be reared on high soybean meal diets (according to this broodstock company website), potentially implying they do not naturally tolerate this diet.\n\n\n\nThen we combine prevalence, intensity, and duration of pain caused by malnutrition. The durations used in the Pain-Tracks are for the whole farming cycle, so we do not need to weight these estimations by the average days lived by a shrimp.\n\nmalnu_farms&lt;-data.frame(\n  ext = paintrack_malnu_ext*prev_malnu$Extensive*prop_sample$Ext,\n  semi = paintrack_malnu_semi*prev_malnu$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_malnu_int*prev_malnu$Intensive*prop_sample$Int,\n  super = paintrack_malnu_super*prev_malnu$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nmalnu&lt;-malnu_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_malnu &lt;- malnu %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_malnu$Disabling_Equivalent&lt;- (\n  average_hours_malnu$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_malnu$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_malnu$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_malnu$allfarms.Excruciating*Excruciating_Weight)\n\nmalnu_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_malnu$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_malnu$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_malnu$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_malnu$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_malnu$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_malnu))\nrow.names(malnu_summary)&lt;-c(\n  \"Annoying_malnu\",\"Hurtful_malnu\",\"Disabling_malnu\", \"Excruciating_malnu\", \"Disabling-Equivalent_Malnutrition\")\nshow_table(malnu_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_malnu \n    2.1866714 \n    5.8592366 \n    13.5736068 \n    6.6066504 \n  \n  \n    Hurtful_malnu \n    0.0000000 \n    0.0000937 \n    0.0154983 \n    0.0033473 \n  \n  \n    Disabling_malnu \n    0.0000000 \n    0.0000000 \n    0.0000000 \n    0.0000000 \n  \n  \n    Excruciating_malnu \n    0.0000000 \n    0.0000000 \n    0.0000000 \n    0.0000000 \n  \n  \n    Disabling-Equivalent_Malnutrition \n    0.0093716 \n    0.0329632 \n    0.0946753 \n    0.0400037",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Feed management</span>"
    ]
  },
  {
    "objectID": "chapters/feed_management.html#prevalence-1",
    "href": "chapters/feed_management.html#prevalence-1",
    "title": "Feed management",
    "section": "Prevalence",
    "text": "Prevalence\nIn extensive farms, shrimp rely on the natural feed of the pond. Since shrimp can likely graze continuously in these ponds, we think shrimp in extensive farms are unlikely to be underfed. Semi-intensive, intensive and super-intensive farms provision shrimp with artificial feeds, which can be expensive (Ayisi et al., 2017), so underfeeding may be more common in these farm types due to farmers trying to save on costs. However, given the critical role of feeding in shrimp growth, we hypothesize that inadequate nutrition in shrimp farms is unlikely to be a welfare problem of significant scope.\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–10% (mean 5%)\n0–25% (mean 10%)\n0–25% (mean 15%)\n0–25% (mean 15%)\n\n\n\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\nfind_good_sd_binary(mean_val=0.1, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.25)\nfind_good_sd_binary(mean_val=0.15, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.25)\n\n\n\n[1] 0.03699412\n\n\n[1] 0.1082522\n\n\n[1] 0.07359837\n\n\n\nSampling from beta distribution:\n\nprev_hunger_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.05, 0.1, 0.15, 0.15),\n                               sd = c(0.03699412, 0.1082522, 0.07359837, 0.07359837))\nprev_hunger_dist&lt;-mapply(sample_beta, prev_hunger_stat$mean, prev_hunger_stat$sd)\ncolnames(prev_hunger_dist)&lt;-prev_hunger_stat$FarmType\n\nprev_hunger&lt;-as.data.frame(prev_hunger_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Feed management</span>"
    ]
  },
  {
    "objectID": "chapters/feed_management.html#pain-tracks-1",
    "href": "chapters/feed_management.html#pain-tracks-1",
    "title": "Feed management",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\nDurations marked * equate to roughly one second at the longest duration, to account for rare instances of cannibalism due to hunger.\n\ndur_hunger_ext&lt;-rtruncnorm(n, a=24, b=672, mean=348, sd=87)\ndur_hunger_semi&lt;-rtruncnorm(n, a=24, b=168, mean=96, sd=24)\ndur_hunger_int&lt;-rtruncnorm(n, a=24, b=168, mean=96, sd=24)\ndur_hunger_super&lt;-rtruncnorm(n, a=24, b=168, mean=72, sd=24)\n\npain_hunger_ext&lt;-data.frame(sample_dirichlet(0.00005, 0.00005, 9, 90.9999)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_hunger_semi&lt;-data.frame(sample_dirichlet(0.0002, 0.0002, 20, 79.9996)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_hunger_int&lt;-data.frame(sample_dirichlet(0.0002, 0.0002, 20, 79.9996)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\npain_hunger_super&lt;-data.frame(sample_dirichlet(0.0002, 0.0002, 20, 79.9996)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_hunger_ext&lt;-(dur_hunger_ext * pain_hunger_ext)\n\npaintrack_hunger_semi&lt;-(dur_hunger_semi * pain_hunger_semi)\n\npaintrack_hunger_int&lt;-(dur_hunger_int * pain_hunger_int)\n\npaintrack_hunger_super&lt;-(dur_hunger_super * pain_hunger_super)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nSimilarly to malnutrition we expect that if shrimp are underfed, farmers would notice relatively quickly during routine growth checks. As extensive farms do not provide extra feed, instead relying on the natural productivity of the pond, shrimp could be underfed in these systems for longer but the intensity would be lower.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nWhen underfed, penaeids show increased cannibalism (Lara et al., 2017) and reduced immune function (Dai et al., 2018).\n\n\n\nFinally, we combine the prevalence, intensity, and duration estimates.\n\nhunger_farms&lt;-data.frame(\n  ext = paintrack_hunger_ext*prev_hunger$Extensive*prop_sample$Ext,\n  semi = paintrack_hunger_semi*prev_hunger$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_hunger_int*prev_hunger$Intensive*prop_sample$Int,\n  super = paintrack_hunger_super*prev_hunger$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nhunger&lt;-hunger_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_hunger &lt;- hunger %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_hunger$Disabling_Equivalent&lt;- (\n  average_hours_hunger$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_hunger$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_hunger$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_hunger$allfarms.Excruciating*Excruciating_Weight)\n\nhunger_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_hunger$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_hunger$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_hunger$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_hunger$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_hunger$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_hunger))\nrow.names(hunger_summary)&lt;-c(\n  \"Annoying_hunger\",\"Hurtful_hunger\",\"Disabling_hunger\", \"Excruciating_hunger\", \"Disabling-Equivalent_Hunger\")\nshow_table(hunger_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_hunger \n    4.5501279 \n    10.5791877 \n    20.866245 \n    11.3716478 \n  \n  \n    Hurtful_hunger \n    0.9143346 \n    2.3252122 \n    5.048459 \n    2.5718200 \n  \n  \n    Disabling_hunger \n    0.0000000 \n    0.0000000 \n    0.000000 \n    0.0000201 \n  \n  \n    Excruciating_hunger \n    0.0000000 \n    0.0000000 \n    0.000000 \n    0.0000443 \n  \n  \n    Disabling-Equivalent_Hunger \n    0.0893326 \n    0.2969394 \n    0.806294 \n    0.3757354",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Feed management</span>"
    ]
  },
  {
    "objectID": "chapters/health.html",
    "href": "chapters/health.html",
    "title": "Health",
    "section": "",
    "text": "Eyestalk ablation\nWe split eyestalk ablation into two categories: The ablation itself and the hour immediately afterward (acute pain), and the week after that (chronic pain).",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Health</span>"
    ]
  },
  {
    "objectID": "chapters/health.html#prevalence",
    "href": "chapters/health.html#prevalence",
    "title": "Health",
    "section": "Prevalence",
    "text": "Prevalence\nAn estimate we will use for both parts is how often eyestalk ablation occurs in each production system. We assume that eyestalk ablation becomes more common in more intensive systems because these systems are far more likely to rely on captive broodstock than wild-caught shrimp. Still, the prevalence is unlikely to be 100% for intensive and super-intensive farms because some broodstock suppliers have stopped using eyestalk ablation (Albalat et al., 2022). We are less certain to what extent semi-intensive farms use captive broodstock. Traditionally, extensive systems relied more on wild-caught young shrimp, so we are less certain how prevalent eyestalk ablation is in this farm type.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n25–100% (mean 75%)\n50–100% (mean 75%)\n90–100% (mean 98%)\n90–100% (mean 98%)\n\n\n\nfind_good_sd_binary(mean_val=0.75, tol=1e-6,\n                   fifth_percentile=0.25, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.75, tol=1e-6,\n                   fifth_percentile=0.5, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.98, tol=1e-6, sd_val=0.1,\n                   fifth_percentile=0.9, ninety_fifth_percentile=1)\n\n\n\n[1] 0.2914784\n\n\n[1] 0.1733532\n\n\n[1] 0.05873486\n\n\n\nSampling from beta distribution:\n\nprev_ablation_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.75, 0.75, 0.98, 0.98),\n                               sd = c(0.2914784, 0.1733532, 0.05873486, 0.05873486))\nprev_ablation_dist&lt;-mapply(sample_beta, prev_ablation_stat$mean, prev_ablation_stat$sd)\ncolnames(prev_ablation_dist)&lt;-prev_ablation_stat$FarmType\n\nprev_ablation_unadjusted&lt;-as.data.frame(prev_ablation_dist)\n\nWe also need to adjust for the fact that only female broodstock are subjected to eyestalk ablation, not their offspring who are actually raised for food. We calculate the number of broodstock by using the total number of shrimp that die on farms from the postlarval stage onward (from Waldhorn & Autric’s 2023 Guesstimate model), divided by the number of eggs different species lay per spawn, and assuming only half the eggs hatch.\nSee set up chapter for how the variables used here were calculated. First, we must calculate the number of shrimp that die on farms from the postlarval stage onward. We do so because other threats are evaluated for the harms they cause in the ongrowing stage only, so we must calculate the proportion of shrimp that are broodstock against only this population. handling the data in the same way as the set-up, using the kde1d function to generate 100,000 samples.\n\nlibrary(kde1d) # load the required package\n\nallspecies_dof&lt;-as.data.frame(allspecies_dof) # load the estimations for number of shrimp that die on farms, calculated in the set-up chapter\n\n# load mortality samples to calculate larval mortality rates for each species\nvannamei_mort_samp&lt;-read.csv(\"../data/vannamei_mortality_rates.csv\",header=TRUE, sep=\",\") # Cells UY, UJ, and TF in the Guesstimate model\nmonodon_mort_samp&lt;-read.csv(\"../data/monodon_mortality_rates.csv\", header=TRUE, sep=\",\") # Cells ZA, XZ, and YR in the Guesstimate model\notherpen_mort_samp&lt;-read.csv(\"../data/otherpen_mortality_rates.csv\", header=TRUE,sep=\",\")\n # Cells MU, UQ, and XJ in the Guesstimate model\n\nvannamei_larval_prob&lt;-data.frame(larval=rep(NA, 100000)) # create empty data frame\n\n# fill empty data frame with data simulated from Guesstimate data using kde1d function\nvannamei_larval_prob$larval&lt;-vannamei_mort_samp$larval %&gt;% \n  kde1d(xmin = 0,\n        xmax = 1) %&gt;% # Probabilities cannot be less than 0 or more than 1 so we add these as xmin and xmax\n  rkde1d(100000,.)\n\n# repeat for other taxa\nmonodon_larval_prob&lt;-data.frame(larval=rep(NA, 100000))\nmonodon_larval_prob$larval&lt;-monodon_mort_samp$larval %&gt;% \n  kde1d(xmin = 0, \n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\notherpen_larval_prob&lt;-data.frame(larval=rep(NA, 100000))\notherpen_larval_prob$larval&lt;-otherpen_mort_samp$larval %&gt;% \n  kde1d(xmin = 0, \n        xmax = 1) %&gt;%\n  rkde1d(100000,.)\n\n# calculate the number of shrimp that die on farms after the larval stage for each species\nvannamei_dof_pl&lt;-allspecies_dof$vannamei_dof*(1-vannamei_larval_prob$larval)\nmonodon_dof_pl&lt;-allspecies_dof$monodon_dof*(1-monodon_larval_prob$larval)\notherpen_dof_pl&lt;-allspecies_dof$otherpen_dof*(1-otherpen_larval_prob$larval)\n\nWe now have the number of shrimp that die on farms, both in total and from the postlarval stage onward. Next, we can estimate the number of broodstock that would have been needed to produce the total number of shrimp that died on farms, and calculate that number of broodstock as a proportion of our population of interest (shrimp in the ongrowing stage).\n\n# distribution of egg numbers\nvannamei_eggs&lt;-runif(100000, min=100000, max=250000) # according to FAO\nvannamei_broodstock&lt;-allspecies_dof$vannamei_dof/vannamei_eggs*0.5 # assuming only half of eggs hatch. \nvannamei_broodstock_prop&lt;-vannamei_broodstock/(vannamei_broodstock+allspecies_dof$vannamei_dof)\n\nmonodon_eggs&lt;-runif(100000, min=500000, max=750000) # according to FAO\nmonodon_broodstock&lt;-allspecies_dof$monodon_dof/monodon_eggs*0.5\nmonodon_broodstock_prop&lt;-monodon_broodstock/(monodon_broodstock+allspecies_dof$monodon_dof)\n\notherpen_eggs&lt;-runif(100000, min=200000, max=1000000) # according to Table 4.6a, Wickins and Lee (2002)\notherpen_broodstock&lt;-allspecies_dof$otherpen_dof/otherpen_eggs*0.5\notherpen_broodstock_prop&lt;-otherpen_broodstock/(otherpen_broodstock+allspecies_dof$otherpen_dof)\n\nfemale_broodstock&lt;-(vannamei_broodstock+monodon_broodstock+otherpen_broodstock)\n\nfemale_broodstock_prop&lt;- (female_broodstock/(female_broodstock+vannamei_dof_pl+monodon_dof_pl+otherpen_dof_pl))\n\nhead(female_broodstock_prop) # the proportion of shrimp that are female broodstock.\n\n[1] 2.206959e-06 3.640229e-06 2.544718e-06 4.045479e-06 3.934490e-06\n[6] 4.239612e-06\n\n# multiply proportion of farms that source larvae from ablated broodstock by proportion of shrimp on those farms that are broodstock. This gives you the proportion of farmed broodstock that are ablated shrimp.\nprev_ablation&lt;-prev_ablation_unadjusted*female_broodstock_prop\n\n#saveRDS(female_broodstock_prop, file=\"../data/female_broodstock_prop.RData\")\n\nWe can also see the average number of female broodstock.\n\nmean(female_broodstock)\n\n[1] 2014017",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Health</span>"
    ]
  },
  {
    "objectID": "chapters/health.html#pain-tracks",
    "href": "chapters/health.html#pain-tracks",
    "title": "Health",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\n\n\nfirst_dur_ablation&lt;-sample_trunclogn(n, 1, .5, 1/12, 2)  \nplot(density(first_dur_ablation), xlab=\"Hours\", main=\"Duration of acute eyestalk ablation pain\")\n\n\n\n\n\n\n\nquantile(first_dur_ablation, probs = c(.05, .50, .95))\n\n       5%       50%       95% \n0.4058470 0.8718918 1.6749902 \n\nfirst_pain_ablation&lt;-data.frame(sample_dirichlet(0.1, 55, 35, 9.9)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nThen for the second half:\n\n# 168 hours in a week, sample from log-normal for consistency\nsec_dur_ablation&lt;-sample_trunclogn(n=n, min_value=0, max_value=240, mean=120, sd=72)\nplot(density(sec_dur_ablation) , main=\"Duration of chronic eyestalk ablation pain\", xlab=\"Hours\")\n\n\n\n\n\n\n\nquantile(sec_dur_ablation, probs = c(.05, .50, .95))\n\n       5%       50%       95% \n 40.34609  98.22554 202.49194 \n\nsec_pain_ablation&lt;-data.frame(sample_dirichlet(0.002, 0.004, 10, 89.994)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine into Pain-Tracks:\n\npaintrack_ablation&lt;-(first_dur_ablation * first_pain_ablation) + (\n  sec_dur_ablation * sec_pain_ablation)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nTime can’t be lower than 0, and a long right tail may be more plausible than a symmetric distribution, so we use a log-normal distribution for both types of pain.\nAcute pain (Part 1) Taylor et al. (2004) noted that erratic swimming continued for an hour after ablation.\nChronic pain (Part 2) To be conservative, we assume that chronic pain lasts only four days, on average, with a range up to 10 days. We truncate the lower bound at 0 hours, to account for the possibility that shrimp do not experience chronic pain from eyestalk ablation.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nWe assume severity is the same in each production style, conditional on being ablated. This assumption may be violated if the method for ablating shrimp varies in pain severity and is correlated with production style.\nAcute pain (Part 1) We base our estimates on the findings from our previous report:\n\nAfter having one eyestalk ablated, shrimp display several behaviors potentially indicative of pain, like tail-flicking, recoiling, stooping (laying prone on the pond floor), disorientation, avoiding sheltering, erratic swimming and rubbing the affected area for a period of time after ablation (Diarte-Plata et al., 2012; Barr et al., 2008; Taylor et al., 2004). In particular, Diarte-Plata et al. (2012) report that ligation, even using a local anesthetic, causes more stress than other techniques, as indicated by significantly more tail-flicking, recoil, disorientation, and rubbing of the affected area. Additionally, up to 80% of the studied shrimp displayed similar behaviors when a slitting ablation method was used. Similarly, in Taylor et al.’s (2004) study, 80% of the shrimp exhibited erratic swimming behavior right after the animals had one of their eyes ablated. Shrimp show fewer behavioral signs of stress if a topical anesthetic is applied before ablation (Diarte-Plata et al., 2012; Taylor et al., 2004).\n\nMany of these behaviors seem consistent with ‘hurtful’ and ‘disabling’ pain, so we assign most of the pain to these categories. We also include a small proportion in ‘excruciating’ because mortality is higher in ablated females (Zacarias et al., 2019).\nChronic pain (Part 2) This follows directly after part 1 pain. We assume that the pain is much milder but also longer-lasting.\nAs behavior returns to normal roughly an hour after ablation (Taylor et al., 2004), we assign most of the chronic pain to the ‘annoying’ category. We still leave some in the other pain categories because some mortality of ablated broodstock likely happens during the chronic pain stage.\n\n\n\nNow we combine the Pain-Tracks with prevalence.\n\nablation_farms&lt;-data.frame(ext = paintrack_ablation*prev_ablation$Extensive*prop_sample$Ext,\n                   semi = paintrack_ablation*prev_ablation$`Semi-Intensive`*prop_sample$Semi,\n                   int = paintrack_ablation*prev_ablation$Intensive*prop_sample$Int,\n                   super = paintrack_ablation*prev_ablation$`Super-Intensive`*prop_sample$Super)\n\nFinally, we combine the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nablation&lt;-ablation_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_ablation &lt;- ablation %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_ablation$Disabling_Equivalent&lt;- (\n  average_hours_ablation$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_ablation$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_ablation$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_ablation$allfarms.Excruciating*Excruciating_Weight)\n\nablation_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_ablation$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ablation$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_ablation$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ablation$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_ablation$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_ablation))\nrow.names(ablation_summary)&lt;-c(\n  \"Annoying_ablation\",\"Hurtful_ablation\",\"Disabling_ablation\", \"Excruciating_ablation\", \"Disabling-Equivalent_Eyestalk_ablation\")\nshow_table(ablation_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_ablation \n    9.54e-05 \n    0.0002542 \n    0.0005995 \n    2.89e-04 \n  \n  \n    Hurtful_ablation \n    9.70e-06 \n    0.0000279 \n    0.0000739 \n    3.31e-05 \n  \n  \n    Disabling_ablation \n    6.00e-07 \n    0.0000014 \n    0.0000031 \n    1.60e-06 \n  \n  \n    Excruciating_ablation \n    0.00e+00 \n    0.0000000 \n    0.0000000 \n    0.00e+00 \n  \n  \n    Disabling-Equivalent_Eyestalk_ablation \n    2.60e-06 \n    0.0000066 \n    0.0000200 \n    1.17e-05",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Health</span>"
    ]
  },
  {
    "objectID": "chapters/health.html#prevalence-1",
    "href": "chapters/health.html#prevalence-1",
    "title": "Health",
    "section": "Prevalence",
    "text": "Prevalence\n14.5% of P. vannamei and 32.5% of P. monodon shrimp die pre-slaughter in the ongrowing stage (McKay & McAuliffe, 2024. Table 1). In our estimates of the average days lived by a shrimp (see Calculating pre-slaughter mortality rates), ~16.8% of P. vannamei, P. monodon, and other penaeid shrimp die in the ongrowing stage prior to slaughter:\n\nmean(stage_probabilities[,2])\n\n[1] 0.168777\n\n\nHere, we hypothesize that half of these are from diseases. This would mean roughly 8.4% of shrimp die from diseases. Potentially, some diseases are never noticed or are treated and shrimp do not die from them (though many shrimp viruses cause significant losses). On the other hand, some diseases instances will be caused by other welfare issues (e.g., physiological stress from nonoptimal water quality), which we are not counting here. As such, we estimate that 5–20% of shrimp . We think diseases are most prevalent in semi-intensive farms as they have reasonably high stocking densities but fewer resources to put into biosecurity measures.\nThe numbers in the table below equate to roughly 5–20% of shrimp overall when considering the proportions of farm types.\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n5–20% (mean 12.5%)\n5.5–30% (mean 17.75%)\n5–18% (mean 11.5%)\n0.5–5% (mean 2.75%)\n\n\n\nfind_good_sd_binary(mean_val=0.125, tol=1e-6,\n                   fifth_percentile=0.05, ninety_fifth_percentile=0.2)\nfind_good_sd_binary(mean_val=0.1775, tol=1e-6,\n                   fifth_percentile=0.055, ninety_fifth_percentile=0.3)\nfind_good_sd_binary(mean_val=0.115, tol=1e-6, \n                   fifth_percentile=0.05, ninety_fifth_percentile=0.18)\nfind_good_sd_binary(mean_val=0.0275, tol=1e-6,sd_val=0.1,\n                   fifth_percentile=0.005, ninety_fifth_percentile=0.05)\n\n\n\n[1] 0.04751694\n\n\n[1] 0.07778246\n\n\n[1] 0.04078287\n\n\n[1] 0.01519449\n\n\n\nSampling from beta distribution:\n\nprev_disease_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.125, 0.1775, 0.115, 0.0275),\n                               sd = c(0.04715328, 0.0776112, 0.04096845, 0.01522693))\nprev_disease_dist&lt;-mapply(sample_beta, prev_disease_stat$mean, prev_disease_stat$sd)\ncolnames(prev_disease_dist)&lt;-prev_disease_stat$FarmType\n\nprev_disease&lt;-as.data.frame(prev_disease_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Health</span>"
    ]
  },
  {
    "objectID": "chapters/health.html#pain-tracks-1",
    "href": "chapters/health.html#pain-tracks-1",
    "title": "Health",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nWe model mostly on information about White Spot Syndrome Virus (WSSV) and Acute Hepatopancreatic Necrosis Disease (AHPND), as many sources report that these have most negatively impacted industry production, suggesting they are the most prevalent. While Flegel (2019, Fig. 3) shows that the impact of AHPND on production was most severe, WSSV has been present for much longer (since ~1996) and shrimp are still affected today, so we weight each equally.We combine these into one pain track by multiplying each by half (since most shrimp die from these diseases, its likely they do not experience both).\n\nAHPND duration and pain:\n\nahpnd_dur_disease&lt;-runif(n, 12, 600)\n\nahpnd_pain_disease&lt;-data.frame(sample_dirichlet(0.01, 10, 80, 9.99)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nWSSV duration and pain:\n\nwssv_dur_disease&lt;-runif(n, 72, 240)\n\nwssv_pain_disease&lt;-data.frame(sample_dirichlet(0.05, 30, 50, 19.95)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine into Pain-Tracks:\n\npaintrack_disease&lt;-(ahpnd_dur_disease * ahpnd_pain_disease * 0.5) + (\n  wssv_dur_disease * wssv_pain_disease * 0.5)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nAHPND Tran et al. (2014, p. 14) note that “With regards to the EMS/AHPND, our studies show that shrimp exhibit very acute mortality as early as 12 hours of exposure to the agent.” WOAH (2023, Ch. 2.2.1, p. 2) notes that mass mortalities occur within 30–35 days of stocking the pond and that signs of disease can occur as early as 10 days post–stocking. We take 25 days as our upper bound, which is 600 hours\nWSSV WOAH (2023, Ch. 2.2.8, p.3) reports “A very high mortality rate in the shrimp population can be expected within a few days of the onset of behavioral signs” – we therefore put duration at 3 to 10 days\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nAHPND A behavioral sign is dropping to the bottom of the pond, while physiological signs are soft shells and pigment loss in the connective tissue.\nWSSV Symptoms include (WOAH, 2023, Ch. 2.2.8, p.3):\n\nLethargy\nReduced or ceased feeding\nAbnormal swimming (slow, on the side, near water surface or round edges of pond)\nLoosened attachment of the carapace\nDelayed hemolymph clotting\n\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type.\n\ndisease_farms&lt;-data.frame(\n  ext = paintrack_disease*prev_disease$Extensive*prop_sample$Ext,\n  semi = paintrack_disease*prev_disease$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_disease*prev_disease$Intensive*prop_sample$Int,\n  super = paintrack_disease*prev_disease$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\ndisease&lt;-disease_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_disease &lt;- disease %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_disease$Disabling_Equivalent&lt;- (\n  average_hours_disease$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_disease$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_disease$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_disease$allfarms.Excruciating*Excruciating_Weight)\n\ndisease_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_disease$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_disease$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_disease$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_disease$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_disease$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_disease))\nrow.names(disease_summary)&lt;-c(\n  \"Annoying_disease\",\"Hurtful_disease\",\"Disabling_disease\", \"Excruciating_disease\", \"Disabling-Equivalent_Biosecurity_failures\")\nshow_table(disease_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_disease \n    1.502092 \n    3.5816294 \n    7.2225245 \n    3.8682486 \n  \n  \n    Hurtful_disease \n    5.965176 \n    18.9903490 \n    39.1769788 \n    20.2445222 \n  \n  \n    Disabling_disease \n    2.043777 \n    4.5430569 \n    8.7223413 \n    4.8527187 \n  \n  \n    Excruciating_disease \n    0.000000 \n    0.0000005 \n    0.0352904 \n    0.0070193 \n  \n  \n    Disabling-Equivalent_Biosecurity_failures \n    2.902055 \n    7.2178666 \n    24.1251903 \n    10.6472735",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Health</span>"
    ]
  },
  {
    "objectID": "chapters/transportation.html",
    "href": "chapters/transportation.html",
    "title": "Transportation",
    "section": "",
    "text": "Waterless transport",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transportation</span>"
    ]
  },
  {
    "objectID": "chapters/transportation.html#prevalence",
    "href": "chapters/transportation.html#prevalence",
    "title": "Transportation",
    "section": "Prevalence",
    "text": "Prevalence\nOnly broodstock shrimp being transported by air and shrimp sold live are transported without water. Therefore, we think extensive farms are very unlikely to use waterless transportation, semi-intensive are somewhat likely, and intensive and super-intensive are very likely, though we are most uncertain about semi-intensive and intensive farms. We then weight these prevalences by the proportion of shrimp who are broodstock and the proportion that are sold live (which we estimate to be around 2%).\nNot all broodstock are transported every year, some are found in domestic hatcheries, so we multiply the broodstock proportion by a distribution between 0.2 to 0.5 to account for this.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n0–10% (mean 5%)\n0–50% (mean 25%)\n50–100% (mean 75%)\n80–100% (mean 90%)\n\n\n\nfind_good_sd_binary(mean_val=0.05, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.1)\nfind_good_sd_binary(mean_val=0.25, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.5)\nfind_good_sd_binary(mean_val=0.75, tol=1e-6, \n                   fifth_percentile=0.5, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.9, tol=1e-6, \n                   fifth_percentile=0.8, ninety_fifth_percentile=1)\n\n\n\n[1] 0.0368478\n\n\n[1] 0.1727593\n\n\n[1] 0.1725248\n\n\n[1] 0.07310057\n\n\n\nSampling from beta distribution:\n\nprev_nowater_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.05, 0.25, 0.75, 0.9),\n                               sd = c(0.0368478, 0.1727593, 0.1725248, 0.07310057))\nprev_nowater_dist&lt;-mapply(sample_beta, prev_nowater_stat$mean, prev_nowater_stat$sd)\ncolnames(prev_nowater_dist)&lt;-prev_nowater_stat$FarmType\n\nprev_nowater_unadjusted&lt;-as.data.frame(prev_nowater_dist)\n\n\nsold_live&lt;-runif(n, min=0.01, max=0.02)\nbroodstock_transported&lt;-runif(n, min=0.2, max=0.5)\nWaterless_Population_Proportion=((female_broodstock_prop*2)*broodstock_transported)+sold_live # adding shrimp who are sold live (estimated to be between 1% to 5% of shrimp) to proportion of broodstock (calculated as proportion of broodstock that are female, multiplied by two)\nplot(density(Waterless_Population_Proportion))\n\n\n\n\n\n\n\nprev_nowater&lt;-prev_nowater_unadjusted*Waterless_Population_Proportion",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transportation</span>"
    ]
  },
  {
    "objectID": "chapters/transportation.html#pain-tracks",
    "href": "chapters/transportation.html#pain-tracks",
    "title": "Transportation",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur hypothesized pain category allocations are as follows:\n\n\ndur_nowater = rtruncnorm(n, a=4, b=72, mean=30, sd = 8)\n\npain_nowater&lt;-data.frame(sample_dirichlet(0.03, 0.06, 39, 60.91)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_nowater&lt;-(dur_nowater * pain_nowater)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nWe estimate a rough total shipment time as 15-35 hours. This is based on the fact that American Penaeid, Inc. report being three and a half hours away from international airports and that their customers are 8-28 hours away by plane. If we account for travel from the airport to the hatchery by assuming another 3.5 hours of travel time, then we arrive at our estimation of 15–35 hours. Our maximum duration comes from Benchmark Genetics Shrimp, who say they are prepared to acclimatize broodstock who have traveled for up to 72 hours.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nReducing temperature over 30 minutes in preparation for travel can causes oxidative stress, significantly increases mortality for trips of at least 10 hours (Xu et al., 2021). An operator we called at American Penaeid for our previous report estimated an ~85% survival rate for broodstock. Survival rates of “up to 80 percent” after 12 to 24 hours are often reported (Goodrick et al., 1993; Xu et al., 2021). Survival may actually be worse than is reported because conditions are likely better controlled in studies than they are in practice.\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type, as well as the average days lived by a shrimp.\n\nnowater_farms&lt;-data.frame(\n  ext = paintrack_nowater*prev_nowater$Extensive*prop_sample$Ext,\n  semi = paintrack_nowater*prev_nowater$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_nowater*prev_nowater$Intensive*prop_sample$Int,\n  super = paintrack_nowater*prev_nowater$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nnowater&lt;-nowater_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_nowater &lt;- nowater %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_nowater$Disabling_Equivalent&lt;- (\n  average_hours_nowater$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_nowater$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_nowater$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_nowater$allfarms.Excruciating*Excruciating_Weight)\n\nnowater_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_nowater$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_nowater$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_nowater$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_nowater$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_nowater$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_nowater))\nrow.names(nowater_summary)&lt;-c(\n  \"Annoying_nowater\",\"Hurtful_nowater\",\"Disabling_nowater\", \"Excruciating_nowater\", \"Disabling-Equivalent_Waterless_transport\")\nshow_table(nowater_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_nowater \n    0.0671469 \n    0.1535110 \n    0.2854226 \n    0.1619378 \n  \n  \n    Hurtful_nowater \n    0.0421204 \n    0.0977178 \n    0.1853090 \n    0.1036313 \n  \n  \n    Disabling_nowater \n    0.0000000 \n    0.0000000 \n    0.0008299 \n    0.0001546 \n  \n  \n    Excruciating_nowater \n    0.0000000 \n    0.0000000 \n    0.0002784 \n    0.0000797 \n  \n  \n    Disabling-Equivalent_Waterless_transport \n    0.0032078 \n    0.0123732 \n    0.1266985 \n    0.0524291",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transportation</span>"
    ]
  },
  {
    "objectID": "chapters/transportation.html#prevalence-1",
    "href": "chapters/transportation.html#prevalence-1",
    "title": "Transportation",
    "section": "Prevalence",
    "text": "Prevalence\nWe do not assess brief cases of shrimp being transferred between tanks or ponds on the same farm—even though it is likely to cause some stress, the magnitude is not that of the other welfare threats we evaluate. Any shrimp transported between facilities within the same country are usually transported using water-based methods. Since most farms probably do not have on-site hatcheries, this means that most shrimp are transported in this way at some point, though we are somewhat uncertain about this. Super-intensive facilities are more likely to have on-site hatcheries.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n50–100% (mean 75%)\n90–100% (mean 95%)\n50–90% (mean 70%)\n10–90% (mean 50%)\n\n\n\nfind_good_sd_binary(mean_val=0.75, tol=1e-6,\n                   fifth_percentile=0.5, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.95, tol=1e-6,\n                   fifth_percentile=0.9, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.7, tol=1e-6, #sd_val=0.15,\n                   fifth_percentile=0.5, ninety_fifth_percentile=0.9)\nfind_good_sd_binary(mean_val=0.5, tol=1e-6, #sd_val=0.05,\n                   fifth_percentile=0.1, ninety_fifth_percentile=0.9)\n\n\n\n[1] 0.1731566\n\n\n[1] 0.0368054\n\n\n[1] 0.1244102\n\n\n[1] 0.2482915\n\n\n\nSampling from beta distribution:\n\nprev_water_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.75, 0.95, 0.7, 0.5),\n                               sd = c(0.1731566, 0.0368054, 0.1244102, 0.2482915))\nprev_water_dist&lt;-mapply(sample_beta, prev_water_stat$mean, prev_water_stat$sd)\ncolnames(prev_water_dist)&lt;-prev_water_stat$FarmType\n\nprev_water&lt;-as.data.frame(prev_water_dist)",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transportation</span>"
    ]
  },
  {
    "objectID": "chapters/transportation.html#pain-tracks-1",
    "href": "chapters/transportation.html#pain-tracks-1",
    "title": "Transportation",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur hypothesized pain category allocations are as follows:\n\n\ndur_water = rtruncnorm(n, a=0.1, b=72, mean=24, sd = 16)\n\npain_water&lt;-data.frame(sample_dirichlet(0.03, 0.1, 25, 74.87)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_water&lt;-(dur_water * pain_water)\n\n\n\n\n\n\n\nDuration\n\n\n\n\n\nWe estimate that water-based transport could, in theory, last from a few minutes up to 72 hours but that longer durations are less common.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nMortality rates can reach 25% for 24-hour trips (Debnath et al., 2015, Table 3). High densities during transportation also pose risks to water quality, including dissolved oxygen depletion and increased ammonia concentrations. As some individuals become weaker, incidences of cannibalism can also rise. We account for these issues here because they are separate from dissolved oxygen and ammonia in farm ponds.\nWe assign pain to the ‘annoying’ and ‘hurtful’ categories to account for restricted movement and behavior, and to ‘disabling’ and ‘excruciating’ to account for cannibalism and mortality.\n\n\n\nThen we combine all of the estimations for water-based transport.\n\nwater_farms&lt;-data.frame(\n  ext = paintrack_water*prev_water$Extensive*prop_sample$Ext,\n  semi = paintrack_water*prev_water$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_water*prev_water$Intensive*prop_sample$Int,\n  super = paintrack_water*prev_water$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nwater&lt;-water_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_water &lt;- water %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_water$Disabling_Equivalent&lt;- (\n  average_hours_water$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_water$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_water$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_water$allfarms.Excruciating*Excruciating_Weight)\n\nwater_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_water$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_water$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_water$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_water$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_water$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_water))\nrow.names(water_summary)&lt;-c(\n  \"Annoying_water\",\"Hurtful_water\",\"Disabling_water\", \"Excruciating_water\", \"Disabling-Equivalent_Water-based_transport\")\nshow_table(water_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_water \n    2.6230708 \n    13.9280642 \n    29.1203058 \n    14.6228313 \n  \n  \n    Hurtful_water \n    0.8450727 \n    4.5302856 \n    10.1136136 \n    4.8780652 \n  \n  \n    Disabling_water \n    0.0000000 \n    0.0000931 \n    0.1064375 \n    0.0195400 \n  \n  \n    Excruciating_water \n    0.0000000 \n    0.0000000 \n    0.0190364 \n    0.0058738 \n  \n  \n    Disabling-Equivalent_Water-based_transport \n    0.0968607 \n    0.6170167 \n    8.4886314 \n    3.5948063",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transportation</span>"
    ]
  },
  {
    "objectID": "chapters/harvest_slaughter.html",
    "href": "chapters/harvest_slaughter.html",
    "title": "End of production",
    "section": "",
    "text": "Harvest\nHere, we are evaluating any collection method that does not kill the shrimp before removing them from the ponds or tanks nor pumps them directly to slaughter. This includes cast nets or seine nets, scoop nets, draining shrimp out of the pond into a net, and mechanically pumping shrimp out of the pond.",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>End of production</span>"
    ]
  },
  {
    "objectID": "chapters/harvest_slaughter.html#prevalence",
    "href": "chapters/harvest_slaughter.html#prevalence",
    "title": "End of production",
    "section": "Prevalence",
    "text": "Prevalence\nAll shrimp who make it to slaughter age are harvested. Some intensive and super-intensive farms use pumps that pump shrimp directly into the ice slurry slaughter, so these do not apply to this welfare threat. Therefore, we use ranges between 99 to 100% and 95 to 100%, respectively.\nExtensive and semi-intensive farms probably only use collection methods of the type considered here, so we set these to 100%.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\n\n\n100%\n100%\n99–100%\n95–100%\n\n\n\nfind_good_sd_binary(mean_val=0.995, tol=1e-6, sd_val=0.01,\n                   fifth_percentile=0.99, ninety_fifth_percentile=1)\nfind_good_sd_binary(mean_val=0.975, tol=1e-6, sd_val=0.01,\n                   fifth_percentile=0.95, ninety_fifth_percentile=1)\n\n\n\n[1] 0.003744034\n\n\n[1] 0.01852459\n\n\n\nSampling from beta distribution:\n\nprev_harvest_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.99999, 0.999999, 0.995, 0.975),\n                               sd = c(0.0000001, 0.0000001, 0.003744034, 0.01852459))\nprev_harvest_dist&lt;-mapply(sample_beta, prev_harvest_stat$mean, prev_harvest_stat$sd)\ncolnames(prev_harvest_dist)&lt;-prev_harvest_stat$FarmType\nprev_harvest_dist[,1:2] &lt;- 1\n\nprev_harvest_unadjusted&lt;-as.data.frame(prev_harvest_dist)\nprev_harvest&lt;-prev_harvest_unadjusted*stage_probabilities[,3] # weighting by the probability a shrimp makes it to slaughter age",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>End of production</span>"
    ]
  },
  {
    "objectID": "chapters/harvest_slaughter.html#pain-tracks",
    "href": "chapters/harvest_slaughter.html#pain-tracks",
    "title": "End of production",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nOur hypothesized pain category allocations are as follows:\n\nWe think the duration of harvest varies by farm type so we construct a Pain-Track for each farm type. However, we use the same pain intensity attributions for each.\n\ndur_harvest_ext&lt;-runif(n, 1/3, 1) \ndur_harvest_semi&lt;-runif(n, 1/3, 1)\ndur_harvest_int&lt;-runif(n, 1/6, 0.75)\ndur_harvest_super&lt;-runif(n, 1/12, 1/3)\n\npain_harvest&lt;-data.frame(sample_dirichlet(1, 20, 69, 10)) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_harvest_ext&lt;-(dur_harvest_ext * pain_harvest)\n\npaintrack_harvest_semi&lt;-(dur_harvest_semi * pain_harvest)\n\npaintrack_harvest_int&lt;-(dur_harvest_int * pain_harvest)\n\npaintrack_harvest_super&lt;-(dur_harvest_super * pain_harvest)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nFarmer’s often lower the level of water in the pond then use a dragnet to collect shrimp. Shrimp are sometimes taken out of the dragnet in smaller groups (e.g. see this video). In these cases, shrimp left in the dragnet may be experience long periods before being collected out of the ponds. Shrimp Welfare Project’s (2022, p.15) India Scoping Report states that “once shrimp are taken from the water via a dragnet, they are placed in crates and left for several minutes before being weighed.”\nAdditionally, some shrimp will be taken out of the pond and then discarded in the sorting process (e.g. due to discoloration). These shrimp likely die from air exposure. Even shrimp who are not discardede may die during this evaluation period, as death from oxidative stress only takes a bit longer than 30 minutes for P. vannamei (Liu et al., 2015). We attempt to account for these instances by estimating a maximum harvest length of an hour.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nShrimp who are collected out of the ponds experience prolonged air exposure, which could cause death by suffocation. They may also be crushed by other shrimp or by farm workers. We, therefore, assign most pain to ‘hurtful’ and ‘disabling’.\n\n\n\nWeight the pain tracks by prevalence estimations and proportion of farming attributable to each farm type.\n\nharvest_farms&lt;-data.frame(\n  ext = paintrack_harvest_ext*prev_harvest$Extensive*prop_sample$Ext,\n  semi = paintrack_harvest_semi*prev_harvest$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_harvest_int*prev_harvest$Intensive*prop_sample$Int,\n  super = paintrack_harvest_super*prev_harvest$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nharvest&lt;-harvest_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_harvest &lt;- harvest %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_harvest$Disabling_Equivalent&lt;- (\n  average_hours_harvest$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_harvest$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_harvest$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_harvest$allfarms.Excruciating*Excruciating_Weight)\n\nharvest_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_harvest$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_harvest$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_harvest$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_harvest$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_harvest$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_harvest))\nrow.names(harvest_summary)&lt;-c(\n  \"Annoying_harvest\",\"Hurtful_harvest\",\"Disabling_harvest\", \"Excruciating_harvest\", \"Disabling-Equivalent_Harvest\")\nshow_table(harvest_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_harvest \n    0.0128554 \n    0.0319189 \n    0.0625832 \n    0.0340299 \n  \n  \n    Hurtful_harvest \n    0.1148507 \n    0.2319090 \n    0.3655179 \n    0.2347488 \n  \n  \n    Disabling_harvest \n    0.0296953 \n    0.0655724 \n    0.1148003 \n    0.0680293 \n  \n  \n    Excruciating_harvest \n    0.0001429 \n    0.0022085 \n    0.0107088 \n    0.0033801 \n  \n  \n    Disabling-Equivalent_Harvest \n    0.1149168 \n    0.9550166 \n    6.3192196 \n    1.7883996",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>End of production</span>"
    ]
  },
  {
    "objectID": "chapters/harvest_slaughter.html#prevalence-1",
    "href": "chapters/harvest_slaughter.html#prevalence-1",
    "title": "End of production",
    "section": "Prevalence",
    "text": "Prevalence\nAll shrimp who are slaughtered are slaughtered using ice slurry, bar those on farms that the Shrimp Welfare Project has provided electrical stunners to. SWP currently estimate they have helped 1.2 billion shrimp by providing electrical stunners—that’s 0.3% of the number of penaeids slaughtered per year:\n\nslaughtered_samp&lt;-read.csv(file=\"../data/slaughtered_samples.csv\") # from Guesstimate model\nslaughtered_samp&lt;-slaughtered_samp[,1:3] # keep only penaeids\n\n# sum across rows\nslaughtered_samp_totals&lt;-slaughtered_samp %&gt;% \n  mutate(total=vannamei + monodon + other_pen)\n\n(1200000000/mean(slaughtered_samp_totals$total))*100\n\n[1] 0.2990682\n\n\nShrimp who are sold live are not slaughtered so we must account for this in our estimations. We, therefore, estimate that all farm types are 98% likely to use ice slurry to slaughter shrimp. We then account for the fact that only shrimp who make it slaughter age and do not die during collection are slaughtered. To do this, we weight by the relevant life-stage proportions, and by our estimate that between 0% and 50% of shrimp die during collection, before slaughter.\nOur prevalence estimates are:\n\n\n\n\n\n\n\n\n\n\n\nExtensive\nSemi-intensive\nIntensive\nSuper-intensive\n\n\nPrevalence of using ice slurry\n50–90%\n60–95%\n98–100%\n100%\n\n\nDie before slaughter on farms that use ice\n0–50%\n0–50%\n0–25%\n0%\n\n\n\nFirst, we draw from the beta distribution for the prevalence of using ice slurry:\nfind_good_sd_binary(mean_val=0.7, tol=1e-6,\n                   fifth_percentile=0.5, ninety_fifth_percentile=0.9)\nfind_good_sd_binary(mean_val=0.775, tol=1e-6,\n                   fifth_percentile=0.6, ninety_fifth_percentile=0.95)\nfind_good_sd_binary(mean_val=0.9885, tol=1e-6, sd_val=0.1,\n                   fifth_percentile=0.98, ninety_fifth_percentile=0.997)\n\n\n\n[1] 0.1243683\n\n\n[1] 0.1120429\n\n\n[1] 0.005626181\n\n\n\nSampling from beta distribution:\n\nprev_iceslurry_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"),\n                               mean = c(0.7, 0.775, 0.9885, 0.99999),\n                               sd = c(0.1243683, 0.1120429, 0.005626181, 0.00001))\nprev_iceslurry_dist&lt;-mapply(sample_beta, prev_iceslurry_stat$mean, prev_iceslurry_stat$sd)\ncolnames(prev_iceslurry_dist)&lt;-prev_iceslurry_stat$FarmType\nprev_iceslurry_dist[,4]&lt;-1\n\nThen, the prevalence of shrimp that die after harvest, before slaughter.\nfind_good_sd_binary(mean_val=0.25, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.5)\nfind_good_sd_binary(mean_val=0.125, tol=1e-6,\n                   fifth_percentile=0, ninety_fifth_percentile=0.25)\n\n\n\n[1] 0.1729832\n\n\n[1] 0.08962196\n\n\n\n\nprev_slaught_stat &lt;- data.frame(FarmType = c(\n  \"Extensive\", \"Semi-Intensive\",\"Intensive\",\"Super-Intensive\"), mean = c(0.25, 0.25, 0.125, 0.00001),\n  sd = c(0.1729832, 0.1729832, 0.08962196, 0.00001))\nprev_slaught_dist&lt;-mapply(sample_beta, prev_slaught_stat$mean, prev_slaught_stat$sd)\ncolnames(prev_slaught_dist)&lt;-prev_slaught_stat$FarmType\nprev_slaught_dist[,4]&lt;-1 # as we are multiplying with the ice slurry prevalences, we cannot set this to 0, as the calculation would not work. Since we just want the super-intensive prevalence to be 1, we set it to 1 here. \n\nprev_slaught_unadjusted&lt;-as.data.frame(prev_slaught_dist*prev_iceslurry_dist)\n\n# adjust for the fact that only shrimp who don't die pre-slaughter are slaughtered\nslaughter_population_proportion &lt;- stage_probabilities[,3]\n\n# adjust for shrimp slaughtered by electrical stunners provided by SWP\nelectrical_stunning&lt;-1-(1200000000/mean(slaughtered_samp_totals$total))*100\n\n# also adjust for shrimp sold live\nprev_slaught&lt;-prev_slaught_unadjusted*slaughter_population_proportion*electrical_stunning*sold_live",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>End of production</span>"
    ]
  },
  {
    "objectID": "chapters/harvest_slaughter.html#pain-tracks-1",
    "href": "chapters/harvest_slaughter.html#pain-tracks-1",
    "title": "End of production",
    "section": "Pain-Tracks",
    "text": "Pain-Tracks\nWe expect that the duration and intensity of ice slurry slaughter is roughly the same across farms types, so we use only one pain track here.\n\n\ndur_slaught&lt;-rtruncnorm(n, 0.008, 0.16, mean=0.06, sd=0.015)\n\npain_slaught&lt;-data.frame(sample_dirichlet(20, 79, 1, 0), Annoying=0) %&gt;%\n  `colnames&lt;-`(paincategories)\n\nCombine the intensity and duration information\n\npaintrack_slaught_ext&lt;-(dur_slaught * pain_slaught)\n\npaintrack_slaught_semi&lt;-(dur_slaught * pain_slaught)\n\npaintrack_slaught_int&lt;-(dur_slaught * pain_slaught)\n\npaintrack_slaught_super&lt;-(dur_slaught * pain_slaught)\n\n\n\n\n\n\n\nDuration notes\n\n\n\n\n\nWeineck et al. (2018) found that shrimp show no heart rate after around four minutes in ice slurry. We increase the maximum time it could take to seven minutes to account for the fact that ice used on farms may be slightly warmer than in laboratory conditions.\n\n\n\n\n\n\n\n\n\nIntensity notes\n\n\n\n\n\nWhether shrimp feel pain during ice slurry slaughter is highly uncertain. P. vannamei shrimp tail-flick vigorously after being submerged in the ice slurry (Weineck et al., 2018). Tail-flicking is a reflex—when shrimp’ abdomens are removed from the rest of their body, they still show tail-flicking activity (Weineck et al., 2018). As such, it is unlikely to be, by itself, a reliable indicator of pain. However, that does not necessarily mean that the individual cannot consciously experience it.\nThe salinity of ice slurry is also likely to be different from that of the pond. Given that shrimp can detect cold (Tani & Kuramoto, 1998) and are likely to be stressed from being out of the pond and in an environment of different temperature and salinity, we assign most pain to ‘hurtful’ and ‘disabling’.\n\n\n\nFinally, we combine the prevalence, intensity, and duration estimates.\n\nslaught_farms&lt;-data.frame(\n  ext = paintrack_slaught_ext*prev_slaught$Extensive*prop_sample$Ext,\n  semi = paintrack_slaught_semi*prev_slaught$`Semi-Intensive`*prop_sample$Semi,\n  int = paintrack_slaught_int*prev_slaught$Intensive*prop_sample$Int,\n  super = paintrack_slaught_super*prev_slaught$`Super-Intensive`*prop_sample$Super)\n\nAdd the pain categories across farm types and calculate the disabling-equivalent pain hours.\n\nslaught&lt;-slaught_farms %&gt;%\n  mutate(allfarms.Annoying = ext.Annoying + semi.Annoying + int.Annoying + super.Annoying,\n         allfarms.Hurtful = ext.Hurtful + semi.Hurtful + int.Hurtful + super.Hurtful,\n         allfarms.Disabling = ext.Disabling + semi.Disabling + int.Disabling + super.Disabling,\n         allfarms.Excruciating = ext.Excruciating + semi.Excruciating + int.Excruciating + super.Excruciating,)\n\naverage_hours_slaught &lt;- slaught %&gt;%\n  select(starts_with(\"allfarms\"))\n\naverage_hours_slaught$Disabling_Equivalent&lt;- (\n  average_hours_slaught$allfarms.Annoying*Annoying_Weight) + (\n    average_hours_slaught$allfarms.Hurtful*Hurtful_Weight) +(\n      average_hours_slaught$allfarms.Disabling*Disabling_Weight)+(\n        average_hours_slaught$allfarms.Excruciating*Excruciating_Weight)\n\nslaught_summary&lt;-cbind(round(rbind(\n  (quantile(x =average_hours_slaught$allfarms.Annoying, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_slaught$allfarms.Hurtful, probs = c(.05, .50, .95))), \n  (quantile(x =average_hours_slaught$allfarms.Disabling, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_slaught$allfarms.Excruciating, probs = c(.05, .50, .95))),\n  (quantile(x =average_hours_slaught$Disabling_Equivalent, probs = c(.05, .50, .95)))), 10),\n  \"Mean\" = colMeans(average_hours_slaught))\nrow.names(slaught_summary)&lt;-c(\n  \"Annoying_slaught\",\"Hurtful_slaught\",\"Disabling_slaught\", \"Excruciating_slaught\", \"Disabling-Equivalent_Ice-Slurry_slaughter\")\nshow_table(slaught_summary)\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n  \n \n\n  \n    Annoying_slaught \n    0.0000000 \n    0.0000000 \n    0.0000000 \n    0.0000000 \n  \n  \n    Hurtful_slaught \n    0.0000000 \n    0.0000003 \n    0.0000022 \n    0.0000006 \n  \n  \n    Disabling_slaught \n    0.0000124 \n    0.0000426 \n    0.0001098 \n    0.0000494 \n  \n  \n    Excruciating_slaught \n    0.0000029 \n    0.0000105 \n    0.0000287 \n    0.0000125 \n  \n  \n    Disabling-Equivalent_Ice-Slurry_slaughter \n    0.0004258 \n    0.0046073 \n    0.0181189 \n    0.0063178",
    "crumbs": [
      "Welfare threats",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>End of production</span>"
    ]
  },
  {
    "objectID": "chapters/results.html",
    "href": "chapters/results.html",
    "title": "Results",
    "section": "",
    "text": "Now we put the results from each welfare threat into one table.\nWe calculate the total time in disabling-equivalent pain, using all of the 100,000 simulations. Then, we calculate the 5th, 50th, and 95th percentiles for the total time in pain.\n\n# load disabling-equivalent estimates\n\ntotals_files &lt;- list.files(path=\"../results/full_results\", pattern='\\\\.csv$', full.names=TRUE)\n\ntotals_csv &lt;- lapply(totals_files, read.csv,)\n\nnames(totals_csv) &lt;- gsub(\".csv\",\"\",\n                       list.files(\"../results/full_results\", pattern='\\\\.csv$', full.names = FALSE), fixed = TRUE)\n\nlist2env(totals_csv, globalenv())\n\n\n# putting all the disabling-equivalent estimates (100,000 for each threat) into one data frame\ntotals&lt;-data.frame(Eyestalk_ablation = ablation[,5],\n              `High_un-ionized_ammonia` = ammon[,5],\n              High_stocking_density=dens[,5],\n              Biosecurity_failures=disease[,5],\n              Harvest=harvest[,5],\n              High_temperature=hitemp[,5],\n              Hunger=hunger[,5],\n              Low_dissolved_oxygen=lowdo[,5],\n              Low_temperature=lowtemp[,5],\n              Malnutrition=malnu[,5],\n              Waterless_transport=nowater[,5],\n              Nonoptimal_pH=ph[,5],\n              Pollutants=pollute[,5],\n              Predators=pred[,5],\n              Low_salinity=salin[,5],\n              `Ice-slurry_slaughter`=slaught[,5],\n              Lack_of_substrate=subst[,5],\n              `Water-based_transport`=water[,5])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ntotals &lt;- totals %&gt;%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ntotals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Total\", round(rbind(\n  quantile(x=totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(totals$Total)))\ntotals_summary[,2:5]&lt;-as.numeric(totals_summary[,2:5])\n\ntotals_summary\n\n  welfare_threat       5%      50%      95%     Mean\n1          Total 25.06219 112.2686 351.7476 154.1117\n\n\n\n## Results\n\n#Putting all the outputs into a table:\n\ncomparison_table&lt;-rbind(hunger_summary, malnu_summary, lowdo_summary, hitemp_summary, lowtemp_summary, salin_summary, ph_summary, ammon_summary, pollute_summary, density_summary, subst_summary, pred_summary, ablation_summary, nowater_summary, water_summary, harvest_summary, slaught_summary, disease_summary)\n\ncolnames(comparison_table)&lt;-c(\"welfare_threat\",\"5%\", \"50%\", \"95%\", \"Mean\")\n\n# keeping only the disabling-equivalent pain estimations, which occur every 5th row\ndiseq_results&lt;-comparison_table %&gt;%\n  dplyr::filter(str_detect(welfare_threat, \"Disabling-Equivalent\"))\n\n# arranging the rows in descending order and adding a total row.\nresults&lt;-as.data.frame(diseq_results, rownames=TRUE) %&gt;%\n  arrange(desc(Mean)) %&gt;%\n  rbind(totals_summary) %&gt;%\n  column_to_rownames(\"welfare_threat\") %&gt;%\n  mutate(`5%` = signif(`5%`, pmax(2,trunc(log10(`5%`)+1))), # rounding all results to 2 significant figure, except those with more than two significant digits before the decimal point (log10 counts the digits)\n         `50%` = signif(`50%`, pmax(2,trunc(log10(`50%`)+1))),\n         `95%` = signif(`95%`, pmax(2,trunc(log10(`95%`)+1))),\n          Mean = signif(Mean, pmax(2,trunc(log10(Mean)+1))),\n         `Mean (minutes)`=signif(Mean*60, pmax(2,trunc(log10(Mean*60)+1)))) %&gt;% # displaying small results in minutes\n  mutate(`Mean (minutes)` = ifelse(Mean&gt;1, \"—\", `Mean (minutes)`)) %&gt;% # removing display of large results in minutes\n  mutate(across(where(is.numeric), as.character))\n\n# cleaning up the row names\nrownames(results)&lt;-gsub(\"Disabling-Equivalent_\",\"\", rownames(results))\nrownames(results)&lt;-gsub(\"_\",\" \", rownames(results))\n\n\n# print results\nshow_table(results) %&gt;%\n  row_spec(19, bold = T, background = \"lightgrey\")\n\n\n \n  \n      \n    5% \n    50% \n    95% \n    Mean \n    Mean (minutes) \n  \n \n\n  \n    High stocking density \n    5.2 \n    49 \n    112 \n    64 \n    — \n  \n  \n    High un-ionized ammonia \n    0.75 \n    8.1 \n    108 \n    30 \n    — \n  \n  \n    Low dissolved oxygen \n    1.8 \n    5.3 \n    57 \n    18 \n    — \n  \n  \n    Lack of substrate \n    1.2 \n    11 \n    24 \n    13 \n    — \n  \n  \n    Biosecurity failures \n    2.9 \n    7.2 \n    24 \n    11 \n    — \n  \n  \n    Low salinity \n    0.25 \n    2.7 \n    14 \n    6.9 \n    — \n  \n  \n    High temperature \n    0.034 \n    0.39 \n    18 \n    3.9 \n    — \n  \n  \n    Water-based transport \n    0.097 \n    0.62 \n    8.5 \n    3.6 \n    — \n  \n  \n    Harvest \n    0.11 \n    0.96 \n    6.3 \n    1.8 \n    — \n  \n  \n    Nonoptimal pH \n    0.043 \n    0.42 \n    1.9 \n    1.4 \n    — \n  \n  \n    Pollutants \n    0.025 \n    0.26 \n    2.4 \n    0.95 \n    57 \n  \n  \n    Hunger \n    0.089 \n    0.3 \n    0.81 \n    0.38 \n    23 \n  \n  \n    Predators \n    0.0072 \n    0.075 \n    0.4 \n    0.28 \n    17 \n  \n  \n    Waterless transport \n    0.0032 \n    0.012 \n    0.13 \n    0.052 \n    3.1 \n  \n  \n    Low temperature \n    0.0029 \n    0.031 \n    0.12 \n    0.043 \n    2.6 \n  \n  \n    Malnutrition \n    0.0094 \n    0.033 \n    0.095 \n    0.04 \n    2.4 \n  \n  \n    Ice-Slurry slaughter \n    0.00043 \n    0.0046 \n    0.018 \n    0.0063 \n    0.38 \n  \n  \n    Eyestalk ablation \n    0.0000026 \n    0.0000066 \n    0.00002 \n    0.000012 \n    0.00072 \n  \n  \n    Total \n    25 \n    112 \n    352 \n    154 \n    — \n  \n\n\n\n\n\nWe also want to see the results broken down by pain type.\n\nannoying_totals&lt;-data.frame(Eyestalk_ablation = ablation[,1],\n              `High_un-ionized_ammonia` = ammon[,1],\n              High_stocking_density=dens[,1],\n              Biosecurity_failures=disease[,1],\n              Harvest=harvest[,1],\n              High_temperature=hitemp[,1],\n              Hunger=hunger[,1],\n              Low_dissolved_oxygen=lowdo[,1],\n              Low_temperature=lowtemp[,1],\n              Malnutrition=malnu[,1],\n              Waterless_transport=nowater[,1],\n              Nonoptimal_pH=ph[,1],\n              Pollutants=pollute[,1],\n              Predators=pred[,1],\n              Low_salinity=salin[,1],\n              `Ice-slurry_slaughter`=slaught[,1],\n              Lack_of_substrate=subst[,1],\n              `Water-based_transport`=water[,1])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nannoying_totals &lt;- annoying_totals %&gt;%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nannoying_totals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Annoying\", round(rbind(\n  quantile(x=annoying_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(annoying_totals$Total)))\nannoying_totals_summary[,2:5]&lt;-as.numeric(annoying_totals_summary[,2:5])\n\nannoying_totals_summary\n\n  welfare_threat       5%      50%     95%     Mean\n1       Annoying 682.4109 4658.133 6666.72 4174.851\n\n## Hurtful totals\nhurtful_totals&lt;-data.frame(Eyestalk_ablation = ablation[,2],\n              `High_un-ionized_ammonia` = ammon[,2],\n              High_stocking_density=dens[,2],\n              Biosecurity_failures=disease[,2],\n              Harvest=harvest[,2],\n              High_temperature=hitemp[,2],\n              Hunger=hunger[,2],\n              Low_dissolved_oxygen=lowdo[,2],\n              Low_temperature=lowtemp[,2],\n              Malnutrition=malnu[,2],\n              Waterless_transport=nowater[,2],\n              Nonoptimal_pH=ph[,2],\n              Pollutants=pollute[,2],\n              Predators=pred[,2],\n              Low_salinity=salin[,2],\n              `Ice-slurry_slaughter`=slaught[,2],\n              Lack_of_substrate=subst[,2],\n              `Water-based_transport`=water[,2])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nhurtful_totals &lt;- hurtful_totals %&gt;%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nhurtful_totals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Hurtful\", round(rbind(\n  quantile(x=hurtful_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(hurtful_totals$Total)))\nhurtful_totals_summary[,2:5]&lt;-as.numeric(hurtful_totals_summary[,2:5])\n\nhurtful_totals_summary\n\n  welfare_threat       5%      50%      95%     Mean\n1        Hurtful 111.2305 562.6624 841.3865 519.7689\n\n## Disabling\ndisabling_totals&lt;-data.frame(Eyestalk_ablation = ablation[,3],\n              `High_un-ionized_ammonia` = ammon[,3],\n              High_stocking_density=dens[,3],\n              Biosecurity_failures=disease[,3],\n              Harvest=harvest[,3],\n              High_temperature=hitemp[,3],\n              Hunger=hunger[,3],\n              Low_dissolved_oxygen=lowdo[,3],\n              Low_temperature=lowtemp[,3],\n              Malnutrition=malnu[,3],\n              Waterless_transport=nowater[,3],\n              Nonoptimal_pH=ph[,3],\n              Pollutants=pollute[,3],\n              Predators=pred[,3],\n              Low_salinity=salin[,3],\n              `Ice-slurry_slaughter`=slaught[,3],\n              Lack_of_substrate=subst[,3],\n              `Water-based_transport`=water[,3])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\ndisabling_totals &lt;- disabling_totals %&gt;%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\ndisabling_totals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Disabling\", round(rbind(\n  quantile(x=disabling_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(disabling_totals$Total)))\ndisabling_totals_summary[,2:5]&lt;-as.numeric(disabling_totals_summary[,2:5])\n\ndisabling_totals_summary\n\n  welfare_threat       5%      50%      95%     Mean\n1      Disabling 2.715309 5.516055 10.10686 5.858266\n\n## Ecruciating\nexcruciating_totals&lt;-data.frame(Eyestalk_ablation = ablation[,4],\n              `High_un-ionized_ammonia` = ammon[,4],\n              High_stocking_density=dens[,4],\n              Biosecurity_failures=disease[,4],\n              Harvest=harvest[,4],\n              High_temperature=hitemp[,4],\n              Hunger=hunger[,4],\n              Low_dissolved_oxygen=lowdo[,4],\n              Low_temperature=lowtemp[,4],\n              Malnutrition=malnu[,4],\n              Waterless_transport=nowater[,4],\n              Nonoptimal_pH=ph[,4],\n              Pollutants=pollute[,4],\n              Predators=pred[,4],\n              Low_salinity=salin[,4],\n              `Ice-slurry_slaughter`=slaught[,4],\n              Lack_of_substrate=subst[,4],\n              `Water-based_transport`=water[,4])\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nexcruciating_totals &lt;- excruciating_totals %&gt;%\n  adorn_totals(\"col\")\n\n# finding the 5th, 50th, and 95th percentiles and mean\nexcruciating_totals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Excruciating\", round(rbind(\n  quantile(x=excruciating_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(excruciating_totals$Total)))\nexcruciating_totals_summary[,2:5]&lt;-as.numeric(excruciating_totals_summary[,2:5])\n\nexcruciating_totals_summary\n\n  welfare_threat          5%        50%       95%      Mean\n1   Excruciating 0.001803573 0.02679766 0.4872938 0.1334237\n\nallpain_totals&lt;-data.frame(annoying_totals$Total,\n                           hurtful_totals$Total,\n                           disabling_totals$Total,\n                           excruciating_totals$Total)\n\n# summing across rows to get 100,000 estimates of the total disabling-equivalent hours\nallpain_totals &lt;- allpain_totals %&gt;%\n  mutate(Total=rowSums(allpain_totals))\n\n# finding the 5th, 50th, and 95th percentiles and mean\nallpain_totals_summary&lt;-as.data.frame(cbind(welfare_threat=\"Total (pain categories summed)\", round(rbind(\n  quantile(x=allpain_totals$Total, probs = c(.05, .50, .95))), 10),\n  \"Mean\" = mean(allpain_totals$Total)))\nallpain_totals_summary[,2:5]&lt;-as.numeric(allpain_totals_summary[,2:5])\n\nallpain_totals_summary\n\n                  welfare_threat       5%      50%      95%     Mean\n1 Total (pain categories summed) 803.0925 5269.631 7403.393 4700.612\n\ntotal_byintensity&lt;-rbind(annoying_totals_summary, hurtful_totals_summary,\n                         disabling_totals_summary, excruciating_totals_summary)\n\npercent&lt;-total_byintensity %&gt;%\n  mutate(as.percent=(Mean/sum(Mean))*100)\n\n\npaintype_results&lt;-plyr::rbind.fill(percent, allpain_totals_summary)\nshow_table(paintype_results)\n\n\n \n  \n    welfare_threat \n    5% \n    50% \n    95% \n    Mean \n    as.percent \n  \n \n\n  \n    Annoying \n    682.4108779 \n    4658.1333172 \n    6666.7204653 \n    4174.8509724 \n    88.8150593 \n  \n  \n    Hurtful \n    111.2305404 \n    562.6623918 \n    841.3865372 \n    519.7689275 \n    11.0574745 \n  \n  \n    Disabling \n    2.7153089 \n    5.5160549 \n    10.1068551 \n    5.8582665 \n    0.1246278 \n  \n  \n    Excruciating \n    0.0018036 \n    0.0267977 \n    0.4872938 \n    0.1334237 \n    0.0028384 \n  \n  \n    Total (pain categories summed) \n    803.0924967 \n    5269.6313016 \n    7403.3933105 \n    4700.6115901 \n    NA \n  \n\n\n\n\n\n\nresults_byintensity&lt;-comparison_table %&gt;%\n  dplyr::filter(!str_detect(welfare_threat, \"Disabling-Equivalent\")) %&gt;%\n  separate_wider_delim(welfare_threat, \"_\", names=c(\"pain_type\", \"welfare_threat\"))\n\npercent_byintensity&lt;-results_byintensity %&gt;%\n  group_by(welfare_threat) %&gt;%\n  mutate(percent=Mean/sum(Mean))\n\npercent_total&lt;-percent_byintensity %&gt;%\n  group_by(welfare_threat) %&gt;%\n  mutate(total=sum(Mean)) %&gt;%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) &gt; 1 ~ round(.x, digits = 0), TRUE ~ round(.x, digits = 4))) %&gt;%\n  mutate_at(.vars = vars(total), .funs = ~ case_when(\n    abs(.x) &gt; 0.001 ~ round(.x, digits = 2), TRUE ~ round(.x, digits = 4)))\n\n# total_by.intensity&lt;-reframe(results_byintensity, .by=pain_type, \n#                              total=sum(Mean), \n#                              total.95=sum(`95%`),\n#                             total.50=sum(`50%`),\n#                              total.5=sum(`5%`)) %&gt;%\n#   mutate(percent.total=total/sum(total))\n\npercent_overall&lt;-data.frame(\n  pain_type=c(\"Annoying\", \"Hurtful\", \"Disabling\", \"Excruciating\"),\n  welfare_threat = rep(\"Total\", 4), \n  `5%`=total_byintensity$`5%`,\n  `50%`=total_byintensity$`50%`,\n  `95%`=total_byintensity$`95%`,\n  Mean=total_byintensity$Mean,\n  percent=total_byintensity$Mean/sum(total_byintensity$Mean),\n  total=rep(sum(total_byintensity$Mean), 4))\ncolnames(percent_overall)&lt;-colnames(percent_total)\n\nresults_paintype&lt;-rbind(percent_total, percent_overall)\n\nresults_paintype$welfare_threat&lt;-gsub(\"subst\", \"Lack of substrate\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"dens\", \"High stocking density\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"salin\", \"Low salinity\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"ammon\", \"High un-ionized ammonia\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"ph\", \"Nonoptimal pH\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"lowDO\", \"Low dissolved oxygen\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"hunger\", \"Hunger\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"hitemp\", \"High temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"malnu\", \"Malnutrition\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"nowater\", \"Waterless transport\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"water\", \"Water-based transport\" , results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"pollute\", \"Pollutants\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"harvest\", \"Harvest\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"slaught\", \"Ice-Slurry slaughter\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"ablation\", \"Eyestalk ablation\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"pred\", \"Predators\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"lowtemp\", \"Low temperature\", results_paintype$welfare_threat)\nresults_paintype$welfare_threat&lt;-gsub(\"disease\", \"Biosecurity failures\", results_paintype$welfare_threat)\n\nresults_paintype$welfare_threat&lt;-factor(results_paintype$welfare_threat,\n                                        levels=c(rownames(results)))\n\nresults_paintype$pain_type&lt;-factor(results_paintype$pain_type, levels=c(\"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\nNow we can plot the results:\n\nresults_paintype$welfare_threat&lt;-factor(results_paintype$welfare_threat, levels=c(unique(rownames(results))))\n\nresults_diseq&lt;-results %&gt;%\n   rownames_to_column(var=\"welfare_threat\")\n\nresults_diseq$welfare_threat&lt;-factor(results_diseq$welfare_threat,\n                                    levels=c(unique(rownames(results))))\n \nresults_diseq$Pain&lt;-rep(\"Disabling-equivalent\")\n\nresults_diseq$Pain&lt;-factor(results_diseq$Pain, levels=c(\n  \"Disabling-equivalent\", \"Excruciating\", \"Disabling\", \"Hurtful\", \"Annoying\"))\n\n# absolute values\npaintype.plot&lt;-ggplot(results_paintype) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=Mean, xmin=`5%`, xmax=`95%`, color=pain_type), \n                  position = position_dodge2(width = 1, padding = 2), \n                  stat=\"identity\", show.legend=FALSE,\n                  size=1, linewidth=1) +\n  facet_wrap(~fct_rev(pain_type), scales=\"free_x\", ncol=3) +\n  scale_color_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity\") +\n  theme(axis.title.x = element_text(hjust=0.15),\n        axis.text=element_text(size=12),\n        strip.text = element_text(size=13))\n\ndiseq.plot&lt;-ggplot(results_diseq) +\n  geom_pointrange(aes(y=fct_rev(welfare_threat), x=as.numeric(Mean), xmin=as.numeric(`5%`), xmax=as.numeric(`95%`), color=Pain), na.rm=TRUE, position = position_dodge2(width = 1, padding = 2), stat=\"identity\", show.legend = TRUE, size=1, linewidth=1) +\n  labs(y=\"\", x=\"Hours\", color=\"Pain intensity    \") +\n  scale_color_manual(values=c(\n    \"gray30\", \"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\"), drop=FALSE) +\n  theme(legend.position=\"bottom\",\n        legend.text = element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n        legend.title=element_text(size=13),\n        axis.text.y = element_blank(),\n        axis.text.x=element_text(size=12),\n        axis.ticks.y=element_blank(),\n        plot.background = element_blank(),\n        strip.text = element_text(size=13))+\n  facet_wrap(~Pain)\n\nlayout &lt;- c(\n  area(t = 1, l = 1, b = 200, r = 220),\n  area(t = 105, l = 72, b = 200, r = 220)\n)\n\n# using the patchwork package to arrange the plots\nfig1&lt;-paintype.plot + diseq.plot +\n  plot_layout(design = layout, guides=\"collect\") & theme(legend.position = 'bottom', plot.caption = element_text(hjust = 0.7, size=12),\n  plot.margin = unit(c(top=.05,r=.1,b=.05,l=-.4), \"cm\")) \n\nfig1\n#ggsave(filename=\"../results/fig1.png\", plot=fig1, width=14, height=8.5)\n\n\nWe also plot the proportion of pain of each intensity for each welfare threat:\n\n# stacked percentage bars\nfig3&lt;-ggplot(results_paintype) +\n  geom_bar(aes(y=fct_rev(welfare_threat), x=percent, fill=pain_type), position =\"stack\", stat=\"identity\") +\n  scale_fill_manual(values=c(\"#D55E00\", \"#E69F00\", \"#56B4E9\", \"#0072B2\")) +\n    geom_text(aes(y=welfare_threat, x=1.01, label=formatC(total, format=\"fg\"),\n                  hjust=0) , na.rm=TRUE, fontface=c(rep(\"plain\", 72),\n                                                      rep(\"bold\", 4 )), size=5) +\n  geom_text(aes(y=12, x=1.1), label=expression(bold('Total hours')), \n            hjust=0, size=5, lineheight = 0.7, angle=270) +\n  theme( panel.grid.major = element_line(color=\"white\"),\n         panel.grid.minor = element_line(colour = \"white\"),\n         panel.background = element_rect(fill = \"white\"),\n         axis.ticks.y = element_blank(),\n         axis.text.y = element_text(\n           face=c( \"bold\", rep(\"plain\", 18)), size=12, margin = margin(r = 0)),\n         axis.text.x=element_text(size=13),\n         axis.title.x=element_text(size=13, hjust=0.425),\n         legend.position=\"bottom\", \n         plot.margin=margin(r=1, l=1, t=20),\n         legend.text=element_text(\n          margin = margin(r = 10, l=5, unit = \"pt\"), size=13),\n         legend.title=element_text(size=13)) +\n  labs(x=\"Proportion of pain\", y=\"\", fill=\"Pain Intensity\") +\n  scale_x_continuous(limits=c(0,1.15), expand=c(0,0), breaks = c(0.0, 0.25, 0.5, 0.75, 1)) +\n  coord_cartesian(xlim=c(0,1.15), clip = 'off') +\n  scale_y_discrete(expand=c(0,0))\nfig3\nggsave(filename=\"../results/fig3.png\", plot=fig3, width=9.5, height=5.5)",
    "crumbs": [
      "Results"
    ]
  }
]